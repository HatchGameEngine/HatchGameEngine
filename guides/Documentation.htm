<html>
    <head>
        <title>Hatch Game Engine Documentation</title>
        <style>
            body {
                background-color: white;
                font-family: sans-serif;
                margin: 64px;
            }
            codefrag {
                display: inline;
                margin: 0px;
                font-family: monospace;
            }
            a {
                text-decoration: none;
                color: #4141F2;
            }
            .function_list {
                font-family: monospace;
                margin-top: 0.5em;
            }
            .function_list li {
                margin-top: 0.125em;
                margin-bottom: 0.125em;
            }
            code, pre.code {
                background-color: #f2f2f2;
                border-radius: 3px;
                padding: 3px;
            }
            codeBlock {
                background-color: #f2f2f2;
                border-radius: 3px;
                padding: 3px;
                line-height: 100%;
                word-break: normal;
                font-family: monospace;
            }
        </style>
    </head>
    <body>
        <div style="position: fixed; margin-top: -32px; margin-left: -96px; width: 100%; text-align: right; ">
            <a href="#Reference_top">Back to top</a>
        </div>
        <h1 id="Reference_top">Hatch Game Engine Reference</h1>
        <h3>Namespaces</h3>
        <ul>
            <li><a href="#Reference_Animator">Animator</a></li>
            <li><a href="#Reference_Application">Application</a></li>
            <li><a href="#Reference_Array">Array</a></li>
            <li><a href="#Reference_Audio">Audio</a></li>
            <li><a href="#Reference_Controller">Controller</a></li>
            <li><a href="#Reference_Date">Date</a></li>
            <li><a href="#Reference_Device">Device</a></li>
            <li><a href="#Reference_Directory">Directory</a></li>
            <li><a href="#Reference_Display">Display</a></li>
            <li><a href="#Reference_Draw">Draw</a></li>
            <li><a href="#Reference_Draw3D">Draw3D</a></li>
            <li><a href="#Reference_Ease">Ease</a></li>
            <li><a href="#Reference_File">File</a></li>
            <li><a href="#Reference_Geometry">Geometry</a></li>
            <li><a href="#Reference_HTTP">HTTP</a></li>
            <li><a href="#Reference_Image">Image</a></li>
            <li><a href="#Reference_Input">Input</a></li>
            <li><a href="#Reference_Instance">Instance</a></li>
            <li><a href="#Reference_JSON">JSON</a></li>
            <li><a href="#Reference_Math">Math</a></li>
            <li><a href="#Reference_Matrix">Matrix</a></li>
            <li><a href="#Reference_Model">Model</a></li>
            <li><a href="#Reference_Music">Music</a></li>
            <li><a href="#Reference_Number">Number</a></li>
            <li><a href="#Reference_Object">Object</a></li>
            <li><a href="#Reference_Palette">Palette</a></li>
            <li><a href="#Reference_RSDK.Math">RSDK.Math</a></li>
            <li><a href="#Reference_RSDK.Matrix">RSDK.Matrix</a></li>
            <li><a href="#Reference_Random">Random</a></li>
            <li><a href="#Reference_Resources">Resources</a></li>
            <li><a href="#Reference_Scene">Scene</a></li>
            <li><a href="#Reference_Scene3D">Scene3D</a></li>
            <li><a href="#Reference_SceneList">SceneList</a></li>
            <li><a href="#Reference_Serializer">Serializer</a></li>
            <li><a href="#Reference_Settings">Settings</a></li>
            <li><a href="#Reference_Shader">Shader</a></li>
            <li><a href="#Reference_SocketClient">SocketClient</a></li>
            <li><a href="#Reference_Sound">Sound</a></li>
            <li><a href="#Reference_Sprite">Sprite</a></li>
            <li><a href="#Reference_Stream">Stream</a></li>
            <li><a href="#Reference_String">String</a></li>
            <li><a href="#Reference_Texture">Texture</a></li>
            <li><a href="#Reference_Thread">Thread</a></li>
            <li><a href="#Reference_TileCollision">TileCollision</a></li>
            <li><a href="#Reference_TileInfo">TileInfo</a></li>
            <li><a href="#Reference_Touch">Touch</a></li>
            <li><a href="#Reference_VertexBuffer">VertexBuffer</a></li>
            <li><a href="#Reference_Video">Video</a></li>
            <li><a href="#Reference_View">View</a></li>
            <li><a href="#Reference_Window">Window</a></li>
            <li><a href="#Reference_XML">XML</a></li>
        </ul>
        <h3>Instance methods</h3>
        <ul>
            <li><a href="#Reference_Instance">Instance</a></li>
        </ul>
        <h3>Enums</h3>
        <ul>
            <li><a href="#Reference_ACTIVE_*">ACTIVE_*</a></li>
            <li><a href="#Reference_Axis_*">Axis_*</a></li>
            <li><a href="#Reference_BlendFactor_*">BlendFactor_*</a></li>
            <li><a href="#Reference_BlendMode_*">BlendMode_*</a></li>
            <li><a href="#Reference_Button_*">Button_*</a></li>
            <li><a href="#Reference_CMODE_*">CMODE_*</a></li>
            <li><a href="#Reference_C_*">C_*</a></li>
            <li><a href="#Reference_Controller_*">Controller_*</a></li>
            <li><a href="#Reference_DrawBehavior_*">DrawBehavior_*</a></li>
            <li><a href="#Reference_DrawMode_*">DrawMode_*</a></li>
            <li><a href="#Reference_FLIP_*">FLIP_*</a></li>
            <li><a href="#Reference_FaceCull_*">FaceCull_*</a></li>
            <li><a href="#Reference_FileStream_*">FileStream_*</a></li>
            <li><a href="#Reference_Filter_*">Filter_*</a></li>
            <li><a href="#Reference_FogEquation_*">FogEquation_*</a></li>
            <li><a href="#Reference_GeoBooleanOp_*">GeoBooleanOp_*</a></li>
            <li><a href="#Reference_GeoFillRule_*">GeoFillRule_*</a></li>
            <li><a href="#Reference_HitboxSide_*">HitboxSide_*</a></li>
            <li><a href="#Reference_InputBind_*">InputBind_*</a></li>
            <li><a href="#Reference_InputDevice_*">InputDevice_*</a></li>
            <li><a href="#Reference_KeyBind_*">KeyBind_*</a></li>
            <li><a href="#Reference_Key_*">Key_*</a></li>
            <li><a href="#Reference_Persistence_*">Persistence_*</a></li>
            <li><a href="#Reference_Platform_*">Platform_*</a></li>
            <li><a href="#Reference_SCOPE_*">SCOPE_*</a></li>
            <li><a href="#Reference_SensorDirection_*">SensorDirection_*</a></li>
            <li><a href="#Reference_StencilOp_*">StencilOp_*</a></li>
            <li><a href="#Reference_StencilTest_*">StencilTest_*</a></li>
            <li><a href="#Reference_TILECOLLISION_*">TILECOLLISION_*</a></li>
            <li><a href="#Reference_TimeOfDay_*">TimeOfDay_*</a></li>
            <li><a href="#Reference_TintMode_*">TintMode_*</a></li>
            <li><a href="#Reference_Weekday_*">Weekday_*</a></li>
        </ul>
        <h3>Constants</h3>
        <ul>
                    <li><a href="#Reference_constants_NUM_CONTROLLER_BUTTONS">NUM_CONTROLLER_BUTTONS</a></li>
                    <li><a href="#Reference_constants_NUM_CONTROLLER_AXES">NUM_CONTROLLER_AXES</a></li>
                    <li><a href="#Reference_constants_NUM_INPUT_DEVICE_TYPES">NUM_INPUT_DEVICE_TYPES</a></li>
                    <li><a href="#Reference_constants_NUM_INPUT_BIND_TYPES">NUM_INPUT_BIND_TYPES</a></li>
                    <li><a href="#Reference_constants_MAX_SCENE_VIEWS">MAX_SCENE_VIEWS</a></li>
                    <li><a href="#Reference_constants_Math_PI">Math_PI</a></li>
                    <li><a href="#Reference_constants_Math_PI_DOUBLE">Math_PI_DOUBLE</a></li>
                    <li><a href="#Reference_constants_Math_PI_HALF">Math_PI_HALF</a></li>
                    <li><a href="#Reference_constants_Math_R_PI">Math_R_PI</a></li>
                    <li><a href="#Reference_constants_NUM_KEYBOARD_KEYS">NUM_KEYBOARD_KEYS</a></li>
                    <li><a href="#Reference_constants_MAX_PALETTE_COUNT">MAX_PALETTE_COUNT</a></li>
                    <li><a href="#Reference_constants_KeyMod_SHIFT">KeyMod_SHIFT</a></li>
                    <li><a href="#Reference_constants_KeyMod_CTRL">KeyMod_CTRL</a></li>
                    <li><a href="#Reference_constants_KeyMod_ALT">KeyMod_ALT</a></li>
                    <li><a href="#Reference_constants_KeyMod_LSHIFT">KeyMod_LSHIFT</a></li>
                    <li><a href="#Reference_constants_KeyMod_RSHIFT">KeyMod_RSHIFT</a></li>
                    <li><a href="#Reference_constants_KeyMod_LCTRL">KeyMod_LCTRL</a></li>
                    <li><a href="#Reference_constants_KeyMod_RCTRL">KeyMod_RCTRL</a></li>
                    <li><a href="#Reference_constants_KeyMod_LALT">KeyMod_LALT</a></li>
                    <li><a href="#Reference_constants_KeyMod_RALT">KeyMod_RALT</a></li>
                    <li><a href="#Reference_constants_KeyMod_NUMLOCK">KeyMod_NUMLOCK</a></li>
                    <li><a href="#Reference_constants_KeyMod_CAPSLOCK">KeyMod_CAPSLOCK</a></li>
        </ul>
        <h3>Globals</h3>
        <ul>
                    <li><a href="#Reference_globals_CameraX">CameraX</a></li>
                    <li><a href="#Reference_globals_CameraY">CameraY</a></li>
                    <li><a href="#Reference_globals_LowPassFilter">LowPassFilter</a></li>
                    <li><a href="#Reference_globals_CurrentView">CurrentView</a></li>
                    <li><a href="#Reference_globals_Scene_Frame">Scene_Frame</a></li>
                    <li><a href="#Reference_globals_Scene_TimeEnabled">Scene_TimeEnabled</a></li>
                    <li><a href="#Reference_globals_Scene_TimeCounter">Scene_TimeCounter</a></li>
                    <li><a href="#Reference_globals_Scene_Minutes">Scene_Minutes</a></li>
                    <li><a href="#Reference_globals_Scene_Seconds">Scene_Seconds</a></li>
                    <li><a href="#Reference_globals_Scene_Milliseconds">Scene_Milliseconds</a></li>
                    <li><a href="#Reference_globals_Scene_Filter">Scene_Filter</a></li>
                    <li><a href="#Reference_globals_Scene_ListPos">Scene_ListPos</a></li>
                    <li><a href="#Reference_globals_Scene_ActiveCategory">Scene_ActiveCategory</a></li>
                    <li><a href="#Reference_globals_Scene_DebugMode">Scene_DebugMode</a></li>
        </ul>
        <hr/>
        <h3>Class methods</h3>
            <p id="Reference_Animator">
                <h2>Animator</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Animator_Create">Animator.Create</a></li>
                    <li><a href="#Reference_functions_Animator_Remove">Animator.Remove</a></li>
                    <li><a href="#Reference_functions_Animator_SetAnimation">Animator.SetAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_Animate">Animator.Animate</a></li>
                    <li><a href="#Reference_functions_Animator_GetSprite">Animator.GetSprite</a></li>
                    <li><a href="#Reference_functions_Animator_GetCurrentAnimation">Animator.GetCurrentAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_GetCurrentFrame">Animator.GetCurrentFrame</a></li>
                    <li><a href="#Reference_functions_Animator_GetHitbox">Animator.GetHitbox</a></li>
                    <li><a href="#Reference_functions_Animator_GetPreviousAnimation">Animator.GetPreviousAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_GetAnimationSpeed">Animator.GetAnimationSpeed</a></li>
                    <li><a href="#Reference_functions_Animator_GetAnimationTimer">Animator.GetAnimationTimer</a></li>
                    <li><a href="#Reference_functions_Animator_GetDuration">Animator.GetDuration</a></li>
                    <li><a href="#Reference_functions_Animator_GetFrameCount">Animator.GetFrameCount</a></li>
                    <li><a href="#Reference_functions_Animator_GetLoopIndex">Animator.GetLoopIndex</a></li>
                    <li><a href="#Reference_functions_Animator_SetSprite">Animator.SetSprite</a></li>
                    <li><a href="#Reference_functions_Animator_SetCurrentAnimation">Animator.SetCurrentAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_SetCurrentFrame">Animator.SetCurrentFrame</a></li>
                    <li><a href="#Reference_functions_Animator_SetAnimationSpeed">Animator.SetAnimationSpeed</a></li>
                    <li><a href="#Reference_functions_Animator_SetAnimationTimer">Animator.SetAnimationTimer</a></li>
                    <li><a href="#Reference_functions_Animator_SetDuration">Animator.SetDuration</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustCurrentAnimation">Animator.AdjustCurrentAnimation</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustCurrentFrame">Animator.AdjustCurrentFrame</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustAnimationSpeed">Animator.AdjustAnimationSpeed</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustAnimationTimer">Animator.AdjustAnimationTimer</a></li>
                    <li><a href="#Reference_functions_Animator_AdjustDuration">Animator.AdjustDuration</a></li>
                </ul>
            </p>
            <p id="Reference_Application">
                <h2>Application</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Application_GetCommandLineArguments">Application.GetCommandLineArguments</a></li>
                    <li><a href="#Reference_functions_Application_GetEngineVersionString">Application.GetEngineVersionString</a></li>
                    <li><a href="#Reference_functions_Application_GetEngineVersionMajor">Application.GetEngineVersionMajor</a></li>
                    <li><a href="#Reference_functions_Application_GetEngineVersionMinor">Application.GetEngineVersionMinor</a></li>
                    <li><a href="#Reference_functions_Application_GetEngineVersionPatch">Application.GetEngineVersionPatch</a></li>
                    <li><a href="#Reference_functions_Application_GetEngineVersionPrerelease">Application.GetEngineVersionPrerelease</a></li>
                    <li><a href="#Reference_functions_Application_GetEngineVersionCodename">Application.GetEngineVersionCodename</a></li>
                    <li><a href="#Reference_functions_Application_GetTargetFrameRate">Application.GetTargetFrameRate</a></li>
                    <li><a href="#Reference_functions_Application_SetTargetFrameRate">Application.SetTargetFrameRate</a></li>
                    <li><a href="#Reference_functions_Application_GetFPS">Application.GetFPS</a></li>
                    <li><a href="#Reference_functions_Application_GetKeyBind">Application.GetKeyBind</a></li>
                    <li><a href="#Reference_functions_Application_SetKeyBind">Application.SetKeyBind</a></li>
                    <li><a href="#Reference_functions_Application_Quit">Application.Quit</a></li>
                    <li><a href="#Reference_functions_Application_GetGameTitle">Application.GetGameTitle</a></li>
                    <li><a href="#Reference_functions_Application_GetGameTitleShort">Application.GetGameTitleShort</a></li>
                    <li><a href="#Reference_functions_Application_GetGameVersion">Application.GetGameVersion</a></li>
                    <li><a href="#Reference_functions_Application_GetGameDescription">Application.GetGameDescription</a></li>
                    <li><a href="#Reference_functions_Application_SetGameTitle">Application.SetGameTitle</a></li>
                    <li><a href="#Reference_functions_Application_SetGameTitleShort">Application.SetGameTitleShort</a></li>
                    <li><a href="#Reference_functions_Application_SetGameVersion">Application.SetGameVersion</a></li>
                    <li><a href="#Reference_functions_Application_SetGameDescription">Application.SetGameDescription</a></li>
                    <li><a href="#Reference_functions_Application_SetCursorVisible">Application.SetCursorVisible</a></li>
                    <li><a href="#Reference_functions_Application_GetCursorVisible">Application.GetCursorVisible</a></li>
                </ul>
            </p>
            <p id="Reference_Array">
                <h2>Array</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Array_Create">Array.Create</a></li>
                    <li><a href="#Reference_functions_Array_Length">Array.Length</a></li>
                    <li><a href="#Reference_functions_Array_Push">Array.Push</a></li>
                    <li><a href="#Reference_functions_Array_Pop">Array.Pop</a></li>
                    <li><a href="#Reference_functions_Array_Insert">Array.Insert</a></li>
                    <li><a href="#Reference_functions_Array_Erase">Array.Erase</a></li>
                    <li><a href="#Reference_functions_Array_Clear">Array.Clear</a></li>
                    <li><a href="#Reference_functions_Array_Shift">Array.Shift</a></li>
                    <li><a href="#Reference_functions_Array_SetAll">Array.SetAll</a></li>
                    <li><a href="#Reference_functions_Array_Reverse">Array.Reverse</a></li>
                    <li><a href="#Reference_functions_Array_Sort">Array.Sort</a></li>
                </ul>
            </p>
            <p id="Reference_Audio">
                <h2>Audio</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Audio_GetMasterVolume">Audio.GetMasterVolume</a></li>
                    <li><a href="#Reference_functions_Audio_GetMusicVolume">Audio.GetMusicVolume</a></li>
                    <li><a href="#Reference_functions_Audio_GetSoundVolume">Audio.GetSoundVolume</a></li>
                    <li><a href="#Reference_functions_Audio_SetMasterVolume">Audio.SetMasterVolume</a></li>
                    <li><a href="#Reference_functions_Audio_SetMusicVolume">Audio.SetMusicVolume</a></li>
                    <li><a href="#Reference_functions_Audio_SetSoundVolume">Audio.SetSoundVolume</a></li>
                </ul>
            </p>
            <p id="Reference_Controller">
                <h2>Controller</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Controller_GetCount">Controller.GetCount</a></li>
                    <li><a href="#Reference_functions_Controller_IsConnected">Controller.IsConnected</a></li>
                    <li><a href="#Reference_functions_Controller_IsXbox">Controller.IsXbox</a></li>
                    <li><a href="#Reference_functions_Controller_IsPlayStation">Controller.IsPlayStation</a></li>
                    <li><a href="#Reference_functions_Controller_IsJoyCon">Controller.IsJoyCon</a></li>
                    <li><a href="#Reference_functions_Controller_HasShareButton">Controller.HasShareButton</a></li>
                    <li><a href="#Reference_functions_Controller_HasMicrophoneButton">Controller.HasMicrophoneButton</a></li>
                    <li><a href="#Reference_functions_Controller_HasPaddles">Controller.HasPaddles</a></li>
                    <li><a href="#Reference_functions_Controller_IsButtonHeld">Controller.IsButtonHeld</a></li>
                    <li><a href="#Reference_functions_Controller_IsButtonPressed">Controller.IsButtonPressed</a></li>
                    <li><a href="#Reference_functions_Controller_GetButton">Controller.GetButton</a></li>
                    <li><a href="#Reference_functions_Controller_GetAxis">Controller.GetAxis</a></li>
                    <li><a href="#Reference_functions_Controller_GetType">Controller.GetType</a></li>
                    <li><a href="#Reference_functions_Controller_GetName">Controller.GetName</a></li>
                    <li><a href="#Reference_functions_Controller_SetPlayerIndex">Controller.SetPlayerIndex</a></li>
                    <li><a href="#Reference_functions_Controller_HasRumble">Controller.HasRumble</a></li>
                    <li><a href="#Reference_functions_Controller_IsRumbleActive">Controller.IsRumbleActive</a></li>
                    <li><a href="#Reference_functions_Controller_Rumble">Controller.Rumble</a></li>
                    <li><a href="#Reference_functions_Controller_StopRumble">Controller.StopRumble</a></li>
                    <li><a href="#Reference_functions_Controller_IsRumblePaused">Controller.IsRumblePaused</a></li>
                    <li><a href="#Reference_functions_Controller_SetRumblePaused">Controller.SetRumblePaused</a></li>
                    <li><a href="#Reference_functions_Controller_SetLargeMotorFrequency">Controller.SetLargeMotorFrequency</a></li>
                    <li><a href="#Reference_functions_Controller_SetSmallMotorFrequency">Controller.SetSmallMotorFrequency</a></li>
                </ul>
            </p>
            <p id="Reference_Date">
                <h2>Date</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Date_GetEpoch">Date.GetEpoch</a></li>
                    <li><a href="#Reference_functions_Date_GetWeekday">Date.GetWeekday</a></li>
                    <li><a href="#Reference_functions_Date_GetSecond">Date.GetSecond</a></li>
                    <li><a href="#Reference_functions_Date_GetMinute">Date.GetMinute</a></li>
                    <li><a href="#Reference_functions_Date_GetHour">Date.GetHour</a></li>
                    <li><a href="#Reference_functions_Date_GetTimeOfDay">Date.GetTimeOfDay</a></li>
                    <li><a href="#Reference_functions_Date_GetTicks">Date.GetTicks</a></li>
                </ul>
            </p>
            <p id="Reference_Device">
                <h2>Device</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Device_GetPlatform">Device.GetPlatform</a></li>
                    <li><a href="#Reference_functions_Device_IsPC">Device.IsPC</a></li>
                    <li><a href="#Reference_functions_Device_IsMobile">Device.IsMobile</a></li>
                </ul>
            </p>
            <p id="Reference_Directory">
                <h2>Directory</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Directory_Create">Directory.Create</a></li>
                    <li><a href="#Reference_functions_Directory_Exists">Directory.Exists</a></li>
                    <li><a href="#Reference_functions_Directory_GetFiles">Directory.GetFiles</a></li>
                    <li><a href="#Reference_functions_Directory_GetDirectories">Directory.GetDirectories</a></li>
                </ul>
            </p>
            <p id="Reference_Display">
                <h2>Display</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Display_GetWidth">Display.GetWidth</a></li>
                    <li><a href="#Reference_functions_Display_GetHeight">Display.GetHeight</a></li>
                </ul>
            </p>
            <p id="Reference_Draw">
                <h2>Draw</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Draw_Sprite">Draw.Sprite</a></li>
                    <li><a href="#Reference_functions_Draw_SpriteBasic">Draw.SpriteBasic</a></li>
                    <li><a href="#Reference_functions_Draw_Animator">Draw.Animator</a></li>
                    <li><a href="#Reference_functions_Draw_AnimatorBasic">Draw.AnimatorBasic</a></li>
                    <li><a href="#Reference_functions_Draw_SpritePart">Draw.SpritePart</a></li>
                    <li><a href="#Reference_functions_Draw_Image">Draw.Image</a></li>
                    <li><a href="#Reference_functions_Draw_ImagePart">Draw.ImagePart</a></li>
                    <li><a href="#Reference_functions_Draw_ImageSized">Draw.ImageSized</a></li>
                    <li><a href="#Reference_functions_Draw_ImagePartSized">Draw.ImagePartSized</a></li>
                    <li><a href="#Reference_functions_Draw_Layer">Draw.Layer</a></li>
                    <li><a href="#Reference_functions_Draw_View">Draw.View</a></li>
                    <li><a href="#Reference_functions_Draw_ViewPart">Draw.ViewPart</a></li>
                    <li><a href="#Reference_functions_Draw_ViewSized">Draw.ViewSized</a></li>
                    <li><a href="#Reference_functions_Draw_ViewPartSized">Draw.ViewPartSized</a></li>
                    <li><a href="#Reference_functions_Draw_Video">Draw.Video</a></li>
                    <li><a href="#Reference_functions_Draw_VideoPart">Draw.VideoPart</a></li>
                    <li><a href="#Reference_functions_Draw_VideoSized">Draw.VideoSized</a></li>
                    <li><a href="#Reference_functions_Draw_VideoPartSized">Draw.VideoPartSized</a></li>
                    <li><a href="#Reference_functions_Draw_Tile">Draw.Tile</a></li>
                    <li><a href="#Reference_functions_Draw_Texture">Draw.Texture</a></li>
                    <li><a href="#Reference_functions_Draw_TextureSized">Draw.TextureSized</a></li>
                    <li><a href="#Reference_functions_Draw_TexturePart">Draw.TexturePart</a></li>
                    <li><a href="#Reference_functions_Draw_SetFont">Draw.SetFont</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextAlign">Draw.SetTextAlign</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextBaseline">Draw.SetTextBaseline</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextAdvance">Draw.SetTextAdvance</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextLineAscent">Draw.SetTextLineAscent</a></li>
                    <li><a href="#Reference_functions_Draw_MeasureText">Draw.MeasureText</a></li>
                    <li><a href="#Reference_functions_Draw_MeasureTextWrapped">Draw.MeasureTextWrapped</a></li>
                    <li><a href="#Reference_functions_Draw_Text">Draw.Text</a></li>
                    <li><a href="#Reference_functions_Draw_TextWrapped">Draw.TextWrapped</a></li>
                    <li><a href="#Reference_functions_Draw_TextEllipsis">Draw.TextEllipsis</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendColor">Draw.SetBlendColor</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextureBlend">Draw.SetTextureBlend</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendMode">Draw.SetBlendMode</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendFactor">Draw.SetBlendFactor</a></li>
                    <li><a href="#Reference_functions_Draw_SetBlendFactorExtended">Draw.SetBlendFactorExtended</a></li>
                    <li><a href="#Reference_functions_Draw_SetCompareColor">Draw.SetCompareColor</a></li>
                    <li><a href="#Reference_functions_Draw_SetTintColor">Draw.SetTintColor</a></li>
                    <li><a href="#Reference_functions_Draw_SetTintMode">Draw.SetTintMode</a></li>
                    <li><a href="#Reference_functions_Draw_UseTinting">Draw.UseTinting</a></li>
                    <li><a href="#Reference_functions_Draw_SetFilter">Draw.SetFilter</a></li>
                    <li><a href="#Reference_functions_Draw_UseStencil">Draw.UseStencil</a></li>
                    <li><a href="#Reference_functions_Draw_SetStencilTestFunction">Draw.SetStencilTestFunction</a></li>
                    <li><a href="#Reference_functions_Draw_SetStencilPassOperation">Draw.SetStencilPassOperation</a></li>
                    <li><a href="#Reference_functions_Draw_SetStencilFailOperation">Draw.SetStencilFailOperation</a></li>
                    <li><a href="#Reference_functions_Draw_SetStencilValue">Draw.SetStencilValue</a></li>
                    <li><a href="#Reference_functions_Draw_SetStencilMask">Draw.SetStencilMask</a></li>
                    <li><a href="#Reference_functions_Draw_ClearStencil">Draw.ClearStencil</a></li>
                    <li><a href="#Reference_functions_Draw_SetDotMask">Draw.SetDotMask</a></li>
                    <li><a href="#Reference_functions_Draw_SetHorizontalDotMask">Draw.SetHorizontalDotMask</a></li>
                    <li><a href="#Reference_functions_Draw_SetVerticalDotMask">Draw.SetVerticalDotMask</a></li>
                    <li><a href="#Reference_functions_Draw_SetHorizontalDotMaskOffset">Draw.SetHorizontalDotMaskOffset</a></li>
                    <li><a href="#Reference_functions_Draw_SetVerticalDotMaskOffset">Draw.SetVerticalDotMaskOffset</a></li>
                    <li><a href="#Reference_functions_Draw_Line">Draw.Line</a></li>
                    <li><a href="#Reference_functions_Draw_Circle">Draw.Circle</a></li>
                    <li><a href="#Reference_functions_Draw_Ellipse">Draw.Ellipse</a></li>
                    <li><a href="#Reference_functions_Draw_Triangle">Draw.Triangle</a></li>
                    <li><a href="#Reference_functions_Draw_TriangleBlend">Draw.TriangleBlend</a></li>
                    <li><a href="#Reference_functions_Draw_Quad">Draw.Quad</a></li>
                    <li><a href="#Reference_functions_Draw_QuadBlend">Draw.QuadBlend</a></li>
                    <li><a href="#Reference_functions_Draw_TriangleTextured">Draw.TriangleTextured</a></li>
                    <li><a href="#Reference_functions_Draw_QuadTextured">Draw.QuadTextured</a></li>
                    <li><a href="#Reference_functions_Draw_Rectangle">Draw.Rectangle</a></li>
                    <li><a href="#Reference_functions_Draw_CircleStroke">Draw.CircleStroke</a></li>
                    <li><a href="#Reference_functions_Draw_EllipseStroke">Draw.EllipseStroke</a></li>
                    <li><a href="#Reference_functions_Draw_TriangleStroke">Draw.TriangleStroke</a></li>
                    <li><a href="#Reference_functions_Draw_RectangleStroke">Draw.RectangleStroke</a></li>
                    <li><a href="#Reference_functions_Draw_UseFillSmoothing">Draw.UseFillSmoothing</a></li>
                    <li><a href="#Reference_functions_Draw_UseStrokeSmoothing">Draw.UseStrokeSmoothing</a></li>
                    <li><a href="#Reference_functions_Draw_SetClip">Draw.SetClip</a></li>
                    <li><a href="#Reference_functions_Draw_ClearClip">Draw.ClearClip</a></li>
                    <li><a href="#Reference_functions_Draw_Save">Draw.Save</a></li>
                    <li><a href="#Reference_functions_Draw_Scale">Draw.Scale</a></li>
                    <li><a href="#Reference_functions_Draw_Rotate">Draw.Rotate</a></li>
                    <li><a href="#Reference_functions_Draw_Restore">Draw.Restore</a></li>
                    <li><a href="#Reference_functions_Draw_Translate">Draw.Translate</a></li>
                    <li><a href="#Reference_functions_Draw_SetTextureTarget">Draw.SetTextureTarget</a></li>
                    <li><a href="#Reference_functions_Draw_Clear">Draw.Clear</a></li>
                    <li><a href="#Reference_functions_Draw_ResetTextureTarget">Draw.ResetTextureTarget</a></li>
                    <li><a href="#Reference_functions_Draw_UseSpriteDeform">Draw.UseSpriteDeform</a></li>
                    <li><a href="#Reference_functions_Draw_SetSpriteDeformLine">Draw.SetSpriteDeformLine</a></li>
                    <li><a href="#Reference_functions_Draw_UseDepthTesting">Draw.UseDepthTesting</a></li>
                    <li><a href="#Reference_functions_Draw_GetCurrentDrawGroup">Draw.GetCurrentDrawGroup</a></li>
                    <li><a href="#Reference_functions_Draw_CopyScreen">Draw.CopyScreen</a></li>
                </ul>
            </p>
            <p id="Reference_Draw3D">
                <h2>Draw3D</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Draw3D_BindVertexBuffer">Draw3D.BindVertexBuffer</a></li>
                    <li><a href="#Reference_functions_Draw3D_UnbindVertexBuffer">Draw3D.UnbindVertexBuffer</a></li>
                    <li><a href="#Reference_functions_Draw3D_BindScene">Draw3D.BindScene</a></li>
                    <li><a href="#Reference_functions_Draw3D_Model">Draw3D.Model</a></li>
                    <li><a href="#Reference_functions_Draw3D_ModelSkinned">Draw3D.ModelSkinned</a></li>
                    <li><a href="#Reference_functions_Draw3D_ModelSimple">Draw3D.ModelSimple</a></li>
                    <li><a href="#Reference_functions_Draw_Triangle3D">Draw.Triangle3D</a></li>
                    <li><a href="#Reference_functions_Draw3D_Quad">Draw3D.Quad</a></li>
                    <li><a href="#Reference_functions_Draw3D_Sprite">Draw3D.Sprite</a></li>
                    <li><a href="#Reference_functions_Draw3D_SpritePart">Draw3D.SpritePart</a></li>
                    <li><a href="#Reference_functions_Draw3D_Image">Draw3D.Image</a></li>
                    <li><a href="#Reference_functions_Draw3D_ImagePart">Draw3D.ImagePart</a></li>
                    <li><a href="#Reference_functions_Draw3D_Tile">Draw3D.Tile</a></li>
                    <li><a href="#Reference_functions_Draw3D_TriangleTextured">Draw3D.TriangleTextured</a></li>
                    <li><a href="#Reference_functions_Draw3D_QuadTextured">Draw3D.QuadTextured</a></li>
                    <li><a href="#Reference_functions_Draw3D_SpritePoints">Draw3D.SpritePoints</a></li>
                    <li><a href="#Reference_functions_Draw3D_TilePoints">Draw3D.TilePoints</a></li>
                    <li><a href="#Reference_functions_Draw3D_SceneLayer">Draw3D.SceneLayer</a></li>
                    <li><a href="#Reference_functions_Draw3D_SceneLayerPart">Draw3D.SceneLayerPart</a></li>
                    <li><a href="#Reference_functions_Draw3D_VertexBuffer">Draw3D.VertexBuffer</a></li>
                    <li><a href="#Reference_functions_Draw3D_RenderScene">Draw3D.RenderScene</a></li>
                </ul>
            </p>
            <p id="Reference_Ease">
                <h2>Ease</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Ease_InSine">Ease.InSine</a></li>
                    <li><a href="#Reference_functions_Ease_OutSine">Ease.OutSine</a></li>
                    <li><a href="#Reference_functions_Ease_InOutSine">Ease.InOutSine</a></li>
                    <li><a href="#Reference_functions_Ease_InQuad">Ease.InQuad</a></li>
                    <li><a href="#Reference_functions_Ease_OutQuad">Ease.OutQuad</a></li>
                    <li><a href="#Reference_functions_Ease_InOutQuad">Ease.InOutQuad</a></li>
                    <li><a href="#Reference_functions_Ease_InCubic">Ease.InCubic</a></li>
                    <li><a href="#Reference_functions_Ease_OutCubic">Ease.OutCubic</a></li>
                    <li><a href="#Reference_functions_Ease_InOutCubic">Ease.InOutCubic</a></li>
                    <li><a href="#Reference_functions_Ease_InQuart">Ease.InQuart</a></li>
                    <li><a href="#Reference_functions_Ease_OutQuart">Ease.OutQuart</a></li>
                    <li><a href="#Reference_functions_Ease_InOutQuart">Ease.InOutQuart</a></li>
                    <li><a href="#Reference_functions_Ease_InQuint">Ease.InQuint</a></li>
                    <li><a href="#Reference_functions_Ease_OutQuint">Ease.OutQuint</a></li>
                    <li><a href="#Reference_functions_Ease_InOutQuint">Ease.InOutQuint</a></li>
                    <li><a href="#Reference_functions_Ease_InExpo">Ease.InExpo</a></li>
                    <li><a href="#Reference_functions_Ease_OutExpo">Ease.OutExpo</a></li>
                    <li><a href="#Reference_functions_Ease_InOutExpo">Ease.InOutExpo</a></li>
                    <li><a href="#Reference_functions_Ease_InCirc">Ease.InCirc</a></li>
                    <li><a href="#Reference_functions_Ease_OutCirc">Ease.OutCirc</a></li>
                    <li><a href="#Reference_functions_Ease_InOutCirc">Ease.InOutCirc</a></li>
                    <li><a href="#Reference_functions_Ease_InBack">Ease.InBack</a></li>
                    <li><a href="#Reference_functions_Ease_OutBack">Ease.OutBack</a></li>
                    <li><a href="#Reference_functions_Ease_InOutBack">Ease.InOutBack</a></li>
                    <li><a href="#Reference_functions_Ease_InElastic">Ease.InElastic</a></li>
                    <li><a href="#Reference_functions_Ease_OutElastic">Ease.OutElastic</a></li>
                    <li><a href="#Reference_functions_Ease_InOutElastic">Ease.InOutElastic</a></li>
                    <li><a href="#Reference_functions_Ease_InBounce">Ease.InBounce</a></li>
                    <li><a href="#Reference_functions_Ease_OutBounce">Ease.OutBounce</a></li>
                    <li><a href="#Reference_functions_Ease_InOutBounce">Ease.InOutBounce</a></li>
                    <li><a href="#Reference_functions_Ease_Triangle">Ease.Triangle</a></li>
                </ul>
            </p>
            <p id="Reference_File">
                <h2>File</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_File_Exists">File.Exists</a></li>
                    <li><a href="#Reference_functions_File_ReadAllText">File.ReadAllText</a></li>
                    <li><a href="#Reference_functions_File_WriteAllText">File.WriteAllText</a></li>
                </ul>
            </p>
            <p id="Reference_Geometry">
                <h2>Geometry</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Geometry_Triangulate">Geometry.Triangulate</a></li>
                    <li><a href="#Reference_functions_Geometry_Intersect">Geometry.Intersect</a></li>
                    <li><a href="#Reference_functions_Geometry_IsPointInsidePolygon">Geometry.IsPointInsidePolygon</a></li>
                    <li><a href="#Reference_functions_Geometry_IsLineIntersectingPolygon">Geometry.IsLineIntersectingPolygon</a></li>
                </ul>
            </p>
            <p id="Reference_HTTP">
                <h2>HTTP</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_HTTP_GetString">HTTP.GetString</a></li>
                    <li><a href="#Reference_functions_HTTP_GetToFile">HTTP.GetToFile</a></li>
                </ul>
            </p>
            <p id="Reference_Image">
                <h2>Image</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Image_GetWidth">Image.GetWidth</a></li>
                    <li><a href="#Reference_functions_Image_GetHeight">Image.GetHeight</a></li>
                </ul>
            </p>
            <p id="Reference_Input">
                <h2>Input</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Input_GetMouseX">Input.GetMouseX</a></li>
                    <li><a href="#Reference_functions_Input_GetMouseY">Input.GetMouseY</a></li>
                    <li><a href="#Reference_functions_Input_IsMouseButtonDown">Input.IsMouseButtonDown</a></li>
                    <li><a href="#Reference_functions_Input_IsMouseButtonPressed">Input.IsMouseButtonPressed</a></li>
                    <li><a href="#Reference_functions_Input_IsMouseButtonReleased">Input.IsMouseButtonReleased</a></li>
                    <li><a href="#Reference_functions_Input_IsKeyDown">Input.IsKeyDown</a></li>
                    <li><a href="#Reference_functions_Input_IsKeyPressed">Input.IsKeyPressed</a></li>
                    <li><a href="#Reference_functions_Input_IsKeyReleased">Input.IsKeyReleased</a></li>
                    <li><a href="#Reference_functions_Input_GetKeyName">Input.GetKeyName</a></li>
                    <li><a href="#Reference_functions_Input_GetButtonName">Input.GetButtonName</a></li>
                    <li><a href="#Reference_functions_Input_GetAxisName">Input.GetAxisName</a></li>
                    <li><a href="#Reference_functions_Input_ParseKeyName">Input.ParseKeyName</a></li>
                    <li><a href="#Reference_functions_Input_ParseButtonName">Input.ParseButtonName</a></li>
                    <li><a href="#Reference_functions_Input_ParseAxisName">Input.ParseAxisName</a></li>
                    <li><a href="#Reference_functions_Input_GetActionList">Input.GetActionList</a></li>
                    <li><a href="#Reference_functions_Input_ActionExists">Input.ActionExists</a></li>
                    <li><a href="#Reference_functions_Input_IsActionHeld">Input.IsActionHeld</a></li>
                    <li><a href="#Reference_functions_Input_IsActionPressed">Input.IsActionPressed</a></li>
                    <li><a href="#Reference_functions_Input_IsActionReleased">Input.IsActionReleased</a></li>
                    <li><a href="#Reference_functions_Input_IsAnyActionHeld">Input.IsAnyActionHeld</a></li>
                    <li><a href="#Reference_functions_Input_IsAnyActionPressed">Input.IsAnyActionPressed</a></li>
                    <li><a href="#Reference_functions_Input_IsAnyActionReleased">Input.IsAnyActionReleased</a></li>
                    <li><a href="#Reference_functions_Input_GetAnalogActionInput">Input.GetAnalogActionInput</a></li>
                    <li><a href="#Reference_functions_Input_GetActionBind">Input.GetActionBind</a></li>
                    <li><a href="#Reference_functions_Input_SetActionBind">Input.SetActionBind</a></li>
                    <li><a href="#Reference_functions_Input_AddActionBind">Input.AddActionBind</a></li>
                    <li><a href="#Reference_functions_Input_RemoveActionBind">Input.RemoveActionBind</a></li>
                    <li><a href="#Reference_functions_Input_GetBoundActionList">Input.GetBoundActionList</a></li>
                    <li><a href="#Reference_functions_Input_GetBoundActionCount">Input.GetBoundActionCount</a></li>
                    <li><a href="#Reference_functions_Input_GetBoundActionMap">Input.GetBoundActionMap</a></li>
                    <li><a href="#Reference_functions_Input_GetDefaultActionBind">Input.GetDefaultActionBind</a></li>
                    <li><a href="#Reference_functions_Input_SetDefaultActionBind">Input.SetDefaultActionBind</a></li>
                    <li><a href="#Reference_functions_Input_AddDefaultActionBind">Input.AddDefaultActionBind</a></li>
                    <li><a href="#Reference_functions_Input_RemoveDefaultActionBind">Input.RemoveDefaultActionBind</a></li>
                    <li><a href="#Reference_functions_Input_GetDefaultBoundActionList">Input.GetDefaultBoundActionList</a></li>
                    <li><a href="#Reference_functions_Input_GetDefaultBoundActionCount">Input.GetDefaultBoundActionCount</a></li>
                    <li><a href="#Reference_functions_Input_GetDefaultBoundActionMap">Input.GetDefaultBoundActionMap</a></li>
                    <li><a href="#Reference_functions_Input_ResetActionBindsToDefaults">Input.ResetActionBindsToDefaults</a></li>
                    <li><a href="#Reference_functions_Input_IsPlayerUsingDevice">Input.IsPlayerUsingDevice</a></li>
                    <li><a href="#Reference_functions_Input_GetPlayerControllerIndex">Input.GetPlayerControllerIndex</a></li>
                    <li><a href="#Reference_functions_Input_SetPlayerControllerIndex">Input.SetPlayerControllerIndex</a></li>
                </ul>
            </p>
            <p id="Reference_Instance">
                <h2>Instance</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Instance_Create">Instance.Create</a></li>
                    <li><a href="#Reference_functions_Instance_GetNth">Instance.GetNth</a></li>
                    <li><a href="#Reference_functions_Instance_IsClass">Instance.IsClass</a></li>
                    <li><a href="#Reference_functions_Instance_GetClass">Instance.GetClass</a></li>
                    <li><a href="#Reference_functions_Instance_GetCount">Instance.GetCount</a></li>
                    <li><a href="#Reference_functions_Instance_GetNextInstance">Instance.GetNextInstance</a></li>
                    <li><a href="#Reference_functions_Instance_GetBySlotID">Instance.GetBySlotID</a></li>
                    <li><a href="#Reference_functions_Instance_DisableAutoAnimate">Instance.DisableAutoAnimate</a></li>
                    <li><a href="#Reference_functions_Instance_Copy">Instance.Copy</a></li>
                    <li><a href="#Reference_functions_Instance_ChangeClass">Instance.ChangeClass</a></li>
                </ul>
                <i>Instance methods:</i>
                <ul>
                    <li><a href="#Reference_methods_instance_SetAnimation">instance.SetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_ResetAnimation">instance.ResetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_Animate">instance.Animate</a></li>
                    <li><a href="#Reference_methods_instance_GetIDWithinClass">instance.GetIDWithinClass</a></li>
                    <li><a href="#Reference_methods_instance_AddToRegistry">instance.AddToRegistry</a></li>
                    <li><a href="#Reference_methods_instance_IsInRegistry">instance.IsInRegistry</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromRegistry">instance.RemoveFromRegistry</a></li>
                    <li><a href="#Reference_methods_instance_ApplyMotion">instance.ApplyMotion</a></li>
                    <li><a href="#Reference_methods_instance_InView">instance.InView</a></li>
                    <li><a href="#Reference_methods_instance_CollidedWithObject">instance.CollidedWithObject</a></li>
                    <li><a href="#Reference_methods_instance_GetHitboxFromSprite">instance.GetHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_ReturnHitboxFromSprite">instance.ReturnHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_CollideWithObject">instance.CollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_SolidCollideWithObject">instance.SolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_TopSolidCollideWithObject">instance.TopSolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_PropertyExists">instance.PropertyExists</a></li>
                    <li><a href="#Reference_methods_instance_PropertyGet">instance.PropertyGet</a></li>
                    <li><a href="#Reference_methods_instance_SetViewVisibility">instance.SetViewVisibility</a></li>
                    <li><a href="#Reference_methods_instance_SetViewOverride">instance.SetViewOverride</a></li>
                    <li><a href="#Reference_methods_instance_AddToDrawGroup">instance.AddToDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_IsInDrawGroup">instance.IsInDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromDrawGroup">instance.RemoveFromDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_PlaySound">instance.PlaySound</a></li>
                    <li><a href="#Reference_methods_instance_LoopSound">instance.LoopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopSound">instance.StopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopAllSounds">instance.StopAllSounds</a></li>
                </ul>
                <i>Instance fields:</i>
                <ul>
                    <li><a href="#Reference_fields_instance_X">instance.X</a></li>
                    <li><a href="#Reference_fields_instance_Y">instance.Y</a></li>
                    <li><a href="#Reference_fields_instance_Z">instance.Z</a></li>
                    <li><a href="#Reference_fields_instance_XSpeed">instance.XSpeed</a></li>
                    <li><a href="#Reference_fields_instance_YSpeed">instance.YSpeed</a></li>
                    <li><a href="#Reference_fields_instance_GroundSpeed">instance.GroundSpeed</a></li>
                    <li><a href="#Reference_fields_instance_Gravity">instance.Gravity</a></li>
                    <li><a href="#Reference_fields_instance_AutoPhysics">instance.AutoPhysics</a></li>
                    <li><a href="#Reference_fields_instance_Angle">instance.Angle</a></li>
                    <li><a href="#Reference_fields_instance_AngleMode">instance.AngleMode</a></li>
                    <li><a href="#Reference_fields_instance_Ground">instance.Ground</a></li>
                    <li><a href="#Reference_fields_instance_ScaleX">instance.ScaleX</a></li>
                    <li><a href="#Reference_fields_instance_ScaleY">instance.ScaleY</a></li>
                    <li><a href="#Reference_fields_instance_Rotation">instance.Rotation</a></li>
                    <li><a href="#Reference_fields_instance_Alpha">instance.Alpha</a></li>
                    <li><a href="#Reference_fields_instance_Priority">instance.Priority</a></li>
                    <li><a href="#Reference_fields_instance_Depth">instance.Depth</a></li>
                    <li><a href="#Reference_fields_instance_Sprite">instance.Sprite</a></li>
                    <li><a href="#Reference_fields_instance_CurrentAnimation">instance.CurrentAnimation</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrame">instance.CurrentFrame</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrameCount">instance.CurrentFrameCount</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeed">instance.AnimationSpeed</a></li>
                    <li><a href="#Reference_fields_instance_AnimationTimer">instance.AnimationTimer</a></li>
                    <li><a href="#Reference_fields_instance_AnimationFrameDuration">instance.AnimationFrameDuration</a></li>
                    <li><a href="#Reference_fields_instance_AnimationLoopIndex">instance.AnimationLoopIndex</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedMult">instance.AnimationSpeedMult</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedAdd">instance.AnimationSpeedAdd</a></li>
                    <li><a href="#Reference_fields_instance_AutoAnimate">instance.AutoAnimate</a></li>
                    <li><a href="#Reference_fields_instance_OnScreen">instance.OnScreen</a></li>
                    <li><a href="#Reference_fields_instance_WasOffScreen">instance.WasOffScreen</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxW">instance.OnScreenHitboxW</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxH">instance.OnScreenHitboxH</a></li>
                    <li><a href="#Reference_fields_instance_ViewRenderFlag">instance.ViewRenderFlag</a></li>
                    <li><a href="#Reference_fields_instance_ViewOverrideFlag">instance.ViewOverrideFlag</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionW">instance.UpdateRegionW</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionH">instance.UpdateRegionH</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionTop">instance.UpdateRegionTop</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionLeft">instance.UpdateRegionLeft</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionRight">instance.UpdateRegionRight</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionBottom">instance.UpdateRegionBottom</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionW">instance.RenderRegionW</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionH">instance.RenderRegionH</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionTop">instance.RenderRegionTop</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionLeft">instance.RenderRegionLeft</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionRight">instance.RenderRegionRight</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionBottom">instance.RenderRegionBottom</a></li>
                    <li><a href="#Reference_fields_instance_HitboxW">instance.HitboxW</a></li>
                    <li><a href="#Reference_fields_instance_HitboxH">instance.HitboxH</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffX">instance.HitboxOffX</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffY">instance.HitboxOffY</a></li>
                    <li><a href="#Reference_fields_instance_HitboxLeft">instance.HitboxLeft</a></li>
                    <li><a href="#Reference_fields_instance_HitboxTop">instance.HitboxTop</a></li>
                    <li><a href="#Reference_fields_instance_HitboxRight">instance.HitboxRight</a></li>
                    <li><a href="#Reference_fields_instance_HitboxBottom">instance.HitboxBottom</a></li>
                    <li><a href="#Reference_fields_instance_FlipFlag">instance.FlipFlag</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_GroundVel">instance.GroundVel</a></li>
                    <li><a href="#Reference_fields_instance_Direction">instance.Direction</a></li>
                    <li><a href="#Reference_fields_instance_OnGround">instance.OnGround</a></li>
                    <li><a href="#Reference_fields_instance_SlotID">instance.SlotID</a></li>
                    <li><a href="#Reference_fields_instance_ZDepth">instance.ZDepth</a></li>
                    <li><a href="#Reference_fields_instance_CollisionLayers">instance.CollisionLayers</a></li>
                    <li><a href="#Reference_fields_instance_CollisionPlane">instance.CollisionPlane</a></li>
                    <li><a href="#Reference_fields_instance_CollisionMode">instance.CollisionMode</a></li>
                    <li><a href="#Reference_fields_instance_TileCollisions">instance.TileCollisions</a></li>
                    <li><a href="#Reference_fields_instance_Activity">instance.Activity</a></li>
                    <li><a href="#Reference_fields_instance_InRange">instance.InRange</a></li>
                    <li><a href="#Reference_fields_instance_SensorX">instance.SensorX</a></li>
                    <li><a href="#Reference_fields_instance_SensorY">instance.SensorY</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_Active">instance.Active</a></li>
                    <li><a href="#Reference_fields_instance_Pauseable">instance.Pauseable</a></li>
                    <li><a href="#Reference_fields_instance_Persistent">instance.Persistent</a></li>
                    <li><a href="#Reference_fields_instance_Interactable">instance.Interactable</a></li>
                    <li><a href="#Reference_fields_instance_Persistence">instance.Persistence</a></li>
                </ul>
            </p>
            <p id="Reference_JSON">
                <h2>JSON</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_JSON_Parse">JSON.Parse</a></li>
                    <li><a href="#Reference_functions_JSON_ToString">JSON.ToString</a></li>
                </ul>
            </p>
            <p id="Reference_Math">
                <h2>Math</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Math_Cos">Math.Cos</a></li>
                    <li><a href="#Reference_functions_Math_Sin">Math.Sin</a></li>
                    <li><a href="#Reference_functions_Math_Tan">Math.Tan</a></li>
                    <li><a href="#Reference_functions_Math_Acos">Math.Acos</a></li>
                    <li><a href="#Reference_functions_Math_Asin">Math.Asin</a></li>
                    <li><a href="#Reference_functions_Math_Atan">Math.Atan</a></li>
                    <li><a href="#Reference_functions_Math_Distance">Math.Distance</a></li>
                    <li><a href="#Reference_functions_Math_Direction">Math.Direction</a></li>
                    <li><a href="#Reference_functions_Math_Abs">Math.Abs</a></li>
                    <li><a href="#Reference_functions_Math_Min">Math.Min</a></li>
                    <li><a href="#Reference_functions_Math_Max">Math.Max</a></li>
                    <li><a href="#Reference_functions_Math_Clamp">Math.Clamp</a></li>
                    <li><a href="#Reference_functions_Math_Sign">Math.Sign</a></li>
                    <li><a href="#Reference_functions_Math_Random">Math.Random</a></li>
                    <li><a href="#Reference_functions_Math_RandomMax">Math.RandomMax</a></li>
                    <li><a href="#Reference_functions_Math_RandomRange">Math.RandomRange</a></li>
                    <li><a href="#Reference_functions_Math_Floor">Math.Floor</a></li>
                    <li><a href="#Reference_functions_Math_Ceil">Math.Ceil</a></li>
                    <li><a href="#Reference_functions_Math_Round">Math.Round</a></li>
                    <li><a href="#Reference_functions_Math_Sqrt">Math.Sqrt</a></li>
                    <li><a href="#Reference_functions_Math_Pow">Math.Pow</a></li>
                    <li><a href="#Reference_functions_Math_Exp">Math.Exp</a></li>
                </ul>
            </p>
            <p id="Reference_Matrix">
                <h2>Matrix</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Matrix_Create">Matrix.Create</a></li>
                    <li><a href="#Reference_functions_Matrix_Identity">Matrix.Identity</a></li>
                    <li><a href="#Reference_functions_Matrix_Perspective">Matrix.Perspective</a></li>
                    <li><a href="#Reference_functions_Matrix_Copy">Matrix.Copy</a></li>
                    <li><a href="#Reference_functions_Matrix_Multiply">Matrix.Multiply</a></li>
                    <li><a href="#Reference_functions_Matrix_Translate">Matrix.Translate</a></li>
                    <li><a href="#Reference_functions_Matrix_Scale">Matrix.Scale</a></li>
                    <li><a href="#Reference_functions_Matrix_Rotate">Matrix.Rotate</a></li>
                </ul>
            </p>
            <p id="Reference_Model">
                <h2>Model</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Model_GetVertexCount">Model.GetVertexCount</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationCount">Model.GetAnimationCount</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationName">Model.GetAnimationName</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationIndex">Model.GetAnimationIndex</a></li>
                    <li><a href="#Reference_functions_Model_GetFrameCount">Model.GetFrameCount</a></li>
                    <li><a href="#Reference_functions_Model_GetAnimationLength">Model.GetAnimationLength</a></li>
                    <li><a href="#Reference_functions_Model_HasMaterials">Model.HasMaterials</a></li>
                    <li><a href="#Reference_functions_Model_HasBones">Model.HasBones</a></li>
                    <li><a href="#Reference_functions_Model_CreateArmature">Model.CreateArmature</a></li>
                    <li><a href="#Reference_functions_Model_PoseArmature">Model.PoseArmature</a></li>
                    <li><a href="#Reference_functions_Model_ResetArmature">Model.ResetArmature</a></li>
                    <li><a href="#Reference_functions_Model_DeleteArmature">Model.DeleteArmature</a></li>
                </ul>
            </p>
            <p id="Reference_Music">
                <h2>Music</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Music_Play">Music.Play</a></li>
                    <li><a href="#Reference_functions_Music_PlayAtTime">Music.PlayAtTime</a></li>
                    <li><a href="#Reference_functions_Music_Stop">Music.Stop</a></li>
                    <li><a href="#Reference_functions_Music_StopWithFadeOut">Music.StopWithFadeOut</a></li>
                    <li><a href="#Reference_functions_Music_Pause">Music.Pause</a></li>
                    <li><a href="#Reference_functions_Music_Resume">Music.Resume</a></li>
                    <li><a href="#Reference_functions_Music_Clear">Music.Clear</a></li>
                    <li><a href="#Reference_functions_Music_Loop">Music.Loop</a></li>
                    <li><a href="#Reference_functions_Music_LoopAtTime">Music.LoopAtTime</a></li>
                    <li><a href="#Reference_functions_Music_IsPlaying">Music.IsPlaying</a></li>
                    <li><a href="#Reference_functions_Music_GetPosition">Music.GetPosition</a></li>
                    <li><a href="#Reference_functions_Music_Alter">Music.Alter</a></li>
                </ul>
            </p>
            <p id="Reference_Number">
                <h2>Number</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Number_ToString">Number.ToString</a></li>
                    <li><a href="#Reference_functions_Number_AsInteger">Number.AsInteger</a></li>
                    <li><a href="#Reference_functions_Number_AsDecimal">Number.AsDecimal</a></li>
                </ul>
            </p>
            <p id="Reference_Object">
                <h2>Object</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Object_Loaded">Object.Loaded</a></li>
                    <li><a href="#Reference_functions_Object_SetActivity">Object.SetActivity</a></li>
                    <li><a href="#Reference_functions_Object_GetActivity">Object.GetActivity</a></li>
                </ul>
            </p>
            <p id="Reference_Palette">
                <h2>Palette</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Palette_EnablePaletteUsage">Palette.EnablePaletteUsage</a></li>
                    <li><a href="#Reference_functions_Palette_LoadFromResource">Palette.LoadFromResource</a></li>
                    <li><a href="#Reference_functions_Palette_LoadFromImage">Palette.LoadFromImage</a></li>
                    <li><a href="#Reference_functions_Palette_GetColor">Palette.GetColor</a></li>
                    <li><a href="#Reference_functions_Palette_SetColor">Palette.SetColor</a></li>
                    <li><a href="#Reference_functions_Palette_GetColorTransparent">Palette.GetColorTransparent</a></li>
                    <li><a href="#Reference_functions_Palette_SetColorTransparent">Palette.SetColorTransparent</a></li>
                    <li><a href="#Reference_functions_Palette_MixPalettes">Palette.MixPalettes</a></li>
                    <li><a href="#Reference_functions_Palette_RotateColorsLeft">Palette.RotateColorsLeft</a></li>
                    <li><a href="#Reference_functions_Palette_RotateColorsRight">Palette.RotateColorsRight</a></li>
                    <li><a href="#Reference_functions_Palette_CopyColors">Palette.CopyColors</a></li>
                    <li><a href="#Reference_functions_Palette_UsePaletteIndexLines">Palette.UsePaletteIndexLines</a></li>
                    <li><a href="#Reference_functions_Palette_SetPaletteIndexLines">Palette.SetPaletteIndexLines</a></li>
                </ul>
            </p>
            <p id="Reference_RSDK.Math">
                <h2>RSDK.Math</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_RSDK_Math_GetRandSeed">RSDK.Math.GetRandSeed</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_SetRandSeed">RSDK.Math.SetRandSeed</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_RandomInteger">RSDK.Math.RandomInteger</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_RandomIntegerSeeded">RSDK.Math.RandomIntegerSeeded</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_ClearTrigLookupTables">RSDK.Math.ClearTrigLookupTables</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_CalculateTrigAngles">RSDK.Math.CalculateTrigAngles</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_Sin1024">RSDK.Math.Sin1024</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_Cos1024">RSDK.Math.Cos1024</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_Tan1024">RSDK.Math.Tan1024</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_ASin1024">RSDK.Math.ASin1024</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_ACos1024">RSDK.Math.ACos1024</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_Cos512">RSDK.Math.Cos512</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_Tan512">RSDK.Math.Tan512</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_ASin512">RSDK.Math.ASin512</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_ACos512">RSDK.Math.ACos512</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_Cos256">RSDK.Math.Cos256</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_Tan256">RSDK.Math.Tan256</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_ASin256">RSDK.Math.ASin256</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_ACos256">RSDK.Math.ACos256</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_RadianToInteger">RSDK.Math.RadianToInteger</a></li>
                    <li><a href="#Reference_functions_RSDK_Math_IntegerToRadian">RSDK.Math.IntegerToRadian</a></li>
                </ul>
            </p>
            <p id="Reference_RSDK.Matrix">
                <h2>RSDK.Matrix</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_RSDK_Matrix_Create256">RSDK.Matrix.Create256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_Identity256">RSDK.Matrix.Identity256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_Multiply256">RSDK.Matrix.Multiply256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_Translate256">RSDK.Matrix.Translate256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_Scale256">RSDK.Matrix.Scale256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_RotateX256">RSDK.Matrix.RotateX256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_RotateY256">RSDK.Matrix.RotateY256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_RotateZ256">RSDK.Matrix.RotateZ256</a></li>
                    <li><a href="#Reference_functions_RSDK_Matrix_Rotate256">RSDK.Matrix.Rotate256</a></li>
                </ul>
            </p>
            <p id="Reference_Random">
                <h2>Random</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Random_SetSeed">Random.SetSeed</a></li>
                    <li><a href="#Reference_functions_Random_GetSeed">Random.GetSeed</a></li>
                    <li><a href="#Reference_functions_Random_Max">Random.Max</a></li>
                    <li><a href="#Reference_functions_Random_Range">Random.Range</a></li>
                </ul>
            </p>
            <p id="Reference_Resources">
                <h2>Resources</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Resources_LoadSprite">Resources.LoadSprite</a></li>
                    <li><a href="#Reference_functions_Resources_LoadImage">Resources.LoadImage</a></li>
                    <li><a href="#Reference_functions_Resources_LoadFont">Resources.LoadFont</a></li>
                    <li><a href="#Reference_functions_Resources_LoadModel">Resources.LoadModel</a></li>
                    <li><a href="#Reference_functions_Resources_LoadMusic">Resources.LoadMusic</a></li>
                    <li><a href="#Reference_functions_Resources_LoadSound">Resources.LoadSound</a></li>
                    <li><a href="#Reference_functions_Resources_LoadVideo">Resources.LoadVideo</a></li>
                    <li><a href="#Reference_functions_Resources_FileExists">Resources.FileExists</a></li>
                    <li><a href="#Reference_functions_Resources_ReadAllText">Resources.ReadAllText</a></li>
                </ul>
            </p>
            <p id="Reference_Scene">
                <h2>Scene</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Scene_ProcessObjectMovement">Scene.ProcessObjectMovement</a></li>
                    <li><a href="#Reference_functions_Scene_ObjectTileCollision">Scene.ObjectTileCollision</a></li>
                    <li><a href="#Reference_functions_Scene_ObjectTileGrip">Scene.ObjectTileGrip</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionTouch">Scene.CheckObjectCollisionTouch</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionCircle">Scene.CheckObjectCollisionCircle</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionBox">Scene.CheckObjectCollisionBox</a></li>
                    <li><a href="#Reference_functions_Scene_CheckObjectCollisionPlatform">Scene.CheckObjectCollisionPlatform</a></li>
                    <li><a href="#Reference_functions_Scene_Load">Scene.Load</a></li>
                    <li><a href="#Reference_functions_Scene_LoadNoPersistency">Scene.LoadNoPersistency</a></li>
                    <li><a href="#Reference_functions_Scene_LoadPosition">Scene.LoadPosition</a></li>
                    <li><a href="#Reference_functions_Scene_Change">Scene.Change</a></li>
                    <li><a href="#Reference_functions_Scene_LoadTileCollisions">Scene.LoadTileCollisions</a></li>
                    <li><a href="#Reference_functions_Scene_AreTileCollisionsLoaded">Scene.AreTileCollisionsLoaded</a></li>
                    <li><a href="#Reference_functions_Scene_AddTileset">Scene.AddTileset</a></li>
                    <li><a href="#Reference_functions_Scene_Restart">Scene.Restart</a></li>
                    <li><a href="#Reference_functions_Scene_PropertyExists">Scene.PropertyExists</a></li>
                    <li><a href="#Reference_functions_Scene_GetProperty">Scene.GetProperty</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerCount">Scene.GetLayerCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerIndex">Scene.GetLayerIndex</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerVisible">Scene.GetLayerVisible</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerOpacity">Scene.GetLayerOpacity</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerUsePaletteIndexLines">Scene.GetLayerUsePaletteIndexLines</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerProperty">Scene.GetLayerProperty</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerExists">Scene.GetLayerExists</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDeformSplitLine">Scene.GetLayerDeformSplitLine</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDeformOffsetA">Scene.GetLayerDeformOffsetA</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDeformOffsetB">Scene.GetLayerDeformOffsetB</a></li>
                    <li><a href="#Reference_functions_Scene_LayerPropertyExists">Scene.LayerPropertyExists</a></li>
                    <li><a href="#Reference_functions_Scene_GetName">Scene.GetName</a></li>
                    <li><a href="#Reference_functions_Scene_GetWidth">Scene.GetWidth</a></li>
                    <li><a href="#Reference_functions_Scene_GetHeight">Scene.GetHeight</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerWidth">Scene.GetLayerWidth</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerHeight">Scene.GetLayerHeight</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerOffsetX">Scene.GetLayerOffsetX</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerOffsetY">Scene.GetLayerOffsetY</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerDrawGroup">Scene.GetLayerDrawGroup</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerHorizontalRepeat">Scene.GetLayerHorizontalRepeat</a></li>
                    <li><a href="#Reference_functions_Scene_GetLayerVerticalRepeat">Scene.GetLayerVerticalRepeat</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetCount">Scene.GetTilesetCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetIndex">Scene.GetTilesetIndex</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetName">Scene.GetTilesetName</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetTileCount">Scene.GetTilesetTileCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetFirstTileID">Scene.GetTilesetFirstTileID</a></li>
                    <li><a href="#Reference_functions_Scene_GetTilesetPaletteIndex">Scene.GetTilesetPaletteIndex</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileWidth">Scene.GetTileWidth</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileHeight">Scene.GetTileHeight</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileID">Scene.GetTileID</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileFlipX">Scene.GetTileFlipX</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileFlipY">Scene.GetTileFlipY</a></li>
                    <li><a href="#Reference_functions_Scene_GetDrawGroupCount">Scene.GetDrawGroupCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetDrawGroupEntityDepthSorting">Scene.GetDrawGroupEntityDepthSorting</a></li>
                    <li><a href="#Reference_functions_Scene_GetListPos">Scene.GetListPos</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentFolder">Scene.GetCurrentFolder</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentID">Scene.GetCurrentID</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentResourceFolder">Scene.GetCurrentResourceFolder</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentSpriteFolder">Scene.GetCurrentSpriteFolder</a></li>
                    <li><a href="#Reference_functions_Scene_GetCurrentCategory">Scene.GetCurrentCategory</a></li>
                    <li><a href="#Reference_functions_Scene_GetActiveCategory">Scene.GetActiveCategory</a></li>
                    <li><a href="#Reference_functions_Scene_GetCategoryCount">Scene.GetCategoryCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetStageCount">Scene.GetStageCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetDebugMode">Scene.GetDebugMode</a></li>
                    <li><a href="#Reference_functions_Scene_GetFirstInstance">Scene.GetFirstInstance</a></li>
                    <li><a href="#Reference_functions_Scene_GetLastInstance">Scene.GetLastInstance</a></li>
                    <li><a href="#Reference_functions_Scene_GetInstanceCount">Scene.GetInstanceCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetStaticInstanceCount">Scene.GetStaticInstanceCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetDynamicInstanceCount">Scene.GetDynamicInstanceCount</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimationEnabled">Scene.GetTileAnimationEnabled</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequence">Scene.GetTileAnimSequence</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequenceDurations">Scene.GetTileAnimSequenceDurations</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequencePaused">Scene.GetTileAnimSequencePaused</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequenceSpeed">Scene.GetTileAnimSequenceSpeed</a></li>
                    <li><a href="#Reference_functions_Scene_GetTileAnimSequenceFrame">Scene.GetTileAnimSequenceFrame</a></li>
                    <li><a href="#Reference_functions_Scene_IsCurrentEntryValid">Scene.IsCurrentEntryValid</a></li>
                    <li><a href="#Reference_functions_Scene_IsUsingFolder">Scene.IsUsingFolder</a></li>
                    <li><a href="#Reference_functions_Scene_IsUsingID">Scene.IsUsingID</a></li>
                    <li><a href="#Reference_functions_Scene_CheckValidScene">Scene.CheckValidScene</a></li>
                    <li><a href="#Reference_functions_Scene_CheckSceneFolder">Scene.CheckSceneFolder</a></li>
                    <li><a href="#Reference_functions_Scene_CheckSceneID">Scene.CheckSceneID</a></li>
                    <li><a href="#Reference_functions_Scene_IsPaused">Scene.IsPaused</a></li>
                    <li><a href="#Reference_functions_Scene_SetListPos">Scene.SetListPos</a></li>
                    <li><a href="#Reference_functions_Scene_SetActiveCategory">Scene.SetActiveCategory</a></li>
                    <li><a href="#Reference_functions_Scene_SetDebugMode">Scene.SetDebugMode</a></li>
                    <li><a href="#Reference_functions_Scene_SetScene">Scene.SetScene</a></li>
                    <li><a href="#Reference_functions_Scene_SetTile">Scene.SetTile</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileCollisionSides">Scene.SetTileCollisionSides</a></li>
                    <li><a href="#Reference_functions_Scene_SetPaused">Scene.SetPaused</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimationEnabled">Scene.SetTileAnimationEnabled</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequence">Scene.SetTileAnimSequence</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequenceFromSprite">Scene.SetTileAnimSequenceFromSprite</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequencePaused">Scene.SetTileAnimSequencePaused</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequenceSpeed">Scene.SetTileAnimSequenceSpeed</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileAnimSequenceFrame">Scene.SetTileAnimSequenceFrame</a></li>
                    <li><a href="#Reference_functions_Scene_SetTilesetPaletteIndex">Scene.SetTilesetPaletteIndex</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerVisible">Scene.SetLayerVisible</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerCollidable">Scene.SetLayerCollidable</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerInternalSize">Scene.SetLayerInternalSize</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOffsetPosition">Scene.SetLayerOffsetPosition</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOffsetX">Scene.SetLayerOffsetX</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOffsetY">Scene.SetLayerOffsetY</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDrawGroup">Scene.SetLayerDrawGroup</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDrawBehavior">Scene.SetLayerDrawBehavior</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerRepeat">Scene.SetLayerRepeat</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerHorizontalRepeat">Scene.SetLayerHorizontalRepeat</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerVerticalRepeat">Scene.SetLayerVerticalRepeat</a></li>
                    <li><a href="#Reference_functions_Scene_SetDrawGroupCount">Scene.SetDrawGroupCount</a></li>
                    <li><a href="#Reference_functions_Scene_SetDrawGroupEntityDepthSorting">Scene.SetDrawGroupEntityDepthSorting</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerBlend">Scene.SetLayerBlend</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerOpacity">Scene.SetLayerOpacity</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerUsePaletteIndexLines">Scene.SetLayerUsePaletteIndexLines</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerScroll">Scene.SetLayerScroll</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerSetParallaxLinesBegin">Scene.SetLayerSetParallaxLinesBegin</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerSetParallaxLines">Scene.SetLayerSetParallaxLines</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerSetParallaxLinesEnd">Scene.SetLayerSetParallaxLinesEnd</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerTileDeforms">Scene.SetLayerTileDeforms</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerTileDeformSplitLine">Scene.SetLayerTileDeformSplitLine</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerTileDeformOffsets">Scene.SetLayerTileDeformOffsets</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDeformOffsetA">Scene.SetLayerDeformOffsetA</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerDeformOffsetB">Scene.SetLayerDeformOffsetB</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerCustomScanlineFunction">Scene.SetLayerCustomScanlineFunction</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileScanline">Scene.SetTileScanline</a></li>
                    <li><a href="#Reference_functions_Scene_SetLayerCustomRenderFunction">Scene.SetLayerCustomRenderFunction</a></li>
                    <li><a href="#Reference_functions_Scene_SetObjectViewRender">Scene.SetObjectViewRender</a></li>
                    <li><a href="#Reference_functions_Scene_SetTileViewRender">Scene.SetTileViewRender</a></li>
                </ul>
            </p>
            <p id="Reference_Scene3D">
                <h2>Scene3D</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Scene3D_Create">Scene3D.Create</a></li>
                    <li><a href="#Reference_functions_Scene3D_Delete">Scene3D.Delete</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetDrawMode">Scene3D.SetDrawMode</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFaceCullMode">Scene3D.SetFaceCullMode</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFieldOfView">Scene3D.SetFieldOfView</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFarClippingPlane">Scene3D.SetFarClippingPlane</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetNearClippingPlane">Scene3D.SetNearClippingPlane</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetViewMatrix">Scene3D.SetViewMatrix</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetCustomProjectionMatrix">Scene3D.SetCustomProjectionMatrix</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetAmbientLighting">Scene3D.SetAmbientLighting</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetDiffuseLighting">Scene3D.SetDiffuseLighting</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetSpecularLighting">Scene3D.SetSpecularLighting</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogEquation">Scene3D.SetFogEquation</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogStart">Scene3D.SetFogStart</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogEnd">Scene3D.SetFogEnd</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogDensity">Scene3D.SetFogDensity</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogColor">Scene3D.SetFogColor</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetFogSmoothness">Scene3D.SetFogSmoothness</a></li>
                    <li><a href="#Reference_functions_Scene3D_SetPointSize">Scene3D.SetPointSize</a></li>
                    <li><a href="#Reference_functions_Scene3D_Clear">Scene3D.Clear</a></li>
                </ul>
            </p>
            <p id="Reference_SceneList">
                <h2>SceneList</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_SceneList_Get">SceneList.Get</a></li>
                    <li><a href="#Reference_functions_SceneList_GetEntryID">SceneList.GetEntryID</a></li>
                    <li><a href="#Reference_functions_SceneList_GetCategoryID">SceneList.GetCategoryID</a></li>
                    <li><a href="#Reference_functions_SceneList_GetEntryName">SceneList.GetEntryName</a></li>
                    <li><a href="#Reference_functions_SceneList_GetCategoryName">SceneList.GetCategoryName</a></li>
                    <li><a href="#Reference_functions_SceneList_GetEntryProperty">SceneList.GetEntryProperty</a></li>
                    <li><a href="#Reference_functions_SceneList_GetCategoryProperty">SceneList.GetCategoryProperty</a></li>
                    <li><a href="#Reference_functions_SceneList_HasEntryProperty">SceneList.HasEntryProperty</a></li>
                    <li><a href="#Reference_functions_SceneList_HasCategoryProperty">SceneList.HasCategoryProperty</a></li>
                    <li><a href="#Reference_functions_SceneList_GetCategoryCount">SceneList.GetCategoryCount</a></li>
                    <li><a href="#Reference_functions_SceneList_GetSceneCount">SceneList.GetSceneCount</a></li>
                </ul>
            </p>
            <p id="Reference_Serializer">
                <h2>Serializer</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Serializer_WriteToStream">Serializer.WriteToStream</a></li>
                    <li><a href="#Reference_functions_Serializer_ReadFromStream">Serializer.ReadFromStream</a></li>
                </ul>
            </p>
            <p id="Reference_Settings">
                <h2>Settings</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Settings_Load">Settings.Load</a></li>
                    <li><a href="#Reference_functions_Settings_Save">Settings.Save</a></li>
                    <li><a href="#Reference_functions_Settings_SetFilename">Settings.SetFilename</a></li>
                    <li><a href="#Reference_functions_Settings_GetString">Settings.GetString</a></li>
                    <li><a href="#Reference_functions_Settings_GetNumber">Settings.GetNumber</a></li>
                    <li><a href="#Reference_functions_Settings_GetInteger">Settings.GetInteger</a></li>
                    <li><a href="#Reference_functions_Settings_GetBool">Settings.GetBool</a></li>
                    <li><a href="#Reference_functions_Settings_SetString">Settings.SetString</a></li>
                    <li><a href="#Reference_functions_Settings_SetNumber">Settings.SetNumber</a></li>
                    <li><a href="#Reference_functions_Settings_SetInteger">Settings.SetInteger</a></li>
                    <li><a href="#Reference_functions_Settings_SetBool">Settings.SetBool</a></li>
                    <li><a href="#Reference_functions_Settings_AddSection">Settings.AddSection</a></li>
                    <li><a href="#Reference_functions_Settings_RemoveSection">Settings.RemoveSection</a></li>
                    <li><a href="#Reference_functions_Settings_SectionExists">Settings.SectionExists</a></li>
                    <li><a href="#Reference_functions_Settings_GetSectionCount">Settings.GetSectionCount</a></li>
                    <li><a href="#Reference_functions_Settings_PropertyExists">Settings.PropertyExists</a></li>
                    <li><a href="#Reference_functions_Settings_RemoveProperty">Settings.RemoveProperty</a></li>
                    <li><a href="#Reference_functions_Settings_GetPropertyCount">Settings.GetPropertyCount</a></li>
                </ul>
            </p>
            <p id="Reference_Shader">
                <h2>Shader</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Shader_Set">Shader.Set</a></li>
                    <li><a href="#Reference_functions_Shader_Unset">Shader.Unset</a></li>
                </ul>
            </p>
            <p id="Reference_SocketClient">
                <h2>SocketClient</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_SocketClient_Open">SocketClient.Open</a></li>
                    <li><a href="#Reference_functions_SocketClient_Close">SocketClient.Close</a></li>
                    <li><a href="#Reference_functions_SocketClient_IsOpen">SocketClient.IsOpen</a></li>
                    <li><a href="#Reference_functions_SocketClient_Poll">SocketClient.Poll</a></li>
                    <li><a href="#Reference_functions_SocketClient_BytesToRead">SocketClient.BytesToRead</a></li>
                    <li><a href="#Reference_functions_SocketClient_ReadDecimal">SocketClient.ReadDecimal</a></li>
                    <li><a href="#Reference_functions_SocketClient_ReadInteger">SocketClient.ReadInteger</a></li>
                    <li><a href="#Reference_functions_SocketClient_ReadString">SocketClient.ReadString</a></li>
                    <li><a href="#Reference_functions_SocketClient_WriteDecimal">SocketClient.WriteDecimal</a></li>
                    <li><a href="#Reference_functions_SocketClient_WriteInteger">SocketClient.WriteInteger</a></li>
                    <li><a href="#Reference_functions_SocketClient_WriteString">SocketClient.WriteString</a></li>
                </ul>
            </p>
            <p id="Reference_Sound">
                <h2>Sound</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Sound_Play">Sound.Play</a></li>
                    <li><a href="#Reference_functions_Sound_Loop">Sound.Loop</a></li>
                    <li><a href="#Reference_functions_Sound_Stop">Sound.Stop</a></li>
                    <li><a href="#Reference_functions_Sound_Pause">Sound.Pause</a></li>
                    <li><a href="#Reference_functions_Sound_Resume">Sound.Resume</a></li>
                    <li><a href="#Reference_functions_Sound_StopAll">Sound.StopAll</a></li>
                    <li><a href="#Reference_functions_Sound_PauseAll">Sound.PauseAll</a></li>
                    <li><a href="#Reference_functions_Sound_ResumeAll">Sound.ResumeAll</a></li>
                    <li><a href="#Reference_functions_Sound_IsPlaying">Sound.IsPlaying</a></li>
                    <li><a href="#Reference_functions_Sound_PlayMultiple">Sound.PlayMultiple</a></li>
                    <li><a href="#Reference_functions_Sound_LoopMultiple">Sound.LoopMultiple</a></li>
                    <li><a href="#Reference_functions_Sound_PlayAtChannel">Sound.PlayAtChannel</a></li>
                    <li><a href="#Reference_functions_Sound_LoopAtChannel">Sound.LoopAtChannel</a></li>
                    <li><a href="#Reference_functions_Sound_StopChannel">Sound.StopChannel</a></li>
                    <li><a href="#Reference_functions_Sound_PauseChannel">Sound.PauseChannel</a></li>
                    <li><a href="#Reference_functions_Sound_ResumeChannel">Sound.ResumeChannel</a></li>
                    <li><a href="#Reference_functions_Sound_AlterChannel">Sound.AlterChannel</a></li>
                    <li><a href="#Reference_functions_Sound_GetFreeChannel">Sound.GetFreeChannel</a></li>
                    <li><a href="#Reference_functions_Sound_IsChannelFree">Sound.IsChannelFree</a></li>
                </ul>
            </p>
            <p id="Reference_Sprite">
                <h2>Sprite</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Sprite_GetAnimationCount">Sprite.GetAnimationCount</a></li>
                    <li><a href="#Reference_functions_Sprite_GetAnimationName">Sprite.GetAnimationName</a></li>
                    <li><a href="#Reference_functions_Sprite_GetAnimationIndexByName">Sprite.GetAnimationIndexByName</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameLoopIndex">Sprite.GetFrameLoopIndex</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameCount">Sprite.GetFrameCount</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameDuration">Sprite.GetFrameDuration</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameSpeed">Sprite.GetFrameSpeed</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameWidth">Sprite.GetFrameWidth</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameHeight">Sprite.GetFrameHeight</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameID">Sprite.GetFrameID</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameOffsetX">Sprite.GetFrameOffsetX</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameOffsetY">Sprite.GetFrameOffsetY</a></li>
                    <li><a href="#Reference_functions_Sprite_GetFrameHitbox">Sprite.GetFrameHitbox</a></li>
                    <li><a href="#Reference_functions_Sprite_MakePalettized">Sprite.MakePalettized</a></li>
                    <li><a href="#Reference_functions_Sprite_MakeNonPalettized">Sprite.MakeNonPalettized</a></li>
                </ul>
            </p>
            <p id="Reference_Stream">
                <h2>Stream</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Stream_FromResource">Stream.FromResource</a></li>
                    <li><a href="#Reference_functions_Stream_FromFile">Stream.FromFile</a></li>
                    <li><a href="#Reference_functions_Stream_Close">Stream.Close</a></li>
                    <li><a href="#Reference_functions_Stream_Seek">Stream.Seek</a></li>
                    <li><a href="#Reference_functions_Stream_SeekEnd">Stream.SeekEnd</a></li>
                    <li><a href="#Reference_functions_Stream_Skip">Stream.Skip</a></li>
                    <li><a href="#Reference_functions_Stream_Position">Stream.Position</a></li>
                    <li><a href="#Reference_functions_Stream_Length">Stream.Length</a></li>
                    <li><a href="#Reference_functions_Stream_ReadByte">Stream.ReadByte</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt16">Stream.ReadUInt16</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt16BE">Stream.ReadUInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt32">Stream.ReadUInt32</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt32BE">Stream.ReadUInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadUInt64">Stream.ReadUInt64</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt16">Stream.ReadInt16</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt16BE">Stream.ReadInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt32">Stream.ReadInt32</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt32BE">Stream.ReadInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_ReadInt64">Stream.ReadInt64</a></li>
                    <li><a href="#Reference_functions_Stream_ReadFloat">Stream.ReadFloat</a></li>
                    <li><a href="#Reference_functions_Stream_ReadString">Stream.ReadString</a></li>
                    <li><a href="#Reference_functions_Stream_ReadLine">Stream.ReadLine</a></li>
                    <li><a href="#Reference_functions_Stream_WriteByte">Stream.WriteByte</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt16">Stream.WriteUInt16</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt16BE">Stream.WriteUInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt32">Stream.WriteUInt32</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt32BE">Stream.WriteUInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteUInt64">Stream.WriteUInt64</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt16">Stream.WriteInt16</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt16BE">Stream.WriteInt16BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt32">Stream.WriteInt32</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt32BE">Stream.WriteInt32BE</a></li>
                    <li><a href="#Reference_functions_Stream_WriteInt64">Stream.WriteInt64</a></li>
                    <li><a href="#Reference_functions_Stream_WriteFloat">Stream.WriteFloat</a></li>
                    <li><a href="#Reference_functions_Stream_WriteString">Stream.WriteString</a></li>
                </ul>
            </p>
            <p id="Reference_String">
                <h2>String</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_String_Format">String.Format</a></li>
                    <li><a href="#Reference_functions_String_Split">String.Split</a></li>
                    <li><a href="#Reference_functions_String_CharAt">String.CharAt</a></li>
                    <li><a href="#Reference_functions_String_Length">String.Length</a></li>
                    <li><a href="#Reference_functions_String_Compare">String.Compare</a></li>
                    <li><a href="#Reference_functions_String_IndexOf">String.IndexOf</a></li>
                    <li><a href="#Reference_functions_String_Contains">String.Contains</a></li>
                    <li><a href="#Reference_functions_String_Substring">String.Substring</a></li>
                    <li><a href="#Reference_functions_String_ToUpperCase">String.ToUpperCase</a></li>
                    <li><a href="#Reference_functions_String_ToLowerCase">String.ToLowerCase</a></li>
                    <li><a href="#Reference_functions_String_LastIndexOf">String.LastIndexOf</a></li>
                    <li><a href="#Reference_functions_String_ParseInteger">String.ParseInteger</a></li>
                    <li><a href="#Reference_functions_String_ParseDecimal">String.ParseDecimal</a></li>
                </ul>
            </p>
            <p id="Reference_Texture">
                <h2>Texture</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Texture_Create">Texture.Create</a></li>
                    <li><a href="#Reference_functions_Texture_Copy">Texture.Copy</a></li>
                </ul>
            </p>
            <p id="Reference_Thread">
                <h2>Thread</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Thread_RunEvent">Thread.RunEvent</a></li>
                    <li><a href="#Reference_functions_Thread_Sleep">Thread.Sleep</a></li>
                </ul>
            </p>
            <p id="Reference_TileCollision">
                <h2>TileCollision</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_TileCollision_Point">TileCollision.Point</a></li>
                    <li><a href="#Reference_functions_TileCollision_PointExtended">TileCollision.PointExtended</a></li>
                    <li><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></li>
                </ul>
            </p>
            <p id="Reference_TileInfo">
                <h2>TileInfo</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_TileInfo_SetSpriteInfo">TileInfo.SetSpriteInfo</a></li>
                    <li><a href="#Reference_functions_TileInfo_IsEmptySpace">TileInfo.IsEmptySpace</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetEmptyTile">TileInfo.GetEmptyTile</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetCollision">TileInfo.GetCollision</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetAngle">TileInfo.GetAngle</a></li>
                    <li><a href="#Reference_functions_TileInfo_GetBehaviorFlag">TileInfo.GetBehaviorFlag</a></li>
                    <li><a href="#Reference_functions_TileInfo_IsCeiling">TileInfo.IsCeiling</a></li>
                </ul>
            </p>
            <p id="Reference_Touch">
                <h2>Touch</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Touch_GetX">Touch.GetX</a></li>
                    <li><a href="#Reference_functions_Touch_GetY">Touch.GetY</a></li>
                    <li><a href="#Reference_functions_Touch_IsDown">Touch.IsDown</a></li>
                    <li><a href="#Reference_functions_Touch_IsPressed">Touch.IsPressed</a></li>
                    <li><a href="#Reference_functions_Touch_IsReleased">Touch.IsReleased</a></li>
                </ul>
            </p>
            <p id="Reference_VertexBuffer">
                <h2>VertexBuffer</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_VertexBuffer_Create">VertexBuffer.Create</a></li>
                    <li><a href="#Reference_functions_VertexBuffer_Resize">VertexBuffer.Resize</a></li>
                    <li><a href="#Reference_functions_VertexBuffer_Clear">VertexBuffer.Clear</a></li>
                    <li><a href="#Reference_functions_VertexBuffer_Delete">VertexBuffer.Delete</a></li>
                </ul>
            </p>
            <p id="Reference_Video">
                <h2>Video</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Video_Play">Video.Play</a></li>
                    <li><a href="#Reference_functions_Video_Pause">Video.Pause</a></li>
                    <li><a href="#Reference_functions_Video_Resume">Video.Resume</a></li>
                    <li><a href="#Reference_functions_Video_Stop">Video.Stop</a></li>
                    <li><a href="#Reference_functions_Video_Close">Video.Close</a></li>
                    <li><a href="#Reference_functions_Video_IsBuffering">Video.IsBuffering</a></li>
                    <li><a href="#Reference_functions_Video_IsPlaying">Video.IsPlaying</a></li>
                    <li><a href="#Reference_functions_Video_IsPaused">Video.IsPaused</a></li>
                    <li><a href="#Reference_functions_Video_SetPosition">Video.SetPosition</a></li>
                    <li><a href="#Reference_functions_Video_SetBufferDuration">Video.SetBufferDuration</a></li>
                    <li><a href="#Reference_functions_Video_SetTrackEnabled">Video.SetTrackEnabled</a></li>
                    <li><a href="#Reference_functions_Video_GetPosition">Video.GetPosition</a></li>
                    <li><a href="#Reference_functions_Video_GetDuration">Video.GetDuration</a></li>
                    <li><a href="#Reference_functions_Video_GetBufferDuration">Video.GetBufferDuration</a></li>
                    <li><a href="#Reference_functions_Video_GetBufferEnd">Video.GetBufferEnd</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackCount">Video.GetTrackCount</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackEnabled">Video.GetTrackEnabled</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackName">Video.GetTrackName</a></li>
                    <li><a href="#Reference_functions_Video_GetTrackLanguage">Video.GetTrackLanguage</a></li>
                    <li><a href="#Reference_functions_Video_GetDefaultVideoTrack">Video.GetDefaultVideoTrack</a></li>
                    <li><a href="#Reference_functions_Video_GetDefaultAudioTrack">Video.GetDefaultAudioTrack</a></li>
                    <li><a href="#Reference_functions_Video_GetDefaultSubtitleTrack">Video.GetDefaultSubtitleTrack</a></li>
                    <li><a href="#Reference_functions_Video_GetWidth">Video.GetWidth</a></li>
                    <li><a href="#Reference_functions_Video_GetHeight">Video.GetHeight</a></li>
                </ul>
            </p>
            <p id="Reference_View">
                <h2>View</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_View_SetX">View.SetX</a></li>
                    <li><a href="#Reference_functions_View_SetY">View.SetY</a></li>
                    <li><a href="#Reference_functions_View_SetZ">View.SetZ</a></li>
                    <li><a href="#Reference_functions_View_SetPosition">View.SetPosition</a></li>
                    <li><a href="#Reference_functions_View_SetAngle">View.SetAngle</a></li>
                    <li><a href="#Reference_functions_View_SetSize">View.SetSize</a></li>
                    <li><a href="#Reference_functions_View_SetOutputX">View.SetOutputX</a></li>
                    <li><a href="#Reference_functions_View_SetOutputY">View.SetOutputY</a></li>
                    <li><a href="#Reference_functions_View_SetOutputPosition">View.SetOutputPosition</a></li>
                    <li><a href="#Reference_functions_View_SetOutputSize">View.SetOutputSize</a></li>
                    <li><a href="#Reference_functions_View_GetX">View.GetX</a></li>
                    <li><a href="#Reference_functions_View_GetY">View.GetY</a></li>
                    <li><a href="#Reference_functions_View_GetZ">View.GetZ</a></li>
                    <li><a href="#Reference_functions_View_GetWidth">View.GetWidth</a></li>
                    <li><a href="#Reference_functions_View_GetHeight">View.GetHeight</a></li>
                    <li><a href="#Reference_functions_View_GetCenterX">View.GetCenterX</a></li>
                    <li><a href="#Reference_functions_View_GetCenterY">View.GetCenterY</a></li>
                    <li><a href="#Reference_functions_View_IsUsingDrawTarget">View.IsUsingDrawTarget</a></li>
                    <li><a href="#Reference_functions_View_SetUseDrawTarget">View.SetUseDrawTarget</a></li>
                    <li><a href="#Reference_functions_View_GetDrawTarget">View.GetDrawTarget</a></li>
                    <li><a href="#Reference_functions_View_IsUsingSoftwareRenderer">View.IsUsingSoftwareRenderer</a></li>
                    <li><a href="#Reference_functions_View_SetUseSoftwareRenderer">View.SetUseSoftwareRenderer</a></li>
                    <li><a href="#Reference_functions_View_SetUsePerspective">View.SetUsePerspective</a></li>
                    <li><a href="#Reference_functions_View_IsEnabled">View.IsEnabled</a></li>
                    <li><a href="#Reference_functions_View_SetEnabled">View.SetEnabled</a></li>
                    <li><a href="#Reference_functions_View_IsVisible">View.IsVisible</a></li>
                    <li><a href="#Reference_functions_View_SetVisible">View.SetVisible</a></li>
                    <li><a href="#Reference_functions_View_SetFieldOfView">View.SetFieldOfView</a></li>
                    <li><a href="#Reference_functions_View_SetPriority">View.SetPriority</a></li>
                    <li><a href="#Reference_functions_View_GetPriority">View.GetPriority</a></li>
                    <li><a href="#Reference_functions_View_GetCurrent">View.GetCurrent</a></li>
                    <li><a href="#Reference_functions_View_GetCount">View.GetCount</a></li>
                    <li><a href="#Reference_functions_View_GetActiveCount">View.GetActiveCount</a></li>
                    <li><a href="#Reference_functions_View_CheckOnScreen">View.CheckOnScreen</a></li>
                    <li><a href="#Reference_functions_View_CheckPosOnScreen">View.CheckPosOnScreen</a></li>
                </ul>
            </p>
            <p id="Reference_Window">
                <h2>Window</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Window_SetSize">Window.SetSize</a></li>
                    <li><a href="#Reference_functions_Window_SetFullscreen">Window.SetFullscreen</a></li>
                    <li><a href="#Reference_functions_Window_SetBorderless">Window.SetBorderless</a></li>
                    <li><a href="#Reference_functions_Window_SetVSync">Window.SetVSync</a></li>
                    <li><a href="#Reference_functions_Window_SetPosition">Window.SetPosition</a></li>
                    <li><a href="#Reference_functions_Window_SetPositionCentered">Window.SetPositionCentered</a></li>
                    <li><a href="#Reference_functions_Window_SetTitle">Window.SetTitle</a></li>
                    <li><a href="#Reference_functions_Window_GetWidth">Window.GetWidth</a></li>
                    <li><a href="#Reference_functions_Window_GetHeight">Window.GetHeight</a></li>
                    <li><a href="#Reference_functions_Window_GetFullscreen">Window.GetFullscreen</a></li>
                    <li><a href="#Reference_functions_Window_IsResizeable">Window.IsResizeable</a></li>
                </ul>
            </p>
            <p id="Reference_XML">
                <h2>XML</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_XML_Parse">XML.Parse</a></li>
                </ul>
            </p>
        <h3>Instance methods</h3>
            <p id="Reference_Instance">
                <h2>Instance</h2>
                <i>Class methods:</i>
                <ul>
                    <li><a href="#Reference_functions_Instance_Create">Instance.Create</a></li>
                    <li><a href="#Reference_functions_Instance_GetNth">Instance.GetNth</a></li>
                    <li><a href="#Reference_functions_Instance_IsClass">Instance.IsClass</a></li>
                    <li><a href="#Reference_functions_Instance_GetClass">Instance.GetClass</a></li>
                    <li><a href="#Reference_functions_Instance_GetCount">Instance.GetCount</a></li>
                    <li><a href="#Reference_functions_Instance_GetNextInstance">Instance.GetNextInstance</a></li>
                    <li><a href="#Reference_functions_Instance_GetBySlotID">Instance.GetBySlotID</a></li>
                    <li><a href="#Reference_functions_Instance_DisableAutoAnimate">Instance.DisableAutoAnimate</a></li>
                    <li><a href="#Reference_functions_Instance_Copy">Instance.Copy</a></li>
                    <li><a href="#Reference_functions_Instance_ChangeClass">Instance.ChangeClass</a></li>
                </ul>
                <i>Instance methods:</i>
                <ul>
                    <li><a href="#Reference_methods_instance_SetAnimation">instance.SetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_ResetAnimation">instance.ResetAnimation</a></li>
                    <li><a href="#Reference_methods_instance_Animate">instance.Animate</a></li>
                    <li><a href="#Reference_methods_instance_GetIDWithinClass">instance.GetIDWithinClass</a></li>
                    <li><a href="#Reference_methods_instance_AddToRegistry">instance.AddToRegistry</a></li>
                    <li><a href="#Reference_methods_instance_IsInRegistry">instance.IsInRegistry</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromRegistry">instance.RemoveFromRegistry</a></li>
                    <li><a href="#Reference_methods_instance_ApplyMotion">instance.ApplyMotion</a></li>
                    <li><a href="#Reference_methods_instance_InView">instance.InView</a></li>
                    <li><a href="#Reference_methods_instance_CollidedWithObject">instance.CollidedWithObject</a></li>
                    <li><a href="#Reference_methods_instance_GetHitboxFromSprite">instance.GetHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_ReturnHitboxFromSprite">instance.ReturnHitboxFromSprite</a></li>
                    <li><a href="#Reference_methods_instance_CollideWithObject">instance.CollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_SolidCollideWithObject">instance.SolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_TopSolidCollideWithObject">instance.TopSolidCollideWithObject</a></li>
                    <li><a href="#Reference_methods_instance_PropertyExists">instance.PropertyExists</a></li>
                    <li><a href="#Reference_methods_instance_PropertyGet">instance.PropertyGet</a></li>
                    <li><a href="#Reference_methods_instance_SetViewVisibility">instance.SetViewVisibility</a></li>
                    <li><a href="#Reference_methods_instance_SetViewOverride">instance.SetViewOverride</a></li>
                    <li><a href="#Reference_methods_instance_AddToDrawGroup">instance.AddToDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_IsInDrawGroup">instance.IsInDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_RemoveFromDrawGroup">instance.RemoveFromDrawGroup</a></li>
                    <li><a href="#Reference_methods_instance_PlaySound">instance.PlaySound</a></li>
                    <li><a href="#Reference_methods_instance_LoopSound">instance.LoopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopSound">instance.StopSound</a></li>
                    <li><a href="#Reference_methods_instance_StopAllSounds">instance.StopAllSounds</a></li>
                </ul>
                <i>Instance fields:</i>
                <ul>
                    <li><a href="#Reference_fields_instance_X">instance.X</a></li>
                    <li><a href="#Reference_fields_instance_Y">instance.Y</a></li>
                    <li><a href="#Reference_fields_instance_Z">instance.Z</a></li>
                    <li><a href="#Reference_fields_instance_XSpeed">instance.XSpeed</a></li>
                    <li><a href="#Reference_fields_instance_YSpeed">instance.YSpeed</a></li>
                    <li><a href="#Reference_fields_instance_GroundSpeed">instance.GroundSpeed</a></li>
                    <li><a href="#Reference_fields_instance_Gravity">instance.Gravity</a></li>
                    <li><a href="#Reference_fields_instance_AutoPhysics">instance.AutoPhysics</a></li>
                    <li><a href="#Reference_fields_instance_Angle">instance.Angle</a></li>
                    <li><a href="#Reference_fields_instance_AngleMode">instance.AngleMode</a></li>
                    <li><a href="#Reference_fields_instance_Ground">instance.Ground</a></li>
                    <li><a href="#Reference_fields_instance_ScaleX">instance.ScaleX</a></li>
                    <li><a href="#Reference_fields_instance_ScaleY">instance.ScaleY</a></li>
                    <li><a href="#Reference_fields_instance_Rotation">instance.Rotation</a></li>
                    <li><a href="#Reference_fields_instance_Alpha">instance.Alpha</a></li>
                    <li><a href="#Reference_fields_instance_Priority">instance.Priority</a></li>
                    <li><a href="#Reference_fields_instance_Depth">instance.Depth</a></li>
                    <li><a href="#Reference_fields_instance_Sprite">instance.Sprite</a></li>
                    <li><a href="#Reference_fields_instance_CurrentAnimation">instance.CurrentAnimation</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrame">instance.CurrentFrame</a></li>
                    <li><a href="#Reference_fields_instance_CurrentFrameCount">instance.CurrentFrameCount</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeed">instance.AnimationSpeed</a></li>
                    <li><a href="#Reference_fields_instance_AnimationTimer">instance.AnimationTimer</a></li>
                    <li><a href="#Reference_fields_instance_AnimationFrameDuration">instance.AnimationFrameDuration</a></li>
                    <li><a href="#Reference_fields_instance_AnimationLoopIndex">instance.AnimationLoopIndex</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedMult">instance.AnimationSpeedMult</a></li>
                    <li><a href="#Reference_fields_instance_AnimationSpeedAdd">instance.AnimationSpeedAdd</a></li>
                    <li><a href="#Reference_fields_instance_AutoAnimate">instance.AutoAnimate</a></li>
                    <li><a href="#Reference_fields_instance_OnScreen">instance.OnScreen</a></li>
                    <li><a href="#Reference_fields_instance_WasOffScreen">instance.WasOffScreen</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxW">instance.OnScreenHitboxW</a></li>
                    <li><a href="#Reference_fields_instance_OnScreenHitboxH">instance.OnScreenHitboxH</a></li>
                    <li><a href="#Reference_fields_instance_ViewRenderFlag">instance.ViewRenderFlag</a></li>
                    <li><a href="#Reference_fields_instance_ViewOverrideFlag">instance.ViewOverrideFlag</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionW">instance.UpdateRegionW</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionH">instance.UpdateRegionH</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionTop">instance.UpdateRegionTop</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionLeft">instance.UpdateRegionLeft</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionRight">instance.UpdateRegionRight</a></li>
                    <li><a href="#Reference_fields_instance_UpdateRegionBottom">instance.UpdateRegionBottom</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionW">instance.RenderRegionW</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionH">instance.RenderRegionH</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionTop">instance.RenderRegionTop</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionLeft">instance.RenderRegionLeft</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionRight">instance.RenderRegionRight</a></li>
                    <li><a href="#Reference_fields_instance_RenderRegionBottom">instance.RenderRegionBottom</a></li>
                    <li><a href="#Reference_fields_instance_HitboxW">instance.HitboxW</a></li>
                    <li><a href="#Reference_fields_instance_HitboxH">instance.HitboxH</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffX">instance.HitboxOffX</a></li>
                    <li><a href="#Reference_fields_instance_HitboxOffY">instance.HitboxOffY</a></li>
                    <li><a href="#Reference_fields_instance_HitboxLeft">instance.HitboxLeft</a></li>
                    <li><a href="#Reference_fields_instance_HitboxTop">instance.HitboxTop</a></li>
                    <li><a href="#Reference_fields_instance_HitboxRight">instance.HitboxRight</a></li>
                    <li><a href="#Reference_fields_instance_HitboxBottom">instance.HitboxBottom</a></li>
                    <li><a href="#Reference_fields_instance_FlipFlag">instance.FlipFlag</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_VelocityX">instance.VelocityX</a></li>
                    <li><a href="#Reference_fields_instance_GroundVel">instance.GroundVel</a></li>
                    <li><a href="#Reference_fields_instance_Direction">instance.Direction</a></li>
                    <li><a href="#Reference_fields_instance_OnGround">instance.OnGround</a></li>
                    <li><a href="#Reference_fields_instance_SlotID">instance.SlotID</a></li>
                    <li><a href="#Reference_fields_instance_ZDepth">instance.ZDepth</a></li>
                    <li><a href="#Reference_fields_instance_CollisionLayers">instance.CollisionLayers</a></li>
                    <li><a href="#Reference_fields_instance_CollisionPlane">instance.CollisionPlane</a></li>
                    <li><a href="#Reference_fields_instance_CollisionMode">instance.CollisionMode</a></li>
                    <li><a href="#Reference_fields_instance_TileCollisions">instance.TileCollisions</a></li>
                    <li><a href="#Reference_fields_instance_Activity">instance.Activity</a></li>
                    <li><a href="#Reference_fields_instance_InRange">instance.InRange</a></li>
                    <li><a href="#Reference_fields_instance_SensorX">instance.SensorX</a></li>
                    <li><a href="#Reference_fields_instance_SensorY">instance.SensorY</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_SensorAngle">instance.SensorAngle</a></li>
                    <li><a href="#Reference_fields_instance_Active">instance.Active</a></li>
                    <li><a href="#Reference_fields_instance_Pauseable">instance.Pauseable</a></li>
                    <li><a href="#Reference_fields_instance_Persistent">instance.Persistent</a></li>
                    <li><a href="#Reference_fields_instance_Interactable">instance.Interactable</a></li>
                    <li><a href="#Reference_fields_instance_Persistence">instance.Persistence</a></li>
                </ul>
            </p>
        <h3>Enums</h3>
            <p id="Reference_ACTIVE_*">
                <h2><code>ACTIVE_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_ACTIVE_NEVER">ACTIVE_NEVER</a></li>
                    <li><a href="#Reference_enums_ACTIVE_ALWAYS">ACTIVE_ALWAYS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_NORMAL">ACTIVE_NORMAL</a></li>
                    <li><a href="#Reference_enums_ACTIVE_PAUSED">ACTIVE_PAUSED</a></li>
                    <li><a href="#Reference_enums_ACTIVE_BOUNDS">ACTIVE_BOUNDS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_XBOUNDS">ACTIVE_XBOUNDS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_YBOUNDS">ACTIVE_YBOUNDS</a></li>
                    <li><a href="#Reference_enums_ACTIVE_RBOUNDS">ACTIVE_RBOUNDS</a></li>
                </ul>
            </p>
            <p id="Reference_Axis_*">
                <h2><code>Axis_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Axis_LEFTX">Axis_LEFTX</a></li>
                    <li><a href="#Reference_enums_Axis_LEFTY">Axis_LEFTY</a></li>
                    <li><a href="#Reference_enums_Axis_RIGHTX">Axis_RIGHTX</a></li>
                    <li><a href="#Reference_enums_Axis_RIGHTY">Axis_RIGHTY</a></li>
                    <li><a href="#Reference_enums_Axis_TRIGGERLEFT">Axis_TRIGGERLEFT</a></li>
                    <li><a href="#Reference_enums_Axis_TRIGGERRIGHT">Axis_TRIGGERRIGHT</a></li>
                </ul>
            </p>
            <p id="Reference_BlendFactor_*">
                <h2><code>BlendFactor_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_BlendFactor_ZERO">BlendFactor_ZERO</a></li>
                    <li><a href="#Reference_enums_BlendFactor_ONE">BlendFactor_ONE</a></li>
                    <li><a href="#Reference_enums_BlendFactor_SRC_COLOR">BlendFactor_SRC_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_SRC_COLOR">BlendFactor_INV_SRC_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_SRC_ALPHA">BlendFactor_SRC_ALPHA</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_SRC_ALPHA">BlendFactor_INV_SRC_ALPHA</a></li>
                    <li><a href="#Reference_enums_BlendFactor_DST_COLOR">BlendFactor_DST_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_DST_COLOR">BlendFactor_INV_DST_COLOR</a></li>
                    <li><a href="#Reference_enums_BlendFactor_DST_ALPHA">BlendFactor_DST_ALPHA</a></li>
                    <li><a href="#Reference_enums_BlendFactor_INV_DST_ALPHA">BlendFactor_INV_DST_ALPHA</a></li>
                </ul>
            </p>
            <p id="Reference_BlendMode_*">
                <h2><code>BlendMode_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_BlendMode_NORMAL">BlendMode_NORMAL</a></li>
                    <li><a href="#Reference_enums_BlendMode_ADD">BlendMode_ADD</a></li>
                    <li><a href="#Reference_enums_BlendMode_SUBTRACT">BlendMode_SUBTRACT</a></li>
                    <li><a href="#Reference_enums_BlendMode_MAX">BlendMode_MAX</a></li>
                    <li><a href="#Reference_enums_BlendMode_MATCH_EQUAL">BlendMode_MATCH_EQUAL</a></li>
                    <li><a href="#Reference_enums_BlendMode_MATCH_NOT_EQUAL">BlendMode_MATCH_NOT_EQUAL</a></li>
                </ul>
            </p>
            <p id="Reference_Button_*">
                <h2><code>Button_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Button_A">Button_A</a></li>
                    <li><a href="#Reference_enums_Button_B">Button_B</a></li>
                    <li><a href="#Reference_enums_Button_X">Button_X</a></li>
                    <li><a href="#Reference_enums_Button_Y">Button_Y</a></li>
                    <li><a href="#Reference_enums_Button_BACK">Button_BACK</a></li>
                    <li><a href="#Reference_enums_Button_GUIDE">Button_GUIDE</a></li>
                    <li><a href="#Reference_enums_Button_START">Button_START</a></li>
                    <li><a href="#Reference_enums_Button_LEFTSTICK">Button_LEFTSTICK</a></li>
                    <li><a href="#Reference_enums_Button_RIGHTSTICK">Button_RIGHTSTICK</a></li>
                    <li><a href="#Reference_enums_Button_LEFTSHOULDER">Button_LEFTSHOULDER</a></li>
                    <li><a href="#Reference_enums_Button_RIGHTSHOULDER">Button_RIGHTSHOULDER</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_UP">Button_DPAD_UP</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_DOWN">Button_DPAD_DOWN</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_LEFT">Button_DPAD_LEFT</a></li>
                    <li><a href="#Reference_enums_Button_DPAD_RIGHT">Button_DPAD_RIGHT</a></li>
                    <li><a href="#Reference_enums_Button_SHARE">Button_SHARE</a></li>
                    <li><a href="#Reference_enums_Button_MICROPHONE">Button_MICROPHONE</a></li>
                    <li><a href="#Reference_enums_Button_TOUCHPAD">Button_TOUCHPAD</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE1">Button_PADDLE1</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE2">Button_PADDLE2</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE3">Button_PADDLE3</a></li>
                    <li><a href="#Reference_enums_Button_PADDLE4">Button_PADDLE4</a></li>
                    <li><a href="#Reference_enums_Button_MISC1">Button_MISC1</a></li>
                </ul>
            </p>
            <p id="Reference_CMODE_*">
                <h2><code>CMODE_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_CMODE_FLOOR">CMODE_FLOOR</a></li>
                    <li><a href="#Reference_enums_CMODE_LWALL">CMODE_LWALL</a></li>
                    <li><a href="#Reference_enums_CMODE_ROOF">CMODE_ROOF</a></li>
                    <li><a href="#Reference_enums_CMODE_RWALL">CMODE_RWALL</a></li>
                </ul>
            </p>
            <p id="Reference_C_*">
                <h2><code>C_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_C_NONE">C_NONE</a></li>
                    <li><a href="#Reference_enums_C_TOP">C_TOP</a></li>
                    <li><a href="#Reference_enums_C_LEFT">C_LEFT</a></li>
                    <li><a href="#Reference_enums_C_RIGHT">C_RIGHT</a></li>
                    <li><a href="#Reference_enums_C_BOTTOM">C_BOTTOM</a></li>
                </ul>
            </p>
            <p id="Reference_Controller_*">
                <h2><code>Controller_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Controller_Xbox360">Controller_Xbox360</a></li>
                    <li><a href="#Reference_enums_Controller_XboxOne">Controller_XboxOne</a></li>
                    <li><a href="#Reference_enums_Controller_XboxSeriesXS">Controller_XboxSeriesXS</a></li>
                    <li><a href="#Reference_enums_Controller_XboxElite">Controller_XboxElite</a></li>
                    <li><a href="#Reference_enums_Controller_PS3">Controller_PS3</a></li>
                    <li><a href="#Reference_enums_Controller_PS4">Controller_PS4</a></li>
                    <li><a href="#Reference_enums_Controller_PS5">Controller_PS5</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchJoyConPair">Controller_SwitchJoyConPair</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchJoyConLeft">Controller_SwitchJoyConLeft</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchJoyConRight">Controller_SwitchJoyConRight</a></li>
                    <li><a href="#Reference_enums_Controller_SwitchPro">Controller_SwitchPro</a></li>
                    <li><a href="#Reference_enums_Controller_Stadia">Controller_Stadia</a></li>
                    <li><a href="#Reference_enums_Controller_AmazonLuna">Controller_AmazonLuna</a></li>
                    <li><a href="#Reference_enums_Controller_NvidiaShield">Controller_NvidiaShield</a></li>
                    <li><a href="#Reference_enums_Controller_Unknown">Controller_Unknown</a></li>
                </ul>
            </p>
            <p id="Reference_DrawBehavior_*">
                <h2><code>DrawBehavior_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_DrawBehavior_HorizontalParallax">DrawBehavior_HorizontalParallax</a></li>
                    <li><a href="#Reference_enums_DrawBehavior_VerticalParallax">DrawBehavior_VerticalParallax</a></li>
                    <li><a href="#Reference_enums_DrawBehavior_CustomTileScanLines">DrawBehavior_CustomTileScanLines</a></li>
                </ul>
            </p>
            <p id="Reference_DrawMode_*">
                <h2><code>DrawMode_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></li>
                    <li><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></li>
                    <li><a href="#Reference_enums_DrawMode_POINTS">DrawMode_POINTS</a></li>
                    <li><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></li>
                    <li><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></li>
                    <li><a href="#Reference_enums_DrawMode_TEXTURED">DrawMode_TEXTURED</a></li>
                    <li><a href="#Reference_enums_DrawMode_AFFINE">DrawMode_AFFINE</a></li>
                    <li><a href="#Reference_enums_DrawMode_DEPTH_TEST">DrawMode_DEPTH_TEST</a></li>
                    <li><a href="#Reference_enums_DrawMode_FOG">DrawMode_FOG</a></li>
                    <li><a href="#Reference_enums_DrawMode_ORTHOGRAPHIC">DrawMode_ORTHOGRAPHIC</a></li>
                    <li><a href="#Reference_enums_DrawMode_LINES_FLAT">DrawMode_LINES_FLAT</a></li>
                    <li><a href="#Reference_enums_DrawMode_LINES_SMOOTH">DrawMode_LINES_SMOOTH</a></li>
                    <li><a href="#Reference_enums_DrawMode_POLYGONS_FLAT">DrawMode_POLYGONS_FLAT</a></li>
                    <li><a href="#Reference_enums_DrawMode_POLYGONS_SMOOTH">DrawMode_POLYGONS_SMOOTH</a></li>
                    <li><a href="#Reference_enums_DrawMode_PrimitiveMask">DrawMode_PrimitiveMask</a></li>
                    <li><a href="#Reference_enums_DrawMode_LightingMask">DrawMode_LightingMask</a></li>
                    <li><a href="#Reference_enums_DrawMode_FillTypeMask">DrawMode_FillTypeMask</a></li>
                    <li><a href="#Reference_enums_DrawMode_FlagsMask">DrawMode_FlagsMask</a></li>
                </ul>
            </p>
            <p id="Reference_FLIP_*">
                <h2><code>FLIP_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FLIP_NONE">FLIP_NONE</a></li>
                    <li><a href="#Reference_enums_FLIP_X">FLIP_X</a></li>
                    <li><a href="#Reference_enums_FLIP_Y">FLIP_Y</a></li>
                    <li><a href="#Reference_enums_FLIP_XY">FLIP_XY</a></li>
                </ul>
            </p>
            <p id="Reference_FaceCull_*">
                <h2><code>FaceCull_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FaceCull_None">FaceCull_None</a></li>
                    <li><a href="#Reference_enums_FaceCull_Back">FaceCull_Back</a></li>
                    <li><a href="#Reference_enums_FaceCull_Front">FaceCull_Front</a></li>
                </ul>
            </p>
            <p id="Reference_FileStream_*">
                <h2><code>FileStream_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FileStream_READ_ACCESS">FileStream_READ_ACCESS</a></li>
                    <li><a href="#Reference_enums_FileStream_WRITE_ACCESS">FileStream_WRITE_ACCESS</a></li>
                    <li><a href="#Reference_enums_FileStream_APPEND_ACCESS">FileStream_APPEND_ACCESS</a></li>
                </ul>
            </p>
            <p id="Reference_Filter_*">
                <h2><code>Filter_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Filter_NONE">Filter_NONE</a></li>
                    <li><a href="#Reference_enums_Filter_BLACK_AND_WHITE">Filter_BLACK_AND_WHITE</a></li>
                    <li><a href="#Reference_enums_Filter_INVERT">Filter_INVERT</a></li>
                </ul>
            </p>
            <p id="Reference_FogEquation_*">
                <h2><code>FogEquation_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_FogEquation_Linear">FogEquation_Linear</a></li>
                    <li><a href="#Reference_enums_FogEquation_Exp">FogEquation_Exp</a></li>
                </ul>
            </p>
            <p id="Reference_GeoBooleanOp_*">
                <h2><code>GeoBooleanOp_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_GeoBooleanOp_Intersection">GeoBooleanOp_Intersection</a></li>
                    <li><a href="#Reference_enums_GeoBooleanOp_Union">GeoBooleanOp_Union</a></li>
                    <li><a href="#Reference_enums_GeoBooleanOp_Difference">GeoBooleanOp_Difference</a></li>
                    <li><a href="#Reference_enums_GeoBooleanOp_ExclusiveOr">GeoBooleanOp_ExclusiveOr</a></li>
                </ul>
            </p>
            <p id="Reference_GeoFillRule_*">
                <h2><code>GeoFillRule_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_GeoFillRule_EvenOdd">GeoFillRule_EvenOdd</a></li>
                    <li><a href="#Reference_enums_GeoFillRule_NonZero">GeoFillRule_NonZero</a></li>
                    <li><a href="#Reference_enums_GeoFillRule_Positive">GeoFillRule_Positive</a></li>
                    <li><a href="#Reference_enums_GeoFillRule_Negative">GeoFillRule_Negative</a></li>
                </ul>
            </p>
            <p id="Reference_HitboxSide_*">
                <h2><code>HitboxSide_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_HitboxSide_LEFT">HitboxSide_LEFT</a></li>
                    <li><a href="#Reference_enums_HitboxSide_TOP">HitboxSide_TOP</a></li>
                    <li><a href="#Reference_enums_HitboxSide_RIGHT">HitboxSide_RIGHT</a></li>
                    <li><a href="#Reference_enums_HitboxSide_BOTTOM">HitboxSide_BOTTOM</a></li>
                </ul>
            </p>
            <p id="Reference_InputBind_*">
                <h2><code>InputBind_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_InputBind_Keyboard">InputBind_Keyboard</a></li>
                    <li><a href="#Reference_enums_InputBind_ControllerButton">InputBind_ControllerButton</a></li>
                    <li><a href="#Reference_enums_InputBind_ControllerAxis">InputBind_ControllerAxis</a></li>
                </ul>
            </p>
            <p id="Reference_InputDevice_*">
                <h2><code>InputDevice_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_InputDevice_Keyboard">InputDevice_Keyboard</a></li>
                    <li><a href="#Reference_enums_InputDevice_Controller">InputDevice_Controller</a></li>
                </ul>
            </p>
            <p id="Reference_KeyBind_*">
                <h2><code>KeyBind_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_KeyBind_Fullscreen">KeyBind_Fullscreen</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevRestartApp">KeyBind_DevRestartApp</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevRestartScene">KeyBind_DevRestartScene</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevRecompile">KeyBind_DevRecompile</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevPerfSnapshot">KeyBind_DevPerfSnapshot</a></li>
                    <li><a href="#Reference_enums_KeyBind_Fullscreen">KeyBind_Fullscreen</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevFastForward">KeyBind_DevFastForward</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevFrameStepper">KeyBind_DevFrameStepper</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevStepFrame">KeyBind_DevStepFrame</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevTileCol">KeyBind_DevTileCol</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevObjectRegions">KeyBind_DevObjectRegions</a></li>
                    <li><a href="#Reference_enums_KeyBind_DevQuit">KeyBind_DevQuit</a></li>
                </ul>
            </p>
            <p id="Reference_Key_*">
                <h2><code>Key_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Key_UNKNOWN">Key_UNKNOWN</a></li>
                    <li><a href="#Reference_enums_Key_A">Key_A</a></li>
                    <li><a href="#Reference_enums_Key_B">Key_B</a></li>
                    <li><a href="#Reference_enums_Key_C">Key_C</a></li>
                    <li><a href="#Reference_enums_Key_D">Key_D</a></li>
                    <li><a href="#Reference_enums_Key_E">Key_E</a></li>
                    <li><a href="#Reference_enums_Key_F">Key_F</a></li>
                    <li><a href="#Reference_enums_Key_G">Key_G</a></li>
                    <li><a href="#Reference_enums_Key_H">Key_H</a></li>
                    <li><a href="#Reference_enums_Key_I">Key_I</a></li>
                    <li><a href="#Reference_enums_Key_J">Key_J</a></li>
                    <li><a href="#Reference_enums_Key_K">Key_K</a></li>
                    <li><a href="#Reference_enums_Key_L">Key_L</a></li>
                    <li><a href="#Reference_enums_Key_M">Key_M</a></li>
                    <li><a href="#Reference_enums_Key_N">Key_N</a></li>
                    <li><a href="#Reference_enums_Key_O">Key_O</a></li>
                    <li><a href="#Reference_enums_Key_P">Key_P</a></li>
                    <li><a href="#Reference_enums_Key_Q">Key_Q</a></li>
                    <li><a href="#Reference_enums_Key_R">Key_R</a></li>
                    <li><a href="#Reference_enums_Key_S">Key_S</a></li>
                    <li><a href="#Reference_enums_Key_T">Key_T</a></li>
                    <li><a href="#Reference_enums_Key_U">Key_U</a></li>
                    <li><a href="#Reference_enums_Key_V">Key_V</a></li>
                    <li><a href="#Reference_enums_Key_W">Key_W</a></li>
                    <li><a href="#Reference_enums_Key_X">Key_X</a></li>
                    <li><a href="#Reference_enums_Key_Y">Key_Y</a></li>
                    <li><a href="#Reference_enums_Key_Z">Key_Z</a></li>
                    <li><a href="#Reference_enums_Key_1">Key_1</a></li>
                    <li><a href="#Reference_enums_Key_2">Key_2</a></li>
                    <li><a href="#Reference_enums_Key_3">Key_3</a></li>
                    <li><a href="#Reference_enums_Key_4">Key_4</a></li>
                    <li><a href="#Reference_enums_Key_5">Key_5</a></li>
                    <li><a href="#Reference_enums_Key_6">Key_6</a></li>
                    <li><a href="#Reference_enums_Key_7">Key_7</a></li>
                    <li><a href="#Reference_enums_Key_8">Key_8</a></li>
                    <li><a href="#Reference_enums_Key_9">Key_9</a></li>
                    <li><a href="#Reference_enums_Key_0">Key_0</a></li>
                    <li><a href="#Reference_enums_Key_RETURN">Key_RETURN</a></li>
                    <li><a href="#Reference_enums_Key_ESCAPE">Key_ESCAPE</a></li>
                    <li><a href="#Reference_enums_Key_BACKSPACE">Key_BACKSPACE</a></li>
                    <li><a href="#Reference_enums_Key_TAB">Key_TAB</a></li>
                    <li><a href="#Reference_enums_Key_SPACE">Key_SPACE</a></li>
                    <li><a href="#Reference_enums_Key_MINUS">Key_MINUS</a></li>
                    <li><a href="#Reference_enums_Key_EQUALS">Key_EQUALS</a></li>
                    <li><a href="#Reference_enums_Key_LEFTBRACKET">Key_LEFTBRACKET</a></li>
                    <li><a href="#Reference_enums_Key_RIGHTBRACKET">Key_RIGHTBRACKET</a></li>
                    <li><a href="#Reference_enums_Key_BACKSLASH">Key_BACKSLASH</a></li>
                    <li><a href="#Reference_enums_Key_SEMICOLON">Key_SEMICOLON</a></li>
                    <li><a href="#Reference_enums_Key_APOSTROPHE">Key_APOSTROPHE</a></li>
                    <li><a href="#Reference_enums_Key_GRAVE">Key_GRAVE</a></li>
                    <li><a href="#Reference_enums_Key_COMMA">Key_COMMA</a></li>
                    <li><a href="#Reference_enums_Key_PERIOD">Key_PERIOD</a></li>
                    <li><a href="#Reference_enums_Key_SLASH">Key_SLASH</a></li>
                    <li><a href="#Reference_enums_Key_CAPSLOCK">Key_CAPSLOCK</a></li>
                    <li><a href="#Reference_enums_Key_F1">Key_F1</a></li>
                    <li><a href="#Reference_enums_Key_F2">Key_F2</a></li>
                    <li><a href="#Reference_enums_Key_F3">Key_F3</a></li>
                    <li><a href="#Reference_enums_Key_F4">Key_F4</a></li>
                    <li><a href="#Reference_enums_Key_F5">Key_F5</a></li>
                    <li><a href="#Reference_enums_Key_F6">Key_F6</a></li>
                    <li><a href="#Reference_enums_Key_F7">Key_F7</a></li>
                    <li><a href="#Reference_enums_Key_F8">Key_F8</a></li>
                    <li><a href="#Reference_enums_Key_F9">Key_F9</a></li>
                    <li><a href="#Reference_enums_Key_F10">Key_F10</a></li>
                    <li><a href="#Reference_enums_Key_F11">Key_F11</a></li>
                    <li><a href="#Reference_enums_Key_F12">Key_F12</a></li>
                    <li><a href="#Reference_enums_Key_PRINTSCREEN">Key_PRINTSCREEN</a></li>
                    <li><a href="#Reference_enums_Key_SCROLLLOCK">Key_SCROLLLOCK</a></li>
                    <li><a href="#Reference_enums_Key_PAUSE">Key_PAUSE</a></li>
                    <li><a href="#Reference_enums_Key_INSERT">Key_INSERT</a></li>
                    <li><a href="#Reference_enums_Key_HOME">Key_HOME</a></li>
                    <li><a href="#Reference_enums_Key_PAGEUP">Key_PAGEUP</a></li>
                    <li><a href="#Reference_enums_Key_DELETE">Key_DELETE</a></li>
                    <li><a href="#Reference_enums_Key_END">Key_END</a></li>
                    <li><a href="#Reference_enums_Key_PAGEDOWN">Key_PAGEDOWN</a></li>
                    <li><a href="#Reference_enums_Key_RIGHT">Key_RIGHT</a></li>
                    <li><a href="#Reference_enums_Key_LEFT">Key_LEFT</a></li>
                    <li><a href="#Reference_enums_Key_DOWN">Key_DOWN</a></li>
                    <li><a href="#Reference_enums_Key_UP">Key_UP</a></li>
                    <li><a href="#Reference_enums_Key_NUMLOCKCLEAR">Key_NUMLOCKCLEAR</a></li>
                    <li><a href="#Reference_enums_Key_KP_DIVIDE">Key_KP_DIVIDE</a></li>
                    <li><a href="#Reference_enums_Key_KP_MULTIPLY">Key_KP_MULTIPLY</a></li>
                    <li><a href="#Reference_enums_Key_KP_MINUS">Key_KP_MINUS</a></li>
                    <li><a href="#Reference_enums_Key_KP_PLUS">Key_KP_PLUS</a></li>
                    <li><a href="#Reference_enums_Key_KP_ENTER">Key_KP_ENTER</a></li>
                    <li><a href="#Reference_enums_Key_KP_1">Key_KP_1</a></li>
                    <li><a href="#Reference_enums_Key_KP_2">Key_KP_2</a></li>
                    <li><a href="#Reference_enums_Key_KP_3">Key_KP_3</a></li>
                    <li><a href="#Reference_enums_Key_KP_4">Key_KP_4</a></li>
                    <li><a href="#Reference_enums_Key_KP_5">Key_KP_5</a></li>
                    <li><a href="#Reference_enums_Key_KP_6">Key_KP_6</a></li>
                    <li><a href="#Reference_enums_Key_KP_7">Key_KP_7</a></li>
                    <li><a href="#Reference_enums_Key_KP_8">Key_KP_8</a></li>
                    <li><a href="#Reference_enums_Key_KP_9">Key_KP_9</a></li>
                    <li><a href="#Reference_enums_Key_KP_0">Key_KP_0</a></li>
                    <li><a href="#Reference_enums_Key_KP_PERIOD">Key_KP_PERIOD</a></li>
                    <li><a href="#Reference_enums_Key_LCTRL">Key_LCTRL</a></li>
                    <li><a href="#Reference_enums_Key_LSHIFT">Key_LSHIFT</a></li>
                    <li><a href="#Reference_enums_Key_LALT">Key_LALT</a></li>
                    <li><a href="#Reference_enums_Key_LGUI">Key_LGUI</a></li>
                    <li><a href="#Reference_enums_Key_RCTRL">Key_RCTRL</a></li>
                    <li><a href="#Reference_enums_Key_RSHIFT">Key_RSHIFT</a></li>
                    <li><a href="#Reference_enums_Key_RALT">Key_RALT</a></li>
                    <li><a href="#Reference_enums_Key_RGUI">Key_RGUI</a></li>
                </ul>
            </p>
            <p id="Reference_Persistence_*">
                <h2><code>Persistence_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Persistence_NONE">Persistence_NONE</a></li>
                    <li><a href="#Reference_enums_Persistence_SCENE">Persistence_SCENE</a></li>
                    <li><a href="#Reference_enums_Persistence_GAME">Persistence_GAME</a></li>
                </ul>
            </p>
            <p id="Reference_Platform_*">
                <h2><code>Platform_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Platform_Windows">Platform_Windows</a></li>
                    <li><a href="#Reference_enums_Platform_MacOS">Platform_MacOS</a></li>
                    <li><a href="#Reference_enums_Platform_Linux">Platform_Linux</a></li>
                    <li><a href="#Reference_enums_Platform_Switch">Platform_Switch</a></li>
                    <li><a href="#Reference_enums_Platform_PlayStation">Platform_PlayStation</a></li>
                    <li><a href="#Reference_enums_Platform_Xbox">Platform_Xbox</a></li>
                    <li><a href="#Reference_enums_Platform_Android">Platform_Android</a></li>
                    <li><a href="#Reference_enums_Platform_iOS">Platform_iOS</a></li>
                    <li><a href="#Reference_enums_Platform_Unknown">Platform_Unknown</a></li>
                </ul>
            </p>
            <p id="Reference_SCOPE_*">
                <h2><code>SCOPE_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_SCOPE_SCENE">SCOPE_SCENE</a></li>
                    <li><a href="#Reference_enums_SCOPE_GAME">SCOPE_GAME</a></li>
                </ul>
            </p>
            <p id="Reference_SensorDirection_*">
                <h2><code>SensorDirection_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_SensorDirection_Down">SensorDirection_Down</a></li>
                    <li><a href="#Reference_enums_SensorDirection_Right">SensorDirection_Right</a></li>
                    <li><a href="#Reference_enums_SensorDirection_Up">SensorDirection_Up</a></li>
                    <li><a href="#Reference_enums_SensorDirection_Left">SensorDirection_Left</a></li>
                </ul>
            </p>
            <p id="Reference_StencilOp_*">
                <h2><code>StencilOp_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_StencilOp_Keep">StencilOp_Keep</a></li>
                    <li><a href="#Reference_enums_StencilOp_Zero">StencilOp_Zero</a></li>
                    <li><a href="#Reference_enums_StencilOp_Incr">StencilOp_Incr</a></li>
                    <li><a href="#Reference_enums_StencilOp_Decr">StencilOp_Decr</a></li>
                    <li><a href="#Reference_enums_StencilOp_Invert">StencilOp_Invert</a></li>
                    <li><a href="#Reference_enums_StencilOp_Replace">StencilOp_Replace</a></li>
                    <li><a href="#Reference_enums_StencilOp_IncrWrap">StencilOp_IncrWrap</a></li>
                    <li><a href="#Reference_enums_StencilOp_DecrWrap">StencilOp_DecrWrap</a></li>
                </ul>
            </p>
            <p id="Reference_StencilTest_*">
                <h2><code>StencilTest_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_StencilTest_Never">StencilTest_Never</a></li>
                    <li><a href="#Reference_enums_StencilTest_Always">StencilTest_Always</a></li>
                    <li><a href="#Reference_enums_StencilTest_Equal">StencilTest_Equal</a></li>
                    <li><a href="#Reference_enums_StencilTest_NotEqual">StencilTest_NotEqual</a></li>
                    <li><a href="#Reference_enums_StencilTest_Less">StencilTest_Less</a></li>
                    <li><a href="#Reference_enums_StencilTest_Greater">StencilTest_Greater</a></li>
                    <li><a href="#Reference_enums_StencilTest_LEqual">StencilTest_LEqual</a></li>
                    <li><a href="#Reference_enums_StencilTest_GEqual">StencilTest_GEqual</a></li>
                </ul>
            </p>
            <p id="Reference_TILECOLLISION_*">
                <h2><code>TILECOLLISION_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_TILECOLLISION_NONE">TILECOLLISION_NONE</a></li>
                    <li><a href="#Reference_enums_TILECOLLISION_DOWN">TILECOLLISION_DOWN</a></li>
                    <li><a href="#Reference_enums_TILECOLLISION_UP">TILECOLLISION_UP</a></li>
                </ul>
            </p>
            <p id="Reference_TimeOfDay_*">
                <h2><code>TimeOfDay_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_TimeOfDay_MORNING">TimeOfDay_MORNING</a></li>
                    <li><a href="#Reference_enums_TimeOfDay_MIDDAY">TimeOfDay_MIDDAY</a></li>
                    <li><a href="#Reference_enums_TimeOfDay_EVENING">TimeOfDay_EVENING</a></li>
                    <li><a href="#Reference_enums_TimeOfDay_NIGHT">TimeOfDay_NIGHT</a></li>
                </ul>
            </p>
            <p id="Reference_TintMode_*">
                <h2><code>TintMode_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_TintMode_SRC_NORMAL">TintMode_SRC_NORMAL</a></li>
                    <li><a href="#Reference_enums_TintMode_DST_NORMAL">TintMode_DST_NORMAL</a></li>
                    <li><a href="#Reference_enums_TintMode_SRC_BLEND">TintMode_SRC_BLEND</a></li>
                    <li><a href="#Reference_enums_TintMode_DST_BLEND">TintMode_DST_BLEND</a></li>
                </ul>
            </p>
            <p id="Reference_Weekday_*">
                <h2><code>Weekday_*</code></h2>
                <ul>
                    <li><a href="#Reference_enums_Weekday_SUNDAY">Weekday_SUNDAY</a></li>
                    <li><a href="#Reference_enums_Weekday_MONDAY">Weekday_MONDAY</a></li>
                    <li><a href="#Reference_enums_Weekday_TUESDAY">Weekday_TUESDAY</a></li>
                    <li><a href="#Reference_enums_Weekday_WEDNESDAY">Weekday_WEDNESDAY</a></li>
                    <li><a href="#Reference_enums_Weekday_THURSDAY">Weekday_THURSDAY</a></li>
                    <li><a href="#Reference_enums_Weekday_FRIDAY">Weekday_FRIDAY</a></li>
                    <li><a href="#Reference_enums_Weekday_SATURDAY">Weekday_SATURDAY</a></li>
                </ul>
            </p>
        <h3>Constants</h3>
        <h3>Globals</h3>
        <hr/>
        <h3>Class methods</h3>
        <p id="Reference_functions_Animator_Create">
        <h2 style="margin-bottom: 8px;">Animator.Create</h2>
        <code>Animator.Create()</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a new animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Animator.</div>
        </p>
        <p id="Reference_functions_Animator_Remove">
        <h2 style="margin-bottom: 8px;">Animator.Remove</h2>
        <code>Animator.Remove(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetAnimation">
        <h2 style="margin-bottom: 8px;">Animator.SetAnimation</h2>
        <code>Animator.SetAnimation(animator, sprite, animationID, frameID, forceApply)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current animation and frame of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        <li>sprite (Integer): The index of the sprite.</li>
        <li>animationID (Integer): The animator's changed animation ID.</li>
        <li>frameID (Integer): The animator's changed frame ID.</li>
        <li>forceApply (Boolean): Whether to force the animation to go back to the frame if the animation is the same as the current animation.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_Animate">
        <h2 style="margin-bottom: 8px;">Animator.Animate</h2>
        <code>Animator.Animate(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Animates an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_GetSprite">
        <h2 style="margin-bottom: 8px;">Animator.GetSprite</h2>
        <code>Animator.GetSprite(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the sprite index of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetCurrentAnimation">
        <h2 style="margin-bottom: 8px;">Animator.GetCurrentAnimation</h2>
        <code>Animator.GetCurrentAnimation(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current animation value of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetCurrentFrame">
        <h2 style="margin-bottom: 8px;">Animator.GetCurrentFrame</h2>
        <code>Animator.GetCurrentFrame(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current animation value of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetHitbox">
        <h2 style="margin-bottom: 8px;">Animator.GetHitbox</h2>
        <code>Animator.GetHitbox(animator, hitboxID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the hitbox of an animation and frame of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        <li>hitboxID (Integer): The index number of the hitbox.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a reference value to a hitbox array.</div>
        </p>
        <p id="Reference_functions_Animator_GetPreviousAnimation">
        <h2 style="margin-bottom: 8px;">Animator.GetPreviousAnimation</h2>
        <code>Animator.GetPreviousAnimation(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the previous animation value of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetAnimationSpeed">
        <h2 style="margin-bottom: 8px;">Animator.GetAnimationSpeed</h2>
        <code>Animator.GetAnimationSpeed(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the animation speed of an animator's current animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetAnimationTimer">
        <h2 style="margin-bottom: 8px;">Animator.GetAnimationTimer</h2>
        <code>Animator.GetAnimationTimer(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the animation timer of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetDuration">
        <h2 style="margin-bottom: 8px;">Animator.GetDuration</h2>
        <code>Animator.GetDuration(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame duration of an animator's current frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetFrameCount">
        <h2 style="margin-bottom: 8px;">Animator.GetFrameCount</h2>
        <code>Animator.GetFrameCount(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame count of an animator's current animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_GetLoopIndex">
        <h2 style="margin-bottom: 8px;">Animator.GetLoopIndex</h2>
        <code>Animator.GetLoopIndex(animator)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the loop index of an animator's current animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The index of the animator.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Animator_SetSprite">
        <h2 style="margin-bottom: 8px;">Animator.SetSprite</h2>
        <code>Animator.SetSprite(animator, animationID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sprite index of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationID (Integer): The animator's changed animation ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetCurrentAnimation">
        <h2 style="margin-bottom: 8px;">Animator.SetCurrentAnimation</h2>
        <code>Animator.SetCurrentAnimation(animator, animationID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current animation of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationID (Integer): The animator's changed animation ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetCurrentFrame">
        <h2 style="margin-bottom: 8px;">Animator.SetCurrentFrame</h2>
        <code>Animator.SetCurrentFrame(animator, frameID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current frame of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>frameID (Integer): The animator's changed frame ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetAnimationSpeed">
        <h2 style="margin-bottom: 8px;">Animator.SetAnimationSpeed</h2>
        <code>Animator.SetAnimationSpeed(animator, animationSpeed)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the animation speed of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationSpeed (Integer): The animator's changed animation speed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetAnimationTimer">
        <h2 style="margin-bottom: 8px;">Animator.SetAnimationTimer</h2>
        <code>Animator.SetAnimationTimer(animator, animationTimer)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the animation timer of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>animationTimer (Integer): The animator's changed animation timer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_SetDuration">
        <h2 style="margin-bottom: 8px;">Animator.SetDuration</h2>
        <code>Animator.SetDuration(animator, duration)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the frame duration of an animator.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>duration (Integer): The animator's changed duration.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustCurrentAnimation">
        <h2 style="margin-bottom: 8px;">Animator.AdjustCurrentAnimation</h2>
        <code>Animator.AdjustCurrentAnimation(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the current animation of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's animation ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustCurrentFrame">
        <h2 style="margin-bottom: 8px;">Animator.AdjustCurrentFrame</h2>
        <code>Animator.AdjustCurrentFrame(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the current frame of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's frame ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustAnimationSpeed">
        <h2 style="margin-bottom: 8px;">Animator.AdjustAnimationSpeed</h2>
        <code>Animator.AdjustAnimationSpeed(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the animation speed of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's animation speed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustAnimationTimer">
        <h2 style="margin-bottom: 8px;">Animator.AdjustAnimationTimer</h2>
        <code>Animator.AdjustAnimationTimer(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the animation timer of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's animation timer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Animator_AdjustDuration">
        <h2 style="margin-bottom: 8px;">Animator.AdjustDuration</h2>
        <code>Animator.AdjustDuration(animator, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adjusts the duration of an animator by an amount.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Integer): The animator index to change.</li>
        <li>amount (Integer): The amount to adjust the animator's duration.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_GetCommandLineArguments">
        <h2 style="margin-bottom: 8px;">Application.GetCommandLineArguments</h2>
        <code>Application.GetCommandLineArguments()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a list of the command line arguments passed to the application.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array of String values.</div>
        </p>
        <p id="Reference_functions_Application_GetEngineVersionString">
        <h2 style="margin-bottom: 8px;">Application.GetEngineVersionString</h2>
        <code>Application.GetEngineVersionString()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the engine version string.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Application_GetEngineVersionMajor">
        <h2 style="margin-bottom: 8px;">Application.GetEngineVersionMajor</h2>
        <code>Application.GetEngineVersionMajor()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the major engine version.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Application_GetEngineVersionMinor">
        <h2 style="margin-bottom: 8px;">Application.GetEngineVersionMinor</h2>
        <code>Application.GetEngineVersionMinor()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the minor engine version.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Application_GetEngineVersionPatch">
        <h2 style="margin-bottom: 8px;">Application.GetEngineVersionPatch</h2>
        <code>Application.GetEngineVersionPatch()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the minor engine version.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Application_GetEngineVersionPrerelease">
        <h2 style="margin-bottom: 8px;">Application.GetEngineVersionPrerelease</h2>
        <code>Application.GetEngineVersionPrerelease()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the prerelease engine version.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value, or <code>null</code>.</div>
        </p>
        <p id="Reference_functions_Application_GetEngineVersionCodename">
        <h2 style="margin-bottom: 8px;">Application.GetEngineVersionCodename</h2>
        <code>Application.GetEngineVersionCodename()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the engine version codename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value, or <code>null</code>.</div>
        </p>
        <p id="Reference_functions_Application_GetTargetFrameRate">
        <h2 style="margin-bottom: 8px;">Application.GetTargetFrameRate</h2>
        <code>Application.GetTargetFrameRate()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the target frame rate.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Application_SetTargetFrameRate">
        <h2 style="margin-bottom: 8px;">Application.SetTargetFrameRate</h2>
        <code>Application.SetTargetFrameRate(framerate)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the target frame rate.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>framerate (Integer): The target frame rate.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_GetFPS">
        <h2 style="margin-bottom: 8px;">Application.GetFPS</h2>
        <code>Application.GetFPS()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current FPS (frames per second).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Application_GetKeyBind">
        <h2 style="margin-bottom: 8px;">Application.GetKeyBind</h2>
        <code>Application.GetKeyBind(keyBind)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a <a href="#Reference_KeyBind_*">keybind</a>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyBind (Enum): The <a href="#Reference_KeyBind_*">keybind</a>.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the key ID of the keybind.</div>
        </p>
        <p id="Reference_functions_Application_SetKeyBind">
        <h2 style="margin-bottom: 8px;">Application.SetKeyBind</h2>
        <code>Application.SetKeyBind(keyBind, keyID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a <a href="#Reference_KeyBind_*">keybind</a>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyBind (Enum): The <a href="#Reference_KeyBind_*">keybind</a>.</li>
        <li>keyID (Integer): The key ID.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_Quit">
        <h2 style="margin-bottom: 8px;">Application.Quit</h2>
        <code>Application.Quit()</code>
        <div style="margin-top: 8px; font-size: 14px;">Closes the application.</div>
        </p>
        <p id="Reference_functions_Application_GetGameTitle">
        <h2 style="margin-bottom: 8px;">Application.GetGameTitle</h2>
        <code>Application.GetGameTitle()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the game title of the application.</div>
        </p>
        <p id="Reference_functions_Application_GetGameTitleShort">
        <h2 style="margin-bottom: 8px;">Application.GetGameTitleShort</h2>
        <code>Application.GetGameTitleShort()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the short game title of the application.</div>
        </p>
        <p id="Reference_functions_Application_GetGameVersion">
        <h2 style="margin-bottom: 8px;">Application.GetGameVersion</h2>
        <code>Application.GetGameVersion()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the version of the application.</div>
        </p>
        <p id="Reference_functions_Application_GetGameDescription">
        <h2 style="margin-bottom: 8px;">Application.GetGameDescription</h2>
        <code>Application.GetGameDescription()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the description of the game.</div>
        </p>
        <p id="Reference_functions_Application_SetGameTitle">
        <h2 style="margin-bottom: 8px;">Application.SetGameTitle</h2>
        <code>Application.SetGameTitle(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the title of the game.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Game title.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetGameTitleShort">
        <h2 style="margin-bottom: 8px;">Application.SetGameTitleShort</h2>
        <code>Application.SetGameTitleShort(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the short title of the game.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Short game title.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetGameVersion">
        <h2 style="margin-bottom: 8px;">Application.SetGameVersion</h2>
        <code>Application.SetGameVersion(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the version of the game.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Game version.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetGameDescription">
        <h2 style="margin-bottom: 8px;">Application.SetGameDescription</h2>
        <code>Application.SetGameDescription(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the description of the game.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Game description.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_SetCursorVisible">
        <h2 style="margin-bottom: 8px;">Application.SetCursorVisible</h2>
        <code>Application.SetCursorVisible(cursorVisible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the visibility of the cursor.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>cursorVisible (Boolean): Whether or not the cursor is visible.</li>
        </ul>
        </p>
        <p id="Reference_functions_Application_GetCursorVisible">
        <h2 style="margin-bottom: 8px;">Application.GetCursorVisible</h2>
        <code>Application.GetCursorVisible()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the visibility of the cursor.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether ot not the cursor is visible.</div>
        </p>
        <p id="Reference_functions_Array_Create">
        <h2 style="margin-bottom: 8px;">Array.Create</h2>
        <code>Array.Create(size[, initialValue])</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>size (Integer): Size of the array.</li>
        <li>initialValue (Value): Initial value to set the array elements to.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">A reference value to the array.</div>
        </p>
        <p id="Reference_functions_Array_Length">
        <h2 style="margin-bottom: 8px;">Array.Length</h2>
        <code>Array.Length(array)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the length of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to get the length of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Length of the array.</div>
        </p>
        <p id="Reference_functions_Array_Push">
        <h2 style="margin-bottom: 8px;">Array.Push</h2>
        <code>Array.Push(array, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds a value to the end of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to get the length of.</li>
        <li>value (Value): Value to add to the array.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Pop">
        <h2 style="margin-bottom: 8px;">Array.Pop</h2>
        <code>Array.Pop(array)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the value at the end of an array, and removes it.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to get the length of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The value from the end of the array.</div>
        </p>
        <p id="Reference_functions_Array_Insert">
        <h2 style="margin-bottom: 8px;">Array.Insert</h2>
        <code>Array.Insert(array, index, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Inserts a value at an index of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to insert value.</li>
        <li>index (Integer): Index to insert value.</li>
        <li>value (Value): Value to insert.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Erase">
        <h2 style="margin-bottom: 8px;">Array.Erase</h2>
        <code>Array.Erase(array, index)</code>
        <div style="margin-top: 8px; font-size: 14px;">Erases a value at an index of an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to erase value.</li>
        <li>index (Integer): Index to erase value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Clear">
        <h2 style="margin-bottom: 8px;">Array.Clear</h2>
        <code>Array.Clear(array)</code>
        <div style="margin-top: 8px; font-size: 14px;">Clears an array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to clear.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Shift">
        <h2 style="margin-bottom: 8px;">Array.Shift</h2>
        <code>Array.Shift(array, toRight)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rotates the array in the desired direction.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to shift.</li>
        <li>toRight (Boolean): Whether to rotate the array to the right or not (left.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_SetAll">
        <h2 style="margin-bottom: 8px;">Array.SetAll</h2>
        <code>Array.SetAll(array, startIndex, endIndex, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets values in the array from startIndex to endIndex (includes the value at endIndex.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to set values to.</li>
        <li>startIndex (Integer): Index of value to start setting. (<code>-1</code> for first index)</li>
        <li>endIndex (Integer): Index of value to end setting. (<code>-1</code> for last index)</li>
        <li>value (Value): Value to set to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Reverse">
        <h2 style="margin-bottom: 8px;">Array.Reverse</h2>
        <code>Array.Reverse(array[, startIndex, endIndex])</code>
        <div style="margin-top: 8px; font-size: 14px;">Reverses the elements of an array through the specified range, exclusive. The array is reversed from <code>startIndex</code> to, but not including, <code>endIndex</code>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to reverse.</li>
        <li>startIndex (Integer): Start range. Default is zero.</li>
        <li>endIndex (Integer): End range. Default is size of array.</li>
        </ul>
        </p>
        <p id="Reference_functions_Array_Sort">
        <h2 style="margin-bottom: 8px;">Array.Sort</h2>
        <code>Array.Sort(array[, compFunction])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sorts the entries of the given array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>array (Array): Array to sort.</li>
        <li>compFunction (Function): Comparison function. If not given, a default comparison function is used; the entries of the array are sorted in ascending order, and non-numeric values do not participate in the comparison.</li>
        </ul>
        </p>
        <p id="Reference_functions_Audio_GetMasterVolume">
        <h2 style="margin-bottom: 8px;">Audio.GetMasterVolume</h2>
        <code>Audio.GetMasterVolume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the master volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The master volume, from 0 to 100.</div>
        </p>
        <p id="Reference_functions_Audio_GetMusicVolume">
        <h2 style="margin-bottom: 8px;">Audio.GetMusicVolume</h2>
        <code>Audio.GetMusicVolume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the music volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The music volume, from 0 to 100.</div>
        </p>
        <p id="Reference_functions_Audio_GetSoundVolume">
        <h2 style="margin-bottom: 8px;">Audio.GetSoundVolume</h2>
        <code>Audio.GetSoundVolume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the sound effect volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The sound effect volume, from 0 to 100.</div>
        </p>
        <p id="Reference_functions_Audio_SetMasterVolume">
        <h2 style="margin-bottom: 8px;">Audio.SetMasterVolume</h2>
        <code>Audio.SetMasterVolume(volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the master volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>volume (Integer): The master volume, from 0 to 100.</li>
        </ul>
        </p>
        <p id="Reference_functions_Audio_SetMusicVolume">
        <h2 style="margin-bottom: 8px;">Audio.SetMusicVolume</h2>
        <code>Audio.SetMusicVolume(volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the music volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>volume (Integer): The music volume, from 0 to 100.</li>
        </ul>
        </p>
        <p id="Reference_functions_Audio_SetSoundVolume">
        <h2 style="margin-bottom: 8px;">Audio.SetSoundVolume</h2>
        <code>Audio.SetSoundVolume(volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sound effect volume of the audio mixer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>volume (Integer): The sound effect volume, from 0 to 100.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_GetCount">
        <h2 style="margin-bottom: 8px;">Controller.GetCount</h2>
        <code>Controller.GetCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of connected controllers in the device.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of connected controllers in the device.</div>
        </p>
        <p id="Reference_functions_Controller_IsConnected">
        <h2 style="margin-bottom: 8px;">Controller.IsConnected</h2>
        <code>Controller.IsConnected(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is connected.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is connected.</div>
        </p>
        <p id="Reference_functions_Controller_IsXbox">
        <h2 style="margin-bottom: 8px;">Controller.IsXbox</h2>
        <code>Controller.IsXbox(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is an Xbox controller.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is an Xbox controller.</div>
        </p>
        <p id="Reference_functions_Controller_IsPlayStation">
        <h2 style="margin-bottom: 8px;">Controller.IsPlayStation</h2>
        <code>Controller.IsPlayStation(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is a PlayStation controller.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is a PlayStation controller.</div>
        </p>
        <p id="Reference_functions_Controller_IsJoyCon">
        <h2 style="margin-bottom: 8px;">Controller.IsJoyCon</h2>
        <code>Controller.IsJoyCon(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index is a Nintendo Switch Joy-Con L or R.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index is a Nintendo Switch Joy-Con L or R.</div>
        </p>
        <p id="Reference_functions_Controller_HasShareButton">
        <h2 style="margin-bottom: 8px;">Controller.HasShareButton</h2>
        <code>Controller.HasShareButton(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index has a Share or Capture button.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index has a Share or Capture button.</div>
        </p>
        <p id="Reference_functions_Controller_HasMicrophoneButton">
        <h2 style="margin-bottom: 8px;">Controller.HasMicrophoneButton</h2>
        <code>Controller.HasMicrophoneButton(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index has a Microphone button.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index has a Microphone button.</div>
        </p>
        <p id="Reference_functions_Controller_HasPaddles">
        <h2 style="margin-bottom: 8px;">Controller.HasPaddles</h2>
        <code>Controller.HasPaddles(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the controller at the index has paddles.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the controller at the index has paddles.</div>
        </p>
        <p id="Reference_functions_Controller_IsButtonHeld">
        <h2 style="margin-bottom: 8px;">Controller.IsButtonHeld</h2>
        <code>Controller.IsButtonHeld(controllerIndex, button)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a <a href="#Reference_Button_*">button</a> is held.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>button (Enum): Which <a href="#Reference_Button_*">button</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Controller_IsButtonPressed">
        <h2 style="margin-bottom: 8px;">Controller.IsButtonPressed</h2>
        <code>Controller.IsButtonPressed(controllerIndex, button)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a <a href="#Reference_Button_*">button</a> is pressed.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>button (Enum): Which <a href="#Reference_Button_*">button</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Controller_GetButton">
        <h2 style="margin-bottom: 8px;">Controller.GetButton</h2>
        <code>Controller.GetButton(controllerIndex, button)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Button_*">button</a> value from the controller at the index. (Deprecated; use <code><a href="#Reference_functions_Controller_IsButtonHeld">Controller.IsButtonHeld</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>button (Enum): Which <a href="#Reference_Button_*">button</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the button value from the controller at the index.</div>
        </p>
        <p id="Reference_functions_Controller_GetAxis">
        <h2 style="margin-bottom: 8px;">Controller.GetAxis</h2>
        <code>Controller.GetAxis(controllerIndex, axis)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Axis_*">axis</a> value from the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        <li>axis (Enum): Which <a href="#Reference_Axis_*">axis</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the axis value from the controller at the index.</div>
        </p>
        <p id="Reference_functions_Controller_GetType">
        <h2 style="margin-bottom: 8px;">Controller.GetType</h2>
        <code>Controller.GetType(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Controller_*">type of the controller</a> at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the <a href="#Reference_Controller_*">type of the controller</a> at the index.</div>
        </p>
        <p id="Reference_functions_Controller_GetName">
        <h2 style="margin-bottom: 8px;">Controller.GetName</h2>
        <code>Controller.GetName(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the controller at the index.</div>
        </p>
        <p id="Reference_functions_Controller_SetPlayerIndex">
        <h2 style="margin-bottom: 8px;">Controller.SetPlayerIndex</h2>
        <code>Controller.SetPlayerIndex(controllerIndex, playerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the player index of the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        <li>playerIndex (Integer): The player index. Use <code>-1</code> to disable the controller's LEDs.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_HasRumble">
        <h2 style="margin-bottom: 8px;">Controller.HasRumble</h2>
        <code>Controller.HasRumble(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the controller at the index supports rumble.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the controller at the index supports rumble, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_functions_Controller_IsRumbleActive">
        <h2 style="margin-bottom: 8px;">Controller.IsRumbleActive</h2>
        <code>Controller.IsRumbleActive(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if rumble is active for the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if rumble is active for the controller at the index, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_functions_Controller_Rumble">
        <h2 style="margin-bottom: 8px;">Controller.Rumble</h2>
        <code>Controller.Rumble(controllerIndex, strength, duration)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rumbles a controller.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to rumble.</li>
        <li>strength (Number): Rumble strength. (0.0 - 1.0)</li>
        <li>duration (Integer): Duration in milliseconds. Use <code>0</code> for infinite duration.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_StopRumble">
        <h2 style="margin-bottom: 8px;">Controller.StopRumble</h2>
        <code>Controller.StopRumble(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops controller haptics.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to stop.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_IsRumblePaused">
        <h2 style="margin-bottom: 8px;">Controller.IsRumblePaused</h2>
        <code>Controller.IsRumblePaused(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if rumble is paused for the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if rumble is paused for the controller at the index, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_functions_Controller_SetRumblePaused">
        <h2 style="margin-bottom: 8px;">Controller.SetRumblePaused</h2>
        <code>Controller.SetRumblePaused(controllerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses or unpauses rumble for the controller at the index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_SetLargeMotorFrequency">
        <h2 style="margin-bottom: 8px;">Controller.SetLargeMotorFrequency</h2>
        <code>Controller.SetLargeMotorFrequency(controllerIndex, frequency)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the frequency of a controller's large motor. (Deprecated; use <code><a href="#Reference_functions_Controller_Rumble">Controller.Rumble</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        <li>frequency (Number): Frequency of the large motor.</li>
        </ul>
        </p>
        <p id="Reference_functions_Controller_SetSmallMotorFrequency">
        <h2 style="margin-bottom: 8px;">Controller.SetSmallMotorFrequency</h2>
        <code>Controller.SetSmallMotorFrequency(controllerIndex, frequency)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the frequency of a controller's small motor. (Deprecated; use <code><a href="#Reference_functions_Controller_Rumble">Controller.Rumble</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>controllerIndex (Integer): Index of the controller.</li>
        <li>frequency (Number): Frequency of the small motor.</li>
        </ul>
        </p>
        <p id="Reference_functions_Date_GetEpoch">
        <h2 style="margin-bottom: 8px;">Date.GetEpoch</h2>
        <code>Date.GetEpoch()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of seconds from 1 January 1970, 0:00 UTC.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The amount of seconds from epoch.</div>
        </p>
        <p id="Reference_functions_Date_GetWeekday">
        <h2 style="margin-bottom: 8px;">Date.GetWeekday</h2>
        <code>Date.GetWeekday()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current day of the week, starting from 1 January 1970, 0:00 UTC.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The day of the week (0-6 corresponding to Sunday-Saturday).</div>
        </p>
        <p id="Reference_functions_Date_GetSecond">
        <h2 style="margin-bottom: 8px;">Date.GetSecond</h2>
        <code>Date.GetSecond()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the second of the current minute.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The second of the minute (from 0 to 59).</div>
        </p>
        <p id="Reference_functions_Date_GetMinute">
        <h2 style="margin-bottom: 8px;">Date.GetMinute</h2>
        <code>Date.GetMinute()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the minute of the current hour.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The minute of the hour (from 0 to 59).</div>
        </p>
        <p id="Reference_functions_Date_GetHour">
        <h2 style="margin-bottom: 8px;">Date.GetHour</h2>
        <code>Date.GetHour()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the hour of the current day.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The hour of the day (from 0 to 23).</div>
        </p>
        <p id="Reference_functions_Date_GetTimeOfDay">
        <h2 style="margin-bottom: 8px;">Date.GetTimeOfDay</h2>
        <code>Date.GetTimeOfDay()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the the current time of the day (Morning, Midday, Evening, Night).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The time of day based on the current hour.</div>
        </p>
        <p id="Reference_functions_Date_GetTicks">
        <h2 style="margin-bottom: 8px;">Date.GetTicks</h2>
        <code>Date.GetTicks()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the milliseconds since the application began running.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns milliseconds since the application began running.</div>
        </p>
        <p id="Reference_functions_Device_GetPlatform">
        <h2 style="margin-bottom: 8px;">Device.GetPlatform</h2>
        <code>Device.GetPlatform()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the <a href="#Reference_Platform_*">platform</a> the application is currently running on.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the current <a href="#Reference_Platform_*">platform</a>.</div>
        </p>
        <p id="Reference_functions_Device_IsPC">
        <h2 style="margin-bottom: 8px;">Device.IsPC</h2>
        <code>Device.IsPC()</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether or not the application is running on a personal computer OS (Windows, MacOS, Linux).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the device is on a PC, 0 if otherwise.</div>
        </p>
        <p id="Reference_functions_Device_IsMobile">
        <h2 style="margin-bottom: 8px;">Device.IsMobile</h2>
        <code>Device.IsMobile()</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether or not the application is running on a mobile device.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the device is on a mobile device, 0 if otherwise.</div>
        </p>
        <p id="Reference_functions_Directory_Create">
        <h2 style="margin-bottom: 8px;">Directory.Create</h2>
        <code>Directory.Create(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a folder at the path.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the folder to create.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the folder creation was successful, 0 if otherwise</div>
        </p>
        <p id="Reference_functions_Directory_Exists">
        <h2 style="margin-bottom: 8px;">Directory.Exists</h2>
        <code>Directory.Exists(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines if the folder at the path exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the folder to check for existence.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the folder exists, 0 if otherwise</div>
        </p>
        <p id="Reference_functions_Directory_GetFiles">
        <h2 style="margin-bottom: 8px;">Directory.GetFiles</h2>
        <code>Directory.GetFiles(directory, pattern, allDirs)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the paths of all the files in the directory.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>directory (String): The path of the folder to find files in.</li>
        <li>pattern (String): The search pattern for the files. (ex: "*" for any file, "*.*" any file name with any file type, "*.png" any PNG file)</li>
        <li>allDirs (Boolean): Whether or not to search into all folders in the directory.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array containing the filepaths (as Strings.)</div>
        </p>
        <p id="Reference_functions_Directory_GetDirectories">
        <h2 style="margin-bottom: 8px;">Directory.GetDirectories</h2>
        <code>Directory.GetDirectories(directory, pattern, allDirs)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the paths of all the folders in the directory.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>directory (String): The path of the folder to find folders in.</li>
        <li>pattern (String): The search pattern for the folders. (ex: "*" for any folder, "image*" any folder that starts with "image")</li>
        <li>allDirs (Boolean): Whether or not to search into all folders in the directory.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array containing the filepaths (as Strings.)</div>
        </p>
        <p id="Reference_functions_Display_GetWidth">
        <h2 style="margin-bottom: 8px;">Display.GetWidth</h2>
        <code>Display.GetWidth([index])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the current display.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>index (Integer): The display index to get the width of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the width of the current display.</div>
        </p>
        <p id="Reference_functions_Display_GetHeight">
        <h2 style="margin-bottom: 8px;">Display.GetHeight</h2>
        <code>Display.GetHeight([index])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the current display.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>index (Integer): The display index to get the width of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the height of the current display.</div>
        </p>
        <p id="Reference_functions_Draw_Sprite">
        <h2 style="margin-bottom: 8px;">Draw.Sprite</h2>
        <code>Draw.Sprite(sprite, animation, frame, x, y, flipX, flipY[, scaleX, scaleY, rotation, useInteger, paletteID])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>rotation (Number): Rotation of the drawn sprite in radians, or in integer if <code>useInteger</code> is <code>true</code>.</li>
        <li>useInteger (Number): Whether or not the rotation argument is already in radians.</li>
        <li>paletteID (Integer): Which palette index to use.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SpriteBasic">
        <h2 style="margin-bottom: 8px;">Draw.SpriteBasic</h2>
        <code>Draw.SpriteBasic(instance[, sprite])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a sprite based on an entity's current values (Sprite, CurrentAnimation, CurrentFrame, X, Y, Direction, ScaleX, ScaleY, Rotation).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to draw.</li>
        <li>sprite (Integer): The sprite index to use if not using the entity's sprite index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Animator">
        <h2 style="margin-bottom: 8px;">Draw.Animator</h2>
        <code>Draw.Animator(animator, x, y, flipX, flipY[, scaleX, scaleY, rotation])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an animator based on its current values (Sprite, CurrentAnimation, CurrentFrame) and other provided values.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Animator): The animator to draw.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>flipX (Integer): Whether to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>rotation (Number): Rotation of the drawn sprite, from 0-511.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_AnimatorBasic">
        <h2 style="margin-bottom: 8px;">Draw.AnimatorBasic</h2>
        <code>Draw.AnimatorBasic(animator, instance[, sprite])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an animator based on its current values (Sprite, CurrentAnimation, CurrentFrame) and an entity's other values (X, Y, Direction, ScaleX, ScaleY, Rotation).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animator (Animator): The animator to draw.</li>
        <li>instance (Instance): The instance to pull other values from.</li>
        <li>sprite (Integer): The sprite index to use if not using the entity's sprite index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SpritePart">
        <h2 style="margin-bottom: 8px;">Draw.SpritePart</h2>
        <code>Draw.SpritePart(sprite, animation, frame, x, y, partX, partY, partW, partH, flipX, flipY[, scaleX, scaleY, rotation, useInteger, paletteID])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>partX (Integer): X coordinate of part of frame to draw.</li>
        <li>partY (Integer): Y coordinate of part of frame to draw.</li>
        <li>partW (Integer): Width of part of frame to draw.</li>
        <li>partH (Integer): Height of part of frame to draw.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>rotation (Number): Rotation of the drawn sprite in radians, or in integer if <code>useInteger</code> is <code>true</code>.</li>
        <li>useInteger (Number): Whether or not the rotation argument is already in radians.</li>
        <li>paletteID (Integer): Which palette index to use.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Image">
        <h2 style="margin-bottom: 8px;">Draw.Image</h2>
        <code>Draw.Image(image, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ImagePart">
        <h2 style="margin-bottom: 8px;">Draw.ImagePart</h2>
        <code>Draw.ImagePart(image, partX, partY, partW, partH, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>partX (Integer): X coordinate of part of image to draw.</li>
        <li>partY (Integer): Y coordinate of part of image to draw.</li>
        <li>partW (Integer): Width of part of image to draw.</li>
        <li>partH (Integer): Height of part of image to draw.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ImageSized">
        <h2 style="margin-bottom: 8px;">Draw.ImageSized</h2>
        <code>Draw.ImageSized(image, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an image, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>width (Number): Width to draw the image.</li>
        <li>height (Number): Height to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ImagePartSized">
        <h2 style="margin-bottom: 8px;">Draw.ImagePartSized</h2>
        <code>Draw.ImagePartSized(image, partX, partY, partW, partH, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of an image, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>partX (Integer): X coordinate of part of image to draw.</li>
        <li>partY (Integer): Y coordinate of part of image to draw.</li>
        <li>partW (Integer): Width of part of image to draw.</li>
        <li>partH (Integer): Height of part of image to draw.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>width (Number): Width to draw the image.</li>
        <li>height (Number): Height to draw the image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Layer">
        <h2 style="margin-bottom: 8px;">Draw.Layer</h2>
        <code>Draw.Layer(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_View">
        <h2 style="margin-bottom: 8px;">Draw.View</h2>
        <code>Draw.View(viewIndex, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ViewPart">
        <h2 style="margin-bottom: 8px;">Draw.ViewPart</h2>
        <code>Draw.ViewPart(viewIndex, x, y, partX, partY, partW, partH)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        <li>partX (Integer): X coordinate of part of view to draw.</li>
        <li>partY (Integer): Y coordinate of part of view to draw.</li>
        <li>partW (Integer): Width of part of view to draw.</li>
        <li>partH (Integer): Height of part of view to draw.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ViewSized">
        <h2 style="margin-bottom: 8px;">Draw.ViewSized</h2>
        <code>Draw.ViewSized(viewIndex, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a view, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        <li>width (Number): Width to draw the view.</li>
        <li>height (Number): Height to draw the view.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ViewPartSized">
        <h2 style="margin-bottom: 8px;">Draw.ViewPartSized</h2>
        <code>Draw.ViewPartSized(viewIndex, x, y, partX, partY, partW, partH, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a view, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): X position of where to draw the view.</li>
        <li>y (Number): Y position of where to draw the view.</li>
        <li>partX (Integer): X coordinate of part of view to draw.</li>
        <li>partY (Integer): Y coordinate of part of view to draw.</li>
        <li>partW (Integer): Width of part of view to draw.</li>
        <li>partH (Integer): Height of part of view to draw.</li>
        <li>width (Number): Width to draw the view.</li>
        <li>height (Number): Height to draw the view.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Video">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Video</h2>
        <code>Draw.Video()</code>
        </p>
        <p id="Reference_functions_Draw_VideoPart">
        <h2 style="margin-bottom: 8px; color: red;">Draw.VideoPart</h2>
        <code>Draw.VideoPart()</code>
        </p>
        <p id="Reference_functions_Draw_VideoSized">
        <h2 style="margin-bottom: 8px; color: red;">Draw.VideoSized</h2>
        <code>Draw.VideoSized()</code>
        </p>
        <p id="Reference_functions_Draw_VideoPartSized">
        <h2 style="margin-bottom: 8px; color: red;">Draw.VideoPartSized</h2>
        <code>Draw.VideoPartSized()</code>
        </p>
        <p id="Reference_functions_Draw_Tile">
        <h2 style="margin-bottom: 8px;">Draw.Tile</h2>
        <code>Draw.Tile(ID, x, y, flipX, flipY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ID (Integer): ID of the tile to draw.</li>
        <li>x (Number): X position of where to draw the tile.</li>
        <li>y (Number): Y position of where to draw the tile.</li>
        <li>flipX (Integer): Whether or not to flip the tile horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the tile vertically.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Texture">
        <h2 style="margin-bottom: 8px;">Draw.Texture</h2>
        <code>Draw.Texture(texture, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a texture.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        <li>x (Number): X position of where to draw the texture.</li>
        <li>y (Number): Y position of where to draw the texture.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TextureSized">
        <h2 style="margin-bottom: 8px;">Draw.TextureSized</h2>
        <code>Draw.TextureSized(texture, x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a texture, but sized.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        <li>x (Number): X position of where to draw the texture.</li>
        <li>y (Number): Y position of where to draw the texture.</li>
        <li>width (Number): Width to draw the texture.</li>
        <li>height (Number): Height to draw the texture.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TexturePart">
        <h2 style="margin-bottom: 8px;">Draw.TexturePart</h2>
        <code>Draw.TexturePart(texture, partX, partY, partW, partH, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a texture.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        <li>partX (Integer): X coordinate of part of texture to draw.</li>
        <li>partY (Integer): Y coordinate of part of texture to draw.</li>
        <li>partW (Integer): Width of part of texture to draw.</li>
        <li>partH (Integer): Height of part of texture to draw.</li>
        <li>x (Number): X position of where to draw the texture.</li>
        <li>y (Number): Y position of where to draw the texture.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetFont">
        <h2 style="margin-bottom: 8px; color: red;">Draw.SetFont</h2>
        <code>Draw.SetFont()</code>
        </p>
        <p id="Reference_functions_Draw_SetTextAlign">
        <h2 style="margin-bottom: 8px;">Draw.SetTextAlign</h2>
        <code>Draw.SetTextAlign(baseline)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the text drawing horizontal alignment. (default: left)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>baseline (Integer): 0 for left, 1 for center, 2 for right.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextBaseline">
        <h2 style="margin-bottom: 8px;">Draw.SetTextBaseline</h2>
        <code>Draw.SetTextBaseline(baseline)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the text drawing vertical alignment. (default: top)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>baseline (Integer): 0 for top, 1 for baseline, 2 for bottom.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextAdvance">
        <h2 style="margin-bottom: 8px;">Draw.SetTextAdvance</h2>
        <code>Draw.SetTextAdvance(ascent)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the character spacing multiplier. (default: 1.0)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ascent (Number): Multiplier for character spacing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextLineAscent">
        <h2 style="margin-bottom: 8px;">Draw.SetTextLineAscent</h2>
        <code>Draw.SetTextLineAscent(ascent)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the line height multiplier. (default: 1.25)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ascent (Number): Multiplier for line height.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_MeasureText">
        <h2 style="margin-bottom: 8px;">Draw.MeasureText</h2>
        <code>Draw.MeasureText(outArray, sprite, text)</code>
        <div style="margin-top: 8px; font-size: 14px;">Measures Extended UTF8 text using a sprite or font and stores max width and max height into the array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>outArray (Array): Array to output size values to.</li>
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to measure.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the array inputted into the function.</div>
        </p>
        <p id="Reference_functions_Draw_MeasureTextWrapped">
        <h2 style="margin-bottom: 8px;">Draw.MeasureTextWrapped</h2>
        <code>Draw.MeasureTextWrapped(outArray, sprite, text, maxWidth[, maxLines])</code>
        <div style="margin-top: 8px; font-size: 14px;">Measures wrapped Extended UTF8 text using a sprite or font and stores max width and max height into the array.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>outArray (Array): Array to output size values to.</li>
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to measure.</li>
        <li>maxWidth (Number): Max width that a line can be.</li>
        <li>maxLines (Integer): Max number of lines to measure.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the array inputted into the function.</div>
        </p>
        <p id="Reference_functions_Draw_Text">
        <h2 style="margin-bottom: 8px;">Draw.Text</h2>
        <code>Draw.Text(sprite, text, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws Extended UTF8 text using a sprite or font.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to draw.</li>
        <li>x (Number): X position of where to draw the text.</li>
        <li>y (Number): Y position of where to draw the text.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TextWrapped">
        <h2 style="margin-bottom: 8px;">Draw.TextWrapped</h2>
        <code>Draw.TextWrapped(sprite, text, x, y, maxWidth, maxLines)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws wrapped Extended UTF8 text using a sprite or font.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite to be used as text.</li>
        <li>text (String): Text to draw.</li>
        <li>x (Number): X position of where to draw the tile.</li>
        <li>y (Number): Y position of where to draw the tile.</li>
        <li>maxWidth (Number): Max width the text can draw in.</li>
        <li>maxLines (Integer): Max lines the text can draw.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TextEllipsis">
        <h2 style="margin-bottom: 8px; color: red;">Draw.TextEllipsis</h2>
        <code>Draw.TextEllipsis()</code>
        </p>
        <p id="Reference_functions_Draw_SetBlendColor">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendColor</h2>
        <code>Draw.SetBlendColor(hex, alpha)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the color to be used for drawing and blending.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>hex (Integer): Hexadecimal format of desired color. (ex: Red = 0xFF0000, Green = 0x00FF00, Blue = 0x0000FF)</li>
        <li>alpha (Number): Opacity to use for drawing, 0.0 to 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTextureBlend">
        <h2 style="margin-bottom: 8px;">Draw.SetTextureBlend</h2>
        <code>Draw.SetTextureBlend(doBlend)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use color and alpha blending on sprites, images, and textures.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>doBlend (Boolean): Whether or not to use blending.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetBlendMode">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendMode</h2>
        <code>Draw.SetBlendMode(blendMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_BlendMode_*">blend mode</a> used for drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>blendMode (Enum): The desired <a href="#Reference_BlendMode_*">blend mode</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetBlendFactor">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendFactor</h2>
        <code>Draw.SetBlendFactor(sourceFactor, destinationFactor)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_BlendFactor_*">blend factors</a> used for drawing. (Only for hardware-rendering)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sourceFactor (Enum): <a href="#Reference_BlendFactor_*">Source factor</a> for blending.</li>
        <li>destinationFactor (Enum): <a href="#Reference_BlendFactor_*">Destination factor</a> for blending.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetBlendFactorExtended">
        <h2 style="margin-bottom: 8px;">Draw.SetBlendFactorExtended</h2>
        <code>Draw.SetBlendFactorExtended(sourceColorFactor, destinationColorFactor, sourceAlphaFactor, destinationAlphaFactor)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets all the <a href="#Reference_BlendFactor_*">blend factors</a> used for drawing. (Only for hardware-rendering)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sourceColorFactor (Enum): <a href="#Reference_BlendFactor_*">Source factor</a> for blending color.</li>
        <li>destinationColorFactor (Enum): <a href="#Reference_BlendFactor_*">Destination factor</a> for blending color.</li>
        <li>sourceAlphaFactor (Enum): <a href="#Reference_BlendFactor_*">Source factor</a> for blending alpha.</li>
        <li>destinationAlphaFactor (Enum): <a href="#Reference_BlendFactor_*">Destination factor</a> for blending alpha.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetCompareColor">
        <h2 style="margin-bottom: 8px;">Draw.SetCompareColor</h2>
        <code>Draw.SetCompareColor(hex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the Comparison Color to draw over for Comparison Drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>hex (Integer): Hexadecimal format of desired color. (ex: Red = 0xFF0000, Green = 0x00FF00, Blue = 0x0000FF)</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTintColor">
        <h2 style="margin-bottom: 8px;">Draw.SetTintColor</h2>
        <code>Draw.SetTintColor(hex, amount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the color to be used for tinting.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>hex (Integer): Hexadecimal format of desired color. (ex: Red = 0xFF0000, Green = 0x00FF00, Blue = 0x0000FF)</li>
        <li>amount (Number): Tint amount, from 0.0 to 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetTintMode">
        <h2 style="margin-bottom: 8px;">Draw.SetTintMode</h2>
        <code>Draw.SetTintMode(tintMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_TintMode_*">tint mode</a> used for drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tintMode (Enum): The desired <a href="#Reference_TintMode_*">tint mode</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseTinting">
        <h2 style="margin-bottom: 8px;">Draw.UseTinting</h2>
        <code>Draw.UseTinting(useTinting)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use color tinting when drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>useTinting (Boolean): Whether or not to use color tinting when drawing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetFilter">
        <h2 style="margin-bottom: 8px;">Draw.SetFilter</h2>
        <code>Draw.SetFilter(filterType)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a <a href="#Reference_Filter_*">filter type</a>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filterType (Enum): The <a href="#Reference_Filter_*">filter type</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseStencil">
        <h2 style="margin-bottom: 8px;">Draw.UseStencil</h2>
        <code>Draw.UseStencil(enabled)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables stencil operations.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>enabled (Boolean): Whether to enable or disable stencil operations.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetStencilTestFunction">
        <h2 style="margin-bottom: 8px;">Draw.SetStencilTestFunction</h2>
        <code>Draw.SetStencilTestFunction(stencilTest)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a <a href="#Reference_StencilTest_*">stencil test</a> function.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stencilTest (Enum): One of the <a href="#Reference_StencilTest_*">stencil test</a> functions.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetStencilPassOperation">
        <h2 style="margin-bottom: 8px;">Draw.SetStencilPassOperation</h2>
        <code>Draw.SetStencilPassOperation(stencilOp)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a <a href="#Reference_StencilTest_*">stencil operation</a> for when the stencil test passes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stencilOp (Enum): One of the <a href="#Reference_StencilTest_*">stencil operations</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetStencilFailOperation">
        <h2 style="margin-bottom: 8px;">Draw.SetStencilFailOperation</h2>
        <code>Draw.SetStencilFailOperation(stencilOp)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a <a href="#Reference_StencilTest_*">stencil operation</a> for when the stencil test fails.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stencilOp (Enum): One of the <a href="#Reference_StencilTest_*">stencil operations</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetStencilValue">
        <h2 style="margin-bottom: 8px;">Draw.SetStencilValue</h2>
        <code>Draw.SetStencilValue(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the stencil value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Integer): The stencil value. This value is clamped by the stencil buffer's bit depth.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetStencilMask">
        <h2 style="margin-bottom: 8px;">Draw.SetStencilMask</h2>
        <code>Draw.SetStencilMask(mask)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the mask used for all stencil tests.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mask (Integer): The stencil mask. This value is clamped by the stencil buffer's bit depth.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ClearStencil">
        <h2 style="margin-bottom: 8px;">Draw.ClearStencil</h2>
        <code>Draw.ClearStencil()</code>
        <div style="margin-top: 8px; font-size: 14px;">Clears the stencil.</div>
        </p>
        <p id="Reference_functions_Draw_SetDotMask">
        <h2 style="margin-bottom: 8px;">Draw.SetDotMask</h2>
        <code>Draw.SetDotMask(mask)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the dot mask.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mask (Integer): The mask.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetHorizontalDotMask">
        <h2 style="margin-bottom: 8px;">Draw.SetHorizontalDotMask</h2>
        <code>Draw.SetHorizontalDotMask(mask)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the horizontal dot mask.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mask (Integer): The mask.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetVerticalDotMask">
        <h2 style="margin-bottom: 8px;">Draw.SetVerticalDotMask</h2>
        <code>Draw.SetVerticalDotMask(mask)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the vertical dot mask.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mask (Integer): The mask.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetHorizontalDotMaskOffset">
        <h2 style="margin-bottom: 8px;">Draw.SetHorizontalDotMaskOffset</h2>
        <code>Draw.SetHorizontalDotMaskOffset(offsetH)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the offset of the horizontal dot mask.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>offsetH (Integer): The offset.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetVerticalDotMaskOffset">
        <h2 style="margin-bottom: 8px;">Draw.SetVerticalDotMaskOffset</h2>
        <code>Draw.SetVerticalDotMaskOffset(offsetV)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the offset of the vertical dot mask.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>offsetV (Integer): The offset.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Line">
        <h2 style="margin-bottom: 8px;">Draw.Line</h2>
        <code>Draw.Line(x1, y1, x2, y2)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a line.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of where to start drawing the line.</li>
        <li>y1 (Number): Y position of where to start drawing the line.</li>
        <li>x2 (Number): X position of where to end drawing the line.</li>
        <li>y2 (Number): Y position of where to end drawing the line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Circle">
        <h2 style="margin-bottom: 8px;">Draw.Circle</h2>
        <code>Draw.Circle(x, y, radius)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a circle.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): Center X position of where to draw the circle.</li>
        <li>y (Number): Center Y position of where to draw the circle.</li>
        <li>radius (Number): Radius of the circle.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Ellipse">
        <h2 style="margin-bottom: 8px;">Draw.Ellipse</h2>
        <code>Draw.Ellipse(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an ellipse.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the ellipse.</li>
        <li>y (Number): Y position of where to draw the ellipse.</li>
        <li>width (Number): Width to draw the ellipse at.</li>
        <li>height (Number): Height to draw the ellipse at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Triangle">
        <h2 style="margin-bottom: 8px;">Draw.Triangle</h2>
        <code>Draw.Triangle(x1, y1, x2, y2, x3, y3)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TriangleBlend">
        <h2 style="margin-bottom: 8px;">Draw.TriangleBlend</h2>
        <code>Draw.TriangleBlend(x1, y1, x2, y2, x3, y3, color1, color2, color3)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle, blending the colors at the vertices. (Colors are multipled by the global Draw Blend Color, do <code><a href="#Reference_functions_Draw_SetBlendColor">Draw.SetBlendColor</a></code><code>(0xFFFFFF, 1.0)</code> if you want the vertex colors unaffected.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Quad">
        <h2 style="margin-bottom: 8px;">Draw.Quad</h2>
        <code>Draw.Quad(x1, y1, x2, y2, x3, y3, x4, y4)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a quad.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_QuadBlend">
        <h2 style="margin-bottom: 8px;">Draw.QuadBlend</h2>
        <code>Draw.QuadBlend(x1, y1, x2, y2, x3, y3, x4, y4, color1, color2, color3, color4)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a quad, blending the colors at the vertices. (Colors are multipled by the global Draw Blend Color, do <code><a href="#Reference_functions_Draw_SetBlendColor">Draw.SetBlendColor</a></code><code>(0xFFFFFF, 1.0)</code> if you want the vertex colors unaffected.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TriangleTextured">
        <h2 style="margin-bottom: 8px;">Draw.TriangleTextured</h2>
        <code>Draw.TriangleTextured(image, x1, y1, x2, y2, x3, y3[, color1, color2, color3, u1, v1, u2, v2, u3, v3])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured triangle.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Image to draw triangle with.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>u1 (Number): Texture U of the first vertex.</li>
        <li>v1 (Number): Texture V of the first vertex.</li>
        <li>u2 (Number): Texture U of the second vertex.</li>
        <li>v2 (Number): Texture V of the second vertex.</li>
        <li>u3 (Number): Texture U of the third vertex.</li>
        <li>v3 (Number): Texture V of the third vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_QuadTextured">
        <h2 style="margin-bottom: 8px;">Draw.QuadTextured</h2>
        <code>Draw.QuadTextured(image, x1, y1, x2, y2, x3, y3, x4, y4[, color1, color2, color3, color4, u1, v1, u2, v2, u3, v3, u4, v4])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured quad.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Image to draw quad with.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>u1 (Number): Texture U of the first vertex.</li>
        <li>v1 (Number): Texture V of the first vertex.</li>
        <li>u2 (Number): Texture U of the second vertex.</li>
        <li>v2 (Number): Texture V of the second vertex.</li>
        <li>u3 (Number): Texture U of the third vertex.</li>
        <li>v3 (Number): Texture V of the third vertex.</li>
        <li>u4 (Number): Texture U of the fourth vertex.</li>
        <li>v4 (Number): Texture V of the fourth vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Rectangle">
        <h2 style="margin-bottom: 8px;">Draw.Rectangle</h2>
        <code>Draw.Rectangle(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a rectangle.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the rectangle.</li>
        <li>y (Number): Y position of where to draw the rectangle.</li>
        <li>width (Number): Width to draw the rectangle at.</li>
        <li>height (Number): Height to draw the rectangle at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_CircleStroke">
        <h2 style="margin-bottom: 8px;">Draw.CircleStroke</h2>
        <code>Draw.CircleStroke(x, y, radius[, thickness])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a circle outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): Center X position of where to draw the circle.</li>
        <li>y (Number): Center Y position of where to draw the circle.</li>
        <li>radius (Number): Radius of the circle.</li>
        <li>thickness (Number): Thickness of the circle.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_EllipseStroke">
        <h2 style="margin-bottom: 8px;">Draw.EllipseStroke</h2>
        <code>Draw.EllipseStroke(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an ellipse outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the ellipse.</li>
        <li>y (Number): Y position of where to draw the ellipse.</li>
        <li>width (Number): Width to draw the ellipse at.</li>
        <li>height (Number): Height to draw the ellipse at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_TriangleStroke">
        <h2 style="margin-bottom: 8px;">Draw.TriangleStroke</h2>
        <code>Draw.TriangleStroke(x1, y1, x2, y2, x3, y3)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_RectangleStroke">
        <h2 style="margin-bottom: 8px;">Draw.RectangleStroke</h2>
        <code>Draw.RectangleStroke(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a rectangle outline.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to draw the rectangle.</li>
        <li>y (Number): Y position of where to draw the rectangle.</li>
        <li>width (Number): Width to draw the rectangle at.</li>
        <li>height (Number): Height to draw the rectangle at.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseFillSmoothing">
        <h2 style="margin-bottom: 8px;">Draw.UseFillSmoothing</h2>
        <code>Draw.UseFillSmoothing(smoothFill)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use smoothing when drawing filled shapes. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>smoothFill (Boolean): Whether or not to use smoothing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseStrokeSmoothing">
        <h2 style="margin-bottom: 8px;">Draw.UseStrokeSmoothing</h2>
        <code>Draw.UseStrokeSmoothing(smoothFill)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use smoothing when drawing un-filled shapes. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>smoothFill (Boolean): Whether or not to use smoothing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetClip">
        <h2 style="margin-bottom: 8px;">Draw.SetClip</h2>
        <code>Draw.SetClip(x, y, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the region in which drawing will occur.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position of where to start the draw region.</li>
        <li>y (Number): Y position of where to start the draw region.</li>
        <li>width (Number): Width of the draw region.</li>
        <li>height (Number): Height of the draw region.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_ClearClip">
        <h2 style="margin-bottom: 8px;">Draw.ClearClip</h2>
        <code>Draw.ClearClip()</code>
        <div style="margin-top: 8px; font-size: 14px;">Resets the drawing region.</div>
        </p>
        <p id="Reference_functions_Draw_Save">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Save</h2>
        <code>Draw.Save()</code>
        </p>
        <p id="Reference_functions_Draw_Scale">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Scale</h2>
        <code>Draw.Scale()</code>
        </p>
        <p id="Reference_functions_Draw_Rotate">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Rotate</h2>
        <code>Draw.Rotate()</code>
        </p>
        <p id="Reference_functions_Draw_Restore">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Restore</h2>
        <code>Draw.Restore()</code>
        </p>
        <p id="Reference_functions_Draw_Translate">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Translate</h2>
        <code>Draw.Translate()</code>
        </p>
        <p id="Reference_functions_Draw_SetTextureTarget">
        <h2 style="margin-bottom: 8px; color: red;">Draw.SetTextureTarget</h2>
        <code>Draw.SetTextureTarget()</code>
        </p>
        <p id="Reference_functions_Draw_Clear">
        <h2 style="margin-bottom: 8px; color: red;">Draw.Clear</h2>
        <code>Draw.Clear()</code>
        </p>
        <p id="Reference_functions_Draw_ResetTextureTarget">
        <h2 style="margin-bottom: 8px; color: red;">Draw.ResetTextureTarget</h2>
        <code>Draw.ResetTextureTarget()</code>
        </p>
        <p id="Reference_functions_Draw_UseSpriteDeform">
        <h2 style="margin-bottom: 8px;">Draw.UseSpriteDeform</h2>
        <code>Draw.UseSpriteDeform(useDeform)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use sprite deform when drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>useDeform (Boolean): Whether or not to use sprite deform when drawing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_SetSpriteDeformLine">
        <h2 style="margin-bottom: 8px;">Draw.SetSpriteDeformLine</h2>
        <code>Draw.SetSpriteDeformLine(deformIndex, deformValue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sprite deform line at the specified line index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>deformIndex (Integer): Index of deform line. (0 = top of screen, 1 = the line below it, 2 = etc.)</li>
        <li>deformValue (Decimal): Deform value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_UseDepthTesting">
        <h2 style="margin-bottom: 8px;">Draw.UseDepthTesting</h2>
        <code>Draw.UseDepthTesting(useDepthTesting)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to do depth tests when drawing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>useDepthTesting (Boolean): Whether or not to do depth tests when drawing.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_GetCurrentDrawGroup">
        <h2 style="margin-bottom: 8px;">Draw.GetCurrentDrawGroup</h2>
        <code>Draw.GetCurrentDrawGroup()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the draw group currently being drawn.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Draw_CopyScreen">
        <h2 style="margin-bottom: 8px;">Draw.CopyScreen</h2>
        <code>Draw.CopyScreen(texture)</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies the contents of the screen into a texture.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>texture (Integer): Texture index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_BindVertexBuffer">
        <h2 style="margin-bottom: 8px;">Draw3D.BindVertexBuffer</h2>
        <code>Draw3D.BindVertexBuffer(vertexBufferIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Binds a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): Sets the vertex buffer to bind.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_UnbindVertexBuffer">
        <h2 style="margin-bottom: 8px;">Draw3D.UnbindVertexBuffer</h2>
        <code>Draw3D.UnbindVertexBuffer()</code>
        <div style="margin-top: 8px; font-size: 14px;">Unbinds the currently bound vertex buffer.</div>
        </p>
        <p id="Reference_functions_Draw3D_BindScene">
        <h2 style="margin-bottom: 8px;">Draw3D.BindScene</h2>
        <code>Draw3D.BindScene(scene3DIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Binds a 3D scene for drawing polygons in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): Sets the 3D scene to bind.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_Model">
        <h2 style="margin-bottom: 8px;">Draw3D.Model</h2>
        <code>Draw3D.Model(modelIndex, animation, frame[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>modelIndex (Integer): Index of loaded model.</li>
        <li>animation (Integer): Animation of model to draw.</li>
        <li>frame (Decimal): Frame of model to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming model coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming model normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_ModelSkinned">
        <h2 style="margin-bottom: 8px;">Draw3D.ModelSkinned</h2>
        <code>Draw3D.ModelSkinned(modelIndex, skeleton[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a skinned model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>modelIndex (Integer): Index of loaded model.</li>
        <li>skeleton (Integer): Skeleton of model to skin the model.</li>
        <li>matrixModel (Matrix): Matrix for transforming model coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming model normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_ModelSimple">
        <h2 style="margin-bottom: 8px;">Draw3D.ModelSimple</h2>
        <code>Draw3D.ModelSimple(modelIndex, animation, frame, x, y, scale, rx, ry, rz)</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a model without using matrices.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>modelIndex (Integer): Index of loaded model.</li>
        <li>animation (Integer): Animation of model to draw.</li>
        <li>frame (Integer): Frame of model to draw.</li>
        <li>x (Number): X position</li>
        <li>y (Number): Y position</li>
        <li>scale (Number): Model scale</li>
        <li>rx (Number): X rotation in radians</li>
        <li>ry (Number): Y rotation in radians</li>
        <li>rz (Number): Z rotation in radians</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw_Triangle3D">
        <h2 style="margin-bottom: 8px;">Draw.Triangle3D</h2>
        <code>Draw.Triangle3D(x1, y1, z1, x2, y2, z2, x3, y3, z3[, color1, color2, color3, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a triangle in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_Quad">
        <h2 style="margin-bottom: 8px;">Draw3D.Quad</h2>
        <code>Draw3D.Quad(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a quadrilateral in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_Sprite">
        <h2 style="margin-bottom: 8px;">Draw3D.Sprite</h2>
        <code>Draw3D.Sprite(sprite, animation, frame, x, y, z, flipX, flipY[, scaleX, scaleY, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a sprite in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>z (Number): Z position of where to draw the sprite.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_SpritePart">
        <h2 style="margin-bottom: 8px;">Draw3D.SpritePart</h2>
        <code>Draw3D.SpritePart(sprite, animation, frame, x, y, z, partX, partY, partW, partH, flipX, flipY[, scaleX, scaleY, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a sprite in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>x (Number): X position of where to draw the sprite.</li>
        <li>y (Number): Y position of where to draw the sprite.</li>
        <li>z (Number): Z position of where to draw the sprite.</li>
        <li>partX (Integer): X coordinate of part of frame to draw.</li>
        <li>partY (Integer): Y coordinate of part of frame to draw.</li>
        <li>partW (Integer): Width of part of frame to draw.</li>
        <li>partH (Integer): Height of part of frame to draw.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>scaleX (Number): Scale multiplier of the sprite horizontally.</li>
        <li>scaleY (Number): Scale multiplier of the sprite vertically.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_Image">
        <h2 style="margin-bottom: 8px;">Draw3D.Image</h2>
        <code>Draw3D.Image(image, x, y, z[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws an image in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>z (Number): Z position of where to draw the image.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_ImagePart">
        <h2 style="margin-bottom: 8px;">Draw3D.ImagePart</h2>
        <code>Draw3D.ImagePart(image, x, y, z, partX, partY, partW, partH[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of an image in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x (Number): X position of where to draw the image.</li>
        <li>y (Number): Y position of where to draw the image.</li>
        <li>z (Number): Z position of where to draw the image.</li>
        <li>partX (Integer): X coordinate of part of image to draw.</li>
        <li>partY (Integer): Y coordinate of part of image to draw.</li>
        <li>partW (Integer): Width of part of image to draw.</li>
        <li>partH (Integer): Height of part of image to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_Tile">
        <h2 style="margin-bottom: 8px;">Draw3D.Tile</h2>
        <code>Draw3D.Tile(ID, x, y, z, flipX, flipY[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a tile in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ID (Integer): ID of the tile to draw.</li>
        <li>x (Number): X position of where to draw the tile.</li>
        <li>y (Number): Y position of where to draw the tile.</li>
        <li>z (Number): Z position of where to draw the tile.</li>
        <li>flipX (Integer): Whether or not to flip the tile horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the tile vertically.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_TriangleTextured">
        <h2 style="margin-bottom: 8px;">Draw3D.TriangleTextured</h2>
        <code>Draw3D.TriangleTextured(image, x1, y1, z1, x2, y2, z2, x3, y3, z3[, color1, color2, color3, u1, v1, u2, v2, u3, v3, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured triangle in 3D space. The texture source should be an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>u1 (Number): Texture U of the first vertex.</li>
        <li>v1 (Number): Texture V of the first vertex.</li>
        <li>u2 (Number): Texture U of the second vertex.</li>
        <li>v2 (Number): Texture V of the second vertex.</li>
        <li>u3 (Number): Texture U of the third vertex.</li>
        <li>v3 (Number): Texture V of the third vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_QuadTextured">
        <h2 style="margin-bottom: 8px;">Draw3D.QuadTextured</h2>
        <code>Draw3D.QuadTextured(image, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, u1, v1, u2, v2, u3, v3, u4, v4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured quad in 3D space. The texture source should be an image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): Index of the loaded image.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>u1 (Number): Texture U of the first vertex.</li>
        <li>v1 (Number): Texture V of the first vertex.</li>
        <li>u2 (Number): Texture U of the second vertex.</li>
        <li>v2 (Number): Texture V of the second vertex.</li>
        <li>u3 (Number): Texture U of the third vertex.</li>
        <li>v3 (Number): Texture V of the third vertex.</li>
        <li>u4 (Number): Texture U of the fourth vertex.</li>
        <li>v4 (Number): Texture V of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_SpritePoints">
        <h2 style="margin-bottom: 8px;">Draw3D.SpritePoints</h2>
        <code>Draw3D.SpritePoints(sprite, animation, frame, flipX, flipY, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured rectangle in 3D space. The texture source should be a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): Index of the loaded sprite.</li>
        <li>animation (Integer): Index of the animation entry.</li>
        <li>frame (Integer): Index of the frame in the animation entry.</li>
        <li>flipX (Integer): Whether or not to flip the sprite horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the sprite vertically.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_TilePoints">
        <h2 style="margin-bottom: 8px;">Draw3D.TilePoints</h2>
        <code>Draw3D.TilePoints(ID, flipX, flipY, x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4[, color1, color2, color3, color4, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a textured rectangle in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>ID (Integer): ID of the tile to draw.</li>
        <li>flipX (Integer): Whether or not to flip the tile horizontally.</li>
        <li>flipY (Integer): Whether or not to flip the tile vertically.</li>
        <li>x1 (Number): X position of the first vertex.</li>
        <li>y1 (Number): Y position of the first vertex.</li>
        <li>z1 (Number): Z position of the first vertex.</li>
        <li>x2 (Number): X position of the second vertex.</li>
        <li>y2 (Number): Y position of the second vertex.</li>
        <li>z2 (Number): Z position of the second vertex.</li>
        <li>x3 (Number): X position of the third vertex.</li>
        <li>y3 (Number): Y position of the third vertex.</li>
        <li>z3 (Number): Z position of the third vertex.</li>
        <li>x4 (Number): X position of the fourth vertex.</li>
        <li>y4 (Number): Y position of the fourth vertex.</li>
        <li>z4 (Number): Z position of the fourth vertex.</li>
        <li>color1 (Integer): Color of the first vertex.</li>
        <li>color2 (Integer): Color of the second vertex.</li>
        <li>color3 (Integer): Color of the third vertex.</li>
        <li>color4 (Integer): Color of the fourth vertex.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_SceneLayer">
        <h2 style="margin-bottom: 8px;">Draw3D.SceneLayer</h2>
        <code>Draw3D.SceneLayer(layer[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a scene layer in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_SceneLayerPart">
        <h2 style="margin-bottom: 8px;">Draw3D.SceneLayerPart</h2>
        <code>Draw3D.SceneLayerPart(layer, partX, partY, partW, partH[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws part of a scene layer in 3D space.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer.</li>
        <li>partX (Integer): X coordinate (in tiles) of part of layer to draw.</li>
        <li>partY (Integer): Y coordinate (in tiles) of part of layer to draw.</li>
        <li>partW (Integer): Width (in tiles) of part of layer to draw.</li>
        <li>partH (Integer): Height (in tiles) of part of layer to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_VertexBuffer">
        <h2 style="margin-bottom: 8px;">Draw3D.VertexBuffer</h2>
        <code>Draw3D.VertexBuffer(vertexBufferIndex[, matrixModel, matrixNormal])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to draw.</li>
        <li>matrixModel (Matrix): Matrix for transforming coordinates to world space.</li>
        <li>matrixNormal (Matrix): Matrix for transforming normals.</li>
        </ul>
        </p>
        <p id="Reference_functions_Draw3D_RenderScene">
        <h2 style="margin-bottom: 8px;">Draw3D.RenderScene</h2>
        <code>Draw3D.RenderScene(scene3DIndex[, drawMode])</code>
        <div style="margin-top: 8px; font-size: 14px;">Draws everything in the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The 3D scene at the index to draw.</li>
        <li>drawMode (Integer): The type of drawing to use for the vertices in the 3D scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_Ease_InSine">
        <h2 style="margin-bottom: 8px;">Ease.InSine</h2>
        <code>Ease.InSine(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InSine" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutSine">
        <h2 style="margin-bottom: 8px;">Ease.OutSine</h2>
        <code>Ease.OutSine(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutSine" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutSine">
        <h2 style="margin-bottom: 8px;">Ease.InOutSine</h2>
        <code>Ease.InOutSine(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutSine" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InQuad">
        <h2 style="margin-bottom: 8px;">Ease.InQuad</h2>
        <code>Ease.InQuad(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InQuad" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutQuad">
        <h2 style="margin-bottom: 8px;">Ease.OutQuad</h2>
        <code>Ease.OutQuad(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutQuad" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutQuad">
        <h2 style="margin-bottom: 8px;">Ease.InOutQuad</h2>
        <code>Ease.InOutQuad(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutQuad" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InCubic">
        <h2 style="margin-bottom: 8px;">Ease.InCubic</h2>
        <code>Ease.InCubic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InCubic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutCubic">
        <h2 style="margin-bottom: 8px;">Ease.OutCubic</h2>
        <code>Ease.OutCubic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutCubic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutCubic">
        <h2 style="margin-bottom: 8px;">Ease.InOutCubic</h2>
        <code>Ease.InOutCubic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutCubic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InQuart">
        <h2 style="margin-bottom: 8px;">Ease.InQuart</h2>
        <code>Ease.InQuart(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InQuart" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutQuart">
        <h2 style="margin-bottom: 8px;">Ease.OutQuart</h2>
        <code>Ease.OutQuart(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutQuart" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutQuart">
        <h2 style="margin-bottom: 8px;">Ease.InOutQuart</h2>
        <code>Ease.InOutQuart(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutQuart" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InQuint">
        <h2 style="margin-bottom: 8px;">Ease.InQuint</h2>
        <code>Ease.InQuint(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InQuint" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutQuint">
        <h2 style="margin-bottom: 8px;">Ease.OutQuint</h2>
        <code>Ease.OutQuint(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutQuint" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutQuint">
        <h2 style="margin-bottom: 8px;">Ease.InOutQuint</h2>
        <code>Ease.InOutQuint(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutQuint" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InExpo">
        <h2 style="margin-bottom: 8px;">Ease.InExpo</h2>
        <code>Ease.InExpo(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InExpo" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutExpo">
        <h2 style="margin-bottom: 8px;">Ease.OutExpo</h2>
        <code>Ease.OutExpo(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutExpo" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutExpo">
        <h2 style="margin-bottom: 8px;">Ease.InOutExpo</h2>
        <code>Ease.InOutExpo(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutExpo" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InCirc">
        <h2 style="margin-bottom: 8px;">Ease.InCirc</h2>
        <code>Ease.InCirc(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InCirc" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutCirc">
        <h2 style="margin-bottom: 8px;">Ease.OutCirc</h2>
        <code>Ease.OutCirc(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutCirc" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutCirc">
        <h2 style="margin-bottom: 8px;">Ease.InOutCirc</h2>
        <code>Ease.InOutCirc(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutCirc" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InBack">
        <h2 style="margin-bottom: 8px;">Ease.InBack</h2>
        <code>Ease.InBack(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InBack" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutBack">
        <h2 style="margin-bottom: 8px;">Ease.OutBack</h2>
        <code>Ease.OutBack(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutBack" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutBack">
        <h2 style="margin-bottom: 8px;">Ease.InOutBack</h2>
        <code>Ease.InOutBack(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutBack" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InElastic">
        <h2 style="margin-bottom: 8px;">Ease.InElastic</h2>
        <code>Ease.InElastic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InElastic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutElastic">
        <h2 style="margin-bottom: 8px;">Ease.OutElastic</h2>
        <code>Ease.OutElastic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutElastic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutElastic">
        <h2 style="margin-bottom: 8px;">Ease.InOutElastic</h2>
        <code>Ease.InOutElastic(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutElastic" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InBounce">
        <h2 style="margin-bottom: 8px;">Ease.InBounce</h2>
        <code>Ease.InBounce(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InBounce" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_OutBounce">
        <h2 style="margin-bottom: 8px;">Ease.OutBounce</h2>
        <code>Ease.OutBounce(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "OutBounce" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_InOutBounce">
        <h2 style="margin-bottom: 8px;">Ease.InOutBounce</h2>
        <code>Ease.InOutBounce(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "InOutBounce" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_Ease_Triangle">
        <h2 style="margin-bottom: 8px;">Ease.Triangle</h2>
        <code>Ease.Triangle(value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Eases the value using the "Triangle" formula.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>value (Number): Percent value. (0.0 - 1.0)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Eased Number value between 0.0 and 1.0.</div>
        </p>
        <p id="Reference_functions_File_Exists">
        <h2 style="margin-bottom: 8px;">File.Exists</h2>
        <code>File.Exists(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines if the file at the path exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the file to check for existence.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 1 if the file exists, 0 if otherwise</div>
        </p>
        <p id="Reference_functions_File_ReadAllText">
        <h2 style="margin-bottom: 8px;">File.ReadAllText</h2>
        <code>File.ReadAllText(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads all text from the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the file to read.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns all the text in the file as a String value if it can be read, otherwise it returns a <code>null</code> value if it cannot be read.</div>
        </p>
        <p id="Reference_functions_File_WriteAllText">
        <h2 style="margin-bottom: 8px;">File.WriteAllText</h2>
        <code>File.WriteAllText(path, text)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes all text to the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the file to read.</li>
        <li>text (String): The text to write to the file.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if successful, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Geometry_Triangulate">
        <h2 style="margin-bottom: 8px;">Geometry.Triangulate</h2>
        <code>Geometry.Triangulate(polygon[, holes])</code>
        <div style="margin-top: 8px; font-size: 14px;">Triangulates a 2D polygon.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>polygon (Array): Array of vertices that compromise the polygon to triangulate.</li>
        <li>holes (Array): Array of polygons that compromise the holes to be made in the resulting shape.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array containing a list of triangles, or <code>null</code> if the polygon could not be triangulated.</div>
        </p>
        <p id="Reference_functions_Geometry_Intersect">
        <h2 style="margin-bottom: 8px;">Geometry.Intersect</h2>
        <code>Geometry.Intersect(subjects, clips[, booleanOp, fillRule])</code>
        <div style="margin-top: 8px; font-size: 14px;">Intersects a 2D polygon.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>subjects (Array): Array of subject polygons.</li>
        <li>clips (Array): Array of clip polygons.</li>
        <li>booleanOp (Enum): The <a href="#Reference_GeoBooleanOp_*">boolean operation</a>. Default is <code><a href="#Reference_enums_GeoBooleanOp_Intersection">GeoBooleanOp_Intersection</a></code>.</li>
        <li>fillRule (Enum): The <a href="#Reference_GeoFillRule_*">fill rule</a>. Default is <code><a href="#Reference_enums_GeoFillRule_EvenOdd">GeoFillRule_EvenOdd</a></code>.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array containing a list of intersected polygons, or <code>null</code> if the polygon could not be intersected.</div>
        </p>
        <p id="Reference_functions_Geometry_IsPointInsidePolygon">
        <h2 style="margin-bottom: 8px;">Geometry.IsPointInsidePolygon</h2>
        <code>Geometry.IsPointInsidePolygon(polygon, pointX, pointY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a point is inside a polygon.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>polygon (Array): The polygon.</li>
        <li>pointX (Decimal): The X of the point.</li>
        <li>pointY (Decimal): The Y of the point.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the point is inside, or <code>false</code> if the point is outside.</div>
        </p>
        <p id="Reference_functions_Geometry_IsLineIntersectingPolygon">
        <h2 style="margin-bottom: 8px;">Geometry.IsLineIntersectingPolygon</h2>
        <code>Geometry.IsLineIntersectingPolygon(polygon, x1, y1, x2, y2)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a line segment is intersecting a polygon.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>polygon (Array): The polygon to check.</li>
        <li>x1 (Decimal): The starting X of the segment.</li>
        <li>y1 (Decimal): The starting Y of the segment.</li>
        <li>x2 (Decimal): The ending X of the segment.</li>
        <li>y2 (Decimal): The ending Y of the segment.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the line segment is intersecting the polygon, or <code>false</code> if it is not.</div>
        </p>
        <p id="Reference_functions_HTTP_GetString">
        <h2 style="margin-bottom: 8px; color: red;">HTTP.GetString</h2>
        <code>HTTP.GetString()</code>
        </p>
        <p id="Reference_functions_HTTP_GetToFile">
        <h2 style="margin-bottom: 8px; color: red;">HTTP.GetToFile</h2>
        <code>HTTP.GetToFile()</code>
        </p>
        <p id="Reference_functions_Image_GetWidth">
        <h2 style="margin-bottom: 8px;">Image.GetWidth</h2>
        <code>Image.GetWidth(image)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the specified image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): The image index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Image_GetHeight">
        <h2 style="margin-bottom: 8px;">Image.GetHeight</h2>
        <code>Image.GetHeight(image)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the specified image.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>image (Integer): The image index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Input_GetMouseX">
        <h2 style="margin-bottom: 8px;">Input.GetMouseX</h2>
        <code>Input.GetMouseX()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets cursor's X position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns cursor's X position in relation to the window.</div>
        </p>
        <p id="Reference_functions_Input_GetMouseY">
        <h2 style="margin-bottom: 8px;">Input.GetMouseY</h2>
        <code>Input.GetMouseY()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets cursor's Y position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns cursor's Y position in relation to the window.</div>
        </p>
        <p id="Reference_functions_Input_IsMouseButtonDown">
        <h2 style="margin-bottom: 8px;">Input.IsMouseButtonDown</h2>
        <code>Input.IsMouseButtonDown(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the mouse button is currently down.<br/></br>Mouse Button Indexes:<ul><li><code>0</code>: Left</li><li><code>1</code>: Middle</li><li><code>2</code>: Right</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the mouse button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the mouse button is currently down.</div>
        </p>
        <p id="Reference_functions_Input_IsMouseButtonPressed">
        <h2 style="margin-bottom: 8px;">Input.IsMouseButtonPressed</h2>
        <code>Input.IsMouseButtonPressed(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the mouse button started pressing during the current frame.<br/></br>Mouse Button Indexes:<ul><li><code>0</code>: Left</li><li><code>1</code>: Middle</li><li><code>2</code>: Right</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the mouse button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the mouse button started pressing during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_IsMouseButtonReleased">
        <h2 style="margin-bottom: 8px;">Input.IsMouseButtonReleased</h2>
        <code>Input.IsMouseButtonReleased(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the mouse button released during the current frame.<br/></br>Mouse Button Indexes:<ul><li><code>0</code>: Left</li><li><code>1</code>: Middle</li><li><code>2</code>: Right</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the mouse button to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the mouse button released during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_IsKeyDown">
        <h2 style="margin-bottom: 8px;">Input.IsKeyDown</h2>
        <code>Input.IsKeyDown(keyID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the key is currently down.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the key is currently down.</div>
        </p>
        <p id="Reference_functions_Input_IsKeyPressed">
        <h2 style="margin-bottom: 8px;">Input.IsKeyPressed</h2>
        <code>Input.IsKeyPressed(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the key started pressing during the current frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the key started pressing during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_IsKeyReleased">
        <h2 style="margin-bottom: 8px;">Input.IsKeyReleased</h2>
        <code>Input.IsKeyReleased(mouseButtonID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the key released during the current frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>mouseButtonID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the key released during the current frame.</div>
        </p>
        <p id="Reference_functions_Input_GetKeyName">
        <h2 style="margin-bottom: 8px;">Input.GetKeyName</h2>
        <code>Input.GetKeyName(keyID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the key.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyID (Integer): Index of the key to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Input_GetButtonName">
        <h2 style="margin-bottom: 8px;">Input.GetButtonName</h2>
        <code>Input.GetButtonName(button)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the button.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>button (Enum): Which <a href="#Reference_Button_*">button</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Input_GetAxisName">
        <h2 style="margin-bottom: 8px;">Input.GetAxisName</h2>
        <code>Input.GetAxisName(axis)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the axis.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>axis (Enum): Which <a href="#Reference_Axis_*">axis</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Input_ParseKeyName">
        <h2 style="margin-bottom: 8px;">Input.ParseKeyName</h2>
        <code>Input.ParseKeyName(keyName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Parses a key name into its ID, if possible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyName (String): The key name to parse.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the parsed key ID, or <code>null</code> if it could not be parsed.</div>
        </p>
        <p id="Reference_functions_Input_ParseButtonName">
        <h2 style="margin-bottom: 8px;">Input.ParseButtonName</h2>
        <code>Input.ParseButtonName(keyName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Parses a button name into a button index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyName (String): The button name to parse.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the parsed button index, or <code>null</code> if it could not be parsed.</div>
        </p>
        <p id="Reference_functions_Input_ParseAxisName">
        <h2 style="margin-bottom: 8px;">Input.ParseAxisName</h2>
        <code>Input.ParseAxisName(keyName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Parses an axis into an axis index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>keyName (String): The axis name to parse.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the parsed axis index, or <code>null</code> if it could not be parsed.</div>
        </p>
        <p id="Reference_functions_Input_GetActionList">
        <h2 style="margin-bottom: 8px;">Input.GetActionList</h2>
        <code>Input.GetActionList()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a list of all input actions.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array value, or <code>null</code> if no actions are registered.</div>
        </p>
        <p id="Reference_functions_Input_ActionExists">
        <h2 style="margin-bottom: 8px;">Input.ActionExists</h2>
        <code>Input.ActionExists(actionName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the given input action exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>actionName (String): Name of the action to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_IsActionHeld">
        <h2 style="margin-bottom: 8px;">Input.IsActionHeld</h2>
        <code>Input.IsActionHeld(playerID, actionName[, inputDevice])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the input action is currently held for the specified player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>actionName (String): Name of the action to check.</li>
        <li>inputDevice (Enum): Which <a href="#Reference_InputDevice_*">input device</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_IsActionPressed">
        <h2 style="margin-bottom: 8px;">Input.IsActionPressed</h2>
        <code>Input.IsActionPressed(playerID, actionName[, inputDevice])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the input action is currently pressed for the specified player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>actionName (String): Name of the action to check.</li>
        <li>inputDevice (Enum): Which <a href="#Reference_InputDevice_*">input device</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_IsActionReleased">
        <h2 style="margin-bottom: 8px;">Input.IsActionReleased</h2>
        <code>Input.IsActionReleased(playerID, actionName[, inputDevice])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the input action was released for the specified player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>actionName (String): Name of the action to check.</li>
        <li>inputDevice (Enum): Which <a href="#Reference_InputDevice_*">input device</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_IsAnyActionHeld">
        <h2 style="margin-bottom: 8px;">Input.IsAnyActionHeld</h2>
        <code>Input.IsAnyActionHeld(playerID[, inputDevice])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether any input action is currently held for the specified player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>inputDevice (Enum): Which <a href="#Reference_InputDevice_*">input device</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_IsAnyActionPressed">
        <h2 style="margin-bottom: 8px;">Input.IsAnyActionPressed</h2>
        <code>Input.IsAnyActionPressed(playerID[, inputDevice])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether any input action is currently pressed for the specified player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>inputDevice (Enum): Which <a href="#Reference_InputDevice_*">input device</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_IsAnyActionReleased">
        <h2 style="margin-bottom: 8px;">Input.IsAnyActionReleased</h2>
        <code>Input.IsAnyActionReleased(playerID[, inputDevice])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether any input action was released for the specified player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>inputDevice (Enum): Which <a href="#Reference_InputDevice_*">input device</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_GetAnalogActionInput">
        <h2 style="margin-bottom: 8px;">Input.GetAnalogActionInput</h2>
        <code>Input.GetAnalogActionInput(playerID, actionName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the analog value of a specific action.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>actionName (String): Name of the action to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Input_GetActionBind">
        <h2 style="margin-bottom: 8px;">Input.GetActionBind</h2>
        <code>Input.GetActionBind(playerID, actionName[, bindIndex])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the bound input action for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to get.</li>
        <li>bindIndex (Integer): Which bind index to get.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value, or <code>null</code> if the input action is not bound.</div>
        </p>
        <p id="Reference_functions_Input_SetActionBind">
        <h2 style="margin-bottom: 8px;">Input.SetActionBind</h2>
        <code>Input.SetActionBind(playerID, actionName, inputBindType, actionBind[, bindIndex])</code>
        <div style="margin-top: 8px; font-size: 14px;">Binds an input action for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to set.</li>
        <li>inputBindType (Enum): The <a href="#Reference_InputBind_*">input bind type</a>.</li>
        <li>actionBind (Enum or Map): The bind definition.</li>
        <li>bindIndex (Integer): Which bind index to set.</li>
        </ul>
        </p>
        <p id="Reference_functions_Input_AddActionBind">
        <h2 style="margin-bottom: 8px;">Input.AddActionBind</h2>
        <code>Input.AddActionBind(playerID, actionName, inputBindType, actionBind)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds an input action bind for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action.</li>
        <li>inputBindType (Enum): The <a href="#Reference_InputBind_*">input bind type</a>.</li>
        <li>actionBind (Enum or Map): The bind definition.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the added input action as an Integer value.</div>
        </p>
        <p id="Reference_functions_Input_RemoveActionBind">
        <h2 style="margin-bottom: 8px;">Input.RemoveActionBind</h2>
        <code>Input.RemoveActionBind(playerID, actionName[, bindIndex])</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes a bound input action from a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to unbind.</li>
        <li>bindIndex (Integer): Which bind index to remove. If not passed, this removes all binds from the given action.</li>
        </ul>
        </p>
        <p id="Reference_functions_Input_GetBoundActionList">
        <h2 style="margin-bottom: 8px;">Input.GetBoundActionList</h2>
        <code>Input.GetBoundActionList(playerID, actionName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a list of the input actions currently bound to a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to get.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array of Map values.</div>
        </p>
        <p id="Reference_functions_Input_GetBoundActionCount">
        <h2 style="margin-bottom: 8px;">Input.GetBoundActionCount</h2>
        <code>Input.GetBoundActionCount(playerID, actionName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of bound input actions for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Input_GetBoundActionMap">
        <h2 style="margin-bottom: 8px;">Input.GetBoundActionMap</h2>
        <code>Input.GetBoundActionMap(playerID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a map of the input actions currently bound to a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value, or <code>null</code> if no actions are registered.</div>
        </p>
        <p id="Reference_functions_Input_GetDefaultActionBind">
        <h2 style="margin-bottom: 8px;">Input.GetDefaultActionBind</h2>
        <code>Input.GetDefaultActionBind(playerID, actionName[, bindIndex])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the default bound input action for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to get.</li>
        <li>bindIndex (Integer): Which bind index to get.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value, or <code>null</code> if the input action is not bound.</div>
        </p>
        <p id="Reference_functions_Input_SetDefaultActionBind">
        <h2 style="margin-bottom: 8px;">Input.SetDefaultActionBind</h2>
        <code>Input.SetDefaultActionBind(playerID, actionName, inputBindType, actionBind[, bindIndex])</code>
        <div style="margin-top: 8px; font-size: 14px;">Binds a default input action for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to set.</li>
        <li>inputBindType (Enum): The <a href="#Reference_InputBind_*">input bind type</a>.</li>
        <li>actionBind (Enum or Map): The bind definition.</li>
        <li>bindIndex (Integer): Which bind index to set.</li>
        </ul>
        </p>
        <p id="Reference_functions_Input_AddDefaultActionBind">
        <h2 style="margin-bottom: 8px;">Input.AddDefaultActionBind</h2>
        <code>Input.AddDefaultActionBind(playerID, actionName, inputBindType, actionBind)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds a default input action bind for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action.</li>
        <li>inputBindType (Enum): The <a href="#Reference_InputBind_*">input bind type</a>.</li>
        <li>actionBind (Enum or Map): The bind definition.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the added input action as an Integer value.</div>
        </p>
        <p id="Reference_functions_Input_RemoveDefaultActionBind">
        <h2 style="margin-bottom: 8px;">Input.RemoveDefaultActionBind</h2>
        <code>Input.RemoveDefaultActionBind(playerID, actionName[, bindIndex])</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes a bound input action default from a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to unbind.</li>
        <li>bindIndex (Integer): Which bind index to remove. If not passed, this removes all binds from the given action.</li>
        </ul>
        </p>
        <p id="Reference_functions_Input_GetDefaultBoundActionList">
        <h2 style="margin-bottom: 8px;">Input.GetDefaultBoundActionList</h2>
        <code>Input.GetDefaultBoundActionList(playerID, actionName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a list of the input actions bound by default to a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action to get.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array of Map values.</div>
        </p>
        <p id="Reference_functions_Input_GetDefaultBoundActionCount">
        <h2 style="margin-bottom: 8px;">Input.GetDefaultBoundActionCount</h2>
        <code>Input.GetDefaultBoundActionCount(playerID, actionName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of bound default input actions for a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>actionName (String): Name of the action.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Input_GetDefaultBoundActionMap">
        <h2 style="margin-bottom: 8px;">Input.GetDefaultBoundActionMap</h2>
        <code>Input.GetDefaultBoundActionMap(playerID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a map of the input actions bound by default to a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value, or <code>null</code> if no actions are registered.</div>
        </p>
        <p id="Reference_functions_Input_ResetActionBindsToDefaults">
        <h2 style="margin-bottom: 8px;">Input.ResetActionBindsToDefaults</h2>
        <code>Input.ResetActionBindsToDefaults(playerID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets all input actions for a specific player to its defaults.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        </ul>
        </p>
        <p id="Reference_functions_Input_IsPlayerUsingDevice">
        <h2 style="margin-bottom: 8px;">Input.IsPlayerUsingDevice</h2>
        <code>Input.IsPlayerUsingDevice(playerID, inputDevice)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a given input device is being used by the player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        <li>inputDevice (Enum): Which <a href="#Reference_InputDevice_*">input device</a> to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Input_GetPlayerControllerIndex">
        <h2 style="margin-bottom: 8px;">Input.GetPlayerControllerIndex</h2>
        <code>Input.GetPlayerControllerIndex(playerID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the controller index assigned to a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the controller, or <code>-1</code> if there is no controller assigned.</div>
        </p>
        <p id="Reference_functions_Input_SetPlayerControllerIndex">
        <h2 style="margin-bottom: 8px;">Input.SetPlayerControllerIndex</h2>
        <code>Input.SetPlayerControllerIndex(playerID, controllerID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Assigns a controller index to a specific player.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>playerID (Integer): Index of the player.</li>
        <li>controllerID (Integer or <code>null</code>): Index of the controller to assign, or <code>null</code> to unassign.</li>
        </ul>
        </p>
        <p id="Reference_functions_Instance_Create">
        <h2 style="margin-bottom: 8px;">Instance.Create</h2>
        <code>Instance.Create(className, x, y[, flag])</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a new instance of an object class, and calls its <code>Create</code> event with the flag.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        <li>x (Number): X position of where to place the new instance.</li>
        <li>y (Number): Y position of where to place the new instance.</li>
        <li>flag (any type): Value to pass to the <code>Create</code> event. (Default: <code>0</code>)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the new instance.</div>
        </p>
        <p id="Reference_functions_Instance_GetNth">
        <h2 style="margin-bottom: 8px;">Instance.GetNth</h2>
        <code>Instance.GetNth(className, n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the n'th instance of an object class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        <li>n (Integer): n'th of object class' instances to get. <code>0</code> is first.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns n'th of object class' instances, <code>null</code> if instance cannot be found or class does not exist.</div>
        </p>
        <p id="Reference_functions_Instance_IsClass">
        <h2 style="margin-bottom: 8px;">Instance.IsClass</h2>
        <code>Instance.IsClass(instance, className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether or not the instance is of a specified object class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to check.</li>
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether or not the instance is of a specified object class.</div>
        </p>
        <p id="Reference_functions_Instance_GetClass">
        <h2 style="margin-bottom: 8px;">Instance.GetClass</h2>
        <code>Instance.GetClass(instance)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the object class of a instance.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Instance_GetCount">
        <h2 style="margin-bottom: 8px;">Instance.GetCount</h2>
        <code>Instance.GetCount(className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets amount of currently active instances in an object class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns count of currently active instances in an object class.</div>
        </p>
        <p id="Reference_functions_Instance_GetNextInstance">
        <h2 style="margin-bottom: 8px;">Instance.GetNextInstance</h2>
        <code>Instance.GetNextInstance(instance, n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the instance created after or before the specified instance. <code>0</code> is the next instance, <code>-1</code> is the previous instance.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to check.</li>
        <li>n (Integer): How many instances after or before the desired instance is to the checking instance.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the desired instance.</div>
        </p>
        <p id="Reference_functions_Instance_GetBySlotID">
        <h2 style="margin-bottom: 8px;">Instance.GetBySlotID</h2>
        <code>Instance.GetBySlotID(slotID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets an instance by its slot ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>slotID (Integer): The slot ID to search a corresponding instance for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the instance corresponding to the specified slot ID, or <code>null</code> if no instance was found.</div>
        </p>
        <p id="Reference_functions_Instance_DisableAutoAnimate">
        <h2 style="margin-bottom: 8px;">Instance.DisableAutoAnimate</h2>
        <code>Instance.DisableAutoAnimate(disableAutoAnimate)</code>
        <div style="margin-top: 8px; font-size: 14px;">Disables the AutoAnimate function of entities.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>disableAutoAnimate (Boolean): Whether to turn off the engine automatically applying AutoAnimate when entities are initialized.</li>
        </ul>
        </p>
        <p id="Reference_functions_Instance_Copy">
        <h2 style="margin-bottom: 8px;">Instance.Copy</h2>
        <code>Instance.Copy(destInstance, srcInstance[, copyClass])</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies an instance into another.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>destInstance (Instance): The destination instance.</li>
        <li>srcInstance (Instance): The source instance.</li>
        <li>copyClass (Boolean): Whether to copy the class of the source entity (defaults to true).</li>
        </ul>
        </p>
        <p id="Reference_functions_Instance_ChangeClass">
        <h2 style="margin-bottom: 8px;">Instance.ChangeClass</h2>
        <code>Instance.ChangeClass(instance, className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes an instance's class.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to swap.</li>
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the instance was swapped.</div>
        </p>
        <p id="Reference_functions_JSON_Parse">
        <h2 style="margin-bottom: 8px;">JSON.Parse</h2>
        <code>JSON.Parse(jsonText)</code>
        <div style="margin-top: 8px; font-size: 14px;">Decodes a String value into a Map value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>jsonText (String): JSON-compliant text.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value if the text can be decoded, otherwise returns <code>null</code>.</div>
        </p>
        <p id="Reference_functions_JSON_ToString">
        <h2 style="margin-bottom: 8px;">JSON.ToString</h2>
        <code>JSON.ToString(json[, prettyPrint])</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Map value into a String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>json (Map): Map value.</li>
        <li>prettyPrint (Boolean): Whether or not to use spacing and newlines in the text.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a JSON string based on the Map value.</div>
        </p>
        <p id="Reference_functions_Math_Cos">
        <h2 style="margin-bottom: 8px;">Math.Cos</h2>
        <code>Math.Cos(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Angle (in radians) to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine of x radians.</div>
        </p>
        <p id="Reference_functions_Math_Sin">
        <h2 style="margin-bottom: 8px;">Math.Sin</h2>
        <code>Math.Sin(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the sine of an angle of x radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Angle (in radians) to get the sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The sine of x radians.</div>
        </p>
        <p id="Reference_functions_Math_Tan">
        <h2 style="margin-bottom: 8px;">Math.Tan</h2>
        <code>Math.Tan(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Angle (in radians) to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent of x radians.</div>
        </p>
        <p id="Reference_functions_Math_Acos">
        <h2 style="margin-bottom: 8px;">Math.Acos</h2>
        <code>Math.Acos(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arccosine of x.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Number value to get the arccosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle (in radians) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Asin">
        <h2 style="margin-bottom: 8px;">Math.Asin</h2>
        <code>Math.Asin(x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arcsine of x.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): Number value to get the arcsine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle (in radians) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Atan">
        <h2 style="margin-bottom: 8px;">Math.Atan</h2>
        <code>Math.Atan(x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arctangent angle (in radians) from x and y.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Decimal): x value.</li>
        <li>y (Decimal): y value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The angle from x and y.</div>
        </p>
        <p id="Reference_functions_Math_Distance">
        <h2 style="margin-bottom: 8px;">Math.Distance</h2>
        <code>Math.Distance(x1, y1, x2, y2)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the distance from (x1,y1) to (x2,y2) in pixels.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of first point.</li>
        <li>y1 (Number): Y position of first point.</li>
        <li>x2 (Number): X position of second point.</li>
        <li>y2 (Number): Y position of second point.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the distance from (x1,y1) to (x2,y2) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Direction">
        <h2 style="margin-bottom: 8px;">Math.Direction</h2>
        <code>Math.Direction(x1, y1, x2, y2)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the angle from (x1,y1) to (x2,y2) in radians.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x1 (Number): X position of first point.</li>
        <li>y1 (Number): Y position of first point.</li>
        <li>x2 (Number): X position of second point.</li>
        <li>y2 (Number): Y position of second point.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle from (x1,y1) to (x2,y2) as a Decimal value.</div>
        </p>
        <p id="Reference_functions_Math_Abs">
        <h2 style="margin-bottom: 8px;">Math.Abs</h2>
        <code>Math.Abs(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the absolute value of a Number.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the absolute value of n.</div>
        </p>
        <p id="Reference_functions_Math_Min">
        <h2 style="margin-bottom: 8px;">Math.Min</h2>
        <code>Math.Min(a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the lesser value of two Number values.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>a (Number): Number value.</li>
        <li>b (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the lesser value of a and b.</div>
        </p>
        <p id="Reference_functions_Math_Max">
        <h2 style="margin-bottom: 8px;">Math.Max</h2>
        <code>Math.Max(a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the greater value of two Number values.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>a (Number): Number value.</li>
        <li>b (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the greater value of a and b.</div>
        </p>
        <p id="Reference_functions_Math_Clamp">
        <h2 style="margin-bottom: 8px;">Math.Clamp</h2>
        <code>Math.Clamp(n, minValue, maxValue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the value clamped between a range.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        <li>minValue (Number): Minimum range value to clamp to.</li>
        <li>maxValue (Number): Maximum range value to clamp to.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Number value if within the range, otherwise returns closest range value.</div>
        </p>
        <p id="Reference_functions_Math_Sign">
        <h2 style="margin-bottom: 8px;">Math.Sign</h2>
        <code>Math.Sign(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the sign associated with a Decimal value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>-1</code> if <code>n</code> is negative, <code>1</code> if positive, and <code>0</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Math_Random">
        <h2 style="margin-bottom: 8px;">Math.Random</h2>
        <code>Math.Random()</code>
        <div style="margin-top: 8px; font-size: 14px;">Get a random number between 0.0 and 1.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number.</div>
        </p>
        <p id="Reference_functions_Math_RandomMax">
        <h2 style="margin-bottom: 8px;">Math.RandomMax</h2>
        <code>Math.RandomMax(max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between 0.0 and a specified maximum.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>max (Number): Maximum non-inclusive value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number.</div>
        </p>
        <p id="Reference_functions_Math_RandomRange">
        <h2 style="margin-bottom: 8px;">Math.RandomRange</h2>
        <code>Math.RandomRange(min, max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between specified minimum and a specified maximum.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>min (Number): Minimum non-inclusive value.</li>
        <li>max (Number): Maximum non-inclusive value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number.</div>
        </p>
        <p id="Reference_functions_Math_Floor">
        <h2 style="margin-bottom: 8px;">Math.Floor</h2>
        <code>Math.Floor(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rounds the number n downward, returning the largest integral value that is not greater than n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be rounded.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the floored number value.</div>
        </p>
        <p id="Reference_functions_Math_Ceil">
        <h2 style="margin-bottom: 8px;">Math.Ceil</h2>
        <code>Math.Ceil(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rounds the number n upward, returning the smallest integral value that is not less than n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be rounded.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the ceiling-ed number value.</div>
        </p>
        <p id="Reference_functions_Math_Round">
        <h2 style="margin-bottom: 8px;">Math.Round</h2>
        <code>Math.Round(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Rounds the number n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be rounded.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the rounded number value.</div>
        </p>
        <p id="Reference_functions_Math_Sqrt">
        <h2 style="margin-bottom: 8px;">Math.Sqrt</h2>
        <code>Math.Sqrt(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Retrieves the square root of the number n.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number to be square rooted.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the square root of the number n.</div>
        </p>
        <p id="Reference_functions_Math_Pow">
        <h2 style="margin-bottom: 8px;">Math.Pow</h2>
        <code>Math.Pow(n, p)</code>
        <div style="margin-top: 8px; font-size: 14px;">Retrieves the number n to the power of p.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number for the base of the exponent.</li>
        <li>p (Number): Exponent.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the number n to the power of p.</div>
        </p>
        <p id="Reference_functions_Math_Exp">
        <h2 style="margin-bottom: 8px;">Math.Exp</h2>
        <code>Math.Exp(p)</code>
        <div style="margin-top: 8px; font-size: 14px;">Retrieves the constant e (2.717) to the power of p.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>p (Number): Exponent.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the result number.</div>
        </p>
        <p id="Reference_functions_Matrix_Create">
        <h2 style="margin-bottom: 8px;">Matrix.Create</h2>
        <code>Matrix.Create()</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a 4x4 matrix and sets it to the identity. <br/>"The model, view and projection matrices are three separate matrices. <br/>Model maps from an object's local coordinate space into world space, <br/>view from world space to view space, projection from camera to screen.<br/><br/>If you compose all three, you can use the one result to map all the way from <br/>object space to screen space, making you able to work out what you need to <br/>pass on to the next stage of a programmable pipeline from the incoming <br/>vertex positions." - Tommy (https://stackoverflow.com/questions/5550620/the-purpose-of-model-view-projection-matrix)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Matrix as an Array.</div>
        </p>
        <p id="Reference_functions_Matrix_Identity">
        <h2 style="margin-bottom: 8px;">Matrix.Identity</h2>
        <code>Matrix.Identity(matrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to the identity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to set to the identity.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Perspective">
        <h2 style="margin-bottom: 8px;">Matrix.Perspective</h2>
        <code>Matrix.Perspective(matrix, fov, near, far, aspect)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a perspective projection matrix.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to generate the projection matrix into.</li>
        <li>fov (Number): The field of view, in degrees.</li>
        <li>near (Number): The near clipping plane value.</li>
        <li>far (Number): The far clipping plane value.</li>
        <li>aspect (Number): The aspect ratio.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Copy">
        <h2 style="margin-bottom: 8px;">Matrix.Copy</h2>
        <code>Matrix.Copy(matrixDestination, matrixSource)</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies the matrix to the destination.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrixDestination (Matrix): Destination.</li>
        <li>matrixSource (Matrix): Source.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Multiply">
        <h2 style="margin-bottom: 8px;">Matrix.Multiply</h2>
        <code>Matrix.Multiply(matrix, a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Multiplies two matrices.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>a (Matrix): The first matrix to use for multiplying.</li>
        <li>b (Matrix): The second matrix to use for multiplying.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Translate">
        <h2 style="margin-bottom: 8px;">Matrix.Translate</h2>
        <code>Matrix.Translate(matrix, x, y, z[, resetToIdentity, actuallyTranslate])</code>
        <div style="margin-top: 8px; font-size: 14px;">Translates the matrix.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X position value.</li>
        <li>y (Number): Y position value.</li>
        <li>z (Number): Z position value.</li>
        <li>resetToIdentity (Boolean): Whether or not to calculate the translation values based on the matrix. (Default: <code>false</code>)</li>
        <li>actuallyTranslate (Boolean): Adds the translation components to the matrix instead of overwriting them (Preserves older code functionality, please fix me!). (Default: <code>false</code>)</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Scale">
        <h2 style="margin-bottom: 8px;">Matrix.Scale</h2>
        <code>Matrix.Scale(matrix, x, y, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a scale identity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X scale value.</li>
        <li>y (Number): Y scale value.</li>
        <li>z (Number): Z scale value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Matrix_Rotate">
        <h2 style="margin-bottom: 8px;">Matrix.Rotate</h2>
        <code>Matrix.Rotate(matrix, x, y, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation identity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X rotation value.</li>
        <li>y (Number): Y rotation value.</li>
        <li>z (Number): Z rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Model_GetVertexCount">
        <h2 style="margin-bottom: 8px;">Model.GetVertexCount</h2>
        <code>Model.GetVertexCount(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many vertices are in the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The vertex count.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationCount">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationCount</h2>
        <code>Model.GetAnimationCount(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many animations exist in the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationName">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationName</h2>
        <code>Model.GetAnimationName(model, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the model animation with the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        <li>animation (Integer): Index of the animation.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the animation name, or <code>null</code> if the model contains no animations.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationIndex">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationIndex</h2>
        <code>Model.GetAnimationIndex(model, animationName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the index of the model animation with the specified name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        <li>animationName (String): Name of the animation to find.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the animation index, or <code>-1</code> if the animation could not be found. Will always return <code>-1</code> if the model contains no animations.</div>
        </p>
        <p id="Reference_functions_Model_GetFrameCount">
        <h2 style="margin-bottom: 8px;">Model.GetFrameCount</h2>
        <code>Model.GetFrameCount(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many frames exist in the model. (Deprecated; use <code><a href="#Reference_functions_Model_GetAnimationLength">Model.GetAnimationLength</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Model_GetAnimationLength">
        <h2 style="margin-bottom: 8px;">Model.GetAnimationLength</h2>
        <code>Model.GetAnimationLength(model, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the length of the animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        <li>animation (Integer): The animation index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The number of keyframes in the animation.</div>
        </p>
        <p id="Reference_functions_Model_HasMaterials">
        <h2 style="margin-bottom: 8px;">Model.HasMaterials</h2>
        <code>Model.HasMaterials(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if the model has materials.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the model has materials, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Model_HasBones">
        <h2 style="margin-bottom: 8px;">Model.HasBones</h2>
        <code>Model.HasBones(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if the model has bones.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the model has bones, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Model_CreateArmature">
        <h2 style="margin-bottom: 8px;">Model.CreateArmature</h2>
        <code>Model.CreateArmature(model)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates an armature from the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the armature.</div>
        </p>
        <p id="Reference_functions_Model_PoseArmature">
        <h2 style="margin-bottom: 8px;">Model.PoseArmature</h2>
        <code>Model.PoseArmature(model, armature[, animation, frame])</code>
        <div style="margin-top: 8px; font-size: 14px;">Poses an armature.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        <li>armature (Integer): The armature index to pose.</li>
        <li>animation (Integer): Animation to pose the armature.</li>
        <li>frame (Decimal): Frame to pose the armature.</li>
        </ul>
        </p>
        <p id="Reference_functions_Model_ResetArmature">
        <h2 style="margin-bottom: 8px;">Model.ResetArmature</h2>
        <code>Model.ResetArmature(model, armature)</code>
        <div style="margin-top: 8px; font-size: 14px;">Resets an armature to its default pose.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        <li>armature (Integer): The armature index to reset.</li>
        </ul>
        </p>
        <p id="Reference_functions_Model_DeleteArmature">
        <h2 style="margin-bottom: 8px;">Model.DeleteArmature</h2>
        <code>Model.DeleteArmature(model, armature)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deletes an armature from the model.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>model (Integer): The model index.</li>
        <li>armature (Integer): The armature index to delete.</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_Play">
        <h2 style="margin-bottom: 8px;">Music.Play</h2>
        <code>Music.Play(music[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track finishes playing, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_PlayAtTime">
        <h2 style="margin-bottom: 8px;">Music.PlayAtTime</h2>
        <code>Music.PlayAtTime(music, startPoint[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it at a time (in seconds).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>startPoint (Decimal): The time (in seconds) to start the music at.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track finishes playing, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_Stop">
        <h2 style="margin-bottom: 8px;">Music.Stop</h2>
        <code>Music.Stop(music)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the music from the music stack, stopping it if currently playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_StopWithFadeOut">
        <h2 style="margin-bottom: 8px;">Music.StopWithFadeOut</h2>
        <code>Music.StopWithFadeOut(seconds)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the music at the top of the music stack, fading it out over a time period.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>seconds (Decimal): The time period to fade out the music, in seconds.</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_Pause">
        <h2 style="margin-bottom: 8px;">Music.Pause</h2>
        <code>Music.Pause()</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses the music at the top of the music stack.</div>
        </p>
        <p id="Reference_functions_Music_Resume">
        <h2 style="margin-bottom: 8px;">Music.Resume</h2>
        <code>Music.Resume()</code>
        <div style="margin-top: 8px; font-size: 14px;">Resumes the music at the top of the music stack.</div>
        </p>
        <p id="Reference_functions_Music_Clear">
        <h2 style="margin-bottom: 8px;">Music.Clear</h2>
        <code>Music.Clear()</code>
        <div style="margin-top: 8px; font-size: 14px;">Completely clears the music stack, stopping all music.</div>
        </p>
        <p id="Reference_functions_Music_Loop">
        <h2 style="margin-bottom: 8px;">Music.Loop</h2>
        <code>Music.Loop(music, loop, loopPoint[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it, looping back to the specified sample index if it reaches the end of playback.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>loop (Boolean): Unused.</li>
        <li>loopPoint (Integer): The sample index to loop back to.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track is interrupted, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_LoopAtTime">
        <h2 style="margin-bottom: 8px;">Music.LoopAtTime</h2>
        <code>Music.LoopAtTime(music, startPoint, loop, loopPoint[, panning, speed, volume, fadeInAfterFinished])</code>
        <div style="margin-top: 8px; font-size: 14px;">Places the music onto the music stack and plays it, looping back to the specified sample index if it reaches the end of playback.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        <li>startPoint (Decimal): The time (in seconds) to start the music at.</li>
        <li>loop (Boolean): Unused.</li>
        <li>loopPoint (Integer): The sample index to loop back to.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        <li>fadeInAfterFinished (Decimal): The time period to fade in the previous music track after the currently playing track is interrupted, in seconds. (0.0 disables this.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Music_IsPlaying">
        <h2 style="margin-bottom: 8px;">Music.IsPlaying</h2>
        <code>Music.IsPlaying(music)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if the specified music is currently playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to play.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Music_GetPosition">
        <h2 style="margin-bottom: 8px;">Music.GetPosition</h2>
        <code>Music.GetPosition(music)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the position of the current track playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>music (Integer): The music index to get the current position (in seconds) of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Music_Alter">
        <h2 style="margin-bottom: 8px;">Music.Alter</h2>
        <code>Music.Alter(panning, speed, volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Alters the playback conditions of the current track playing.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it.</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed.</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Number_ToString">
        <h2 style="margin-bottom: 8px;">Number.ToString</h2>
        <code>Number.ToString(n[, base])</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Number to a String.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        <li>base (Integer): The numerical base, or radix.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Number_AsInteger">
        <h2 style="margin-bottom: 8px;">Number.AsInteger</h2>
        <code>Number.AsInteger(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Decimal to an Integer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Number_AsDecimal">
        <h2 style="margin-bottom: 8px;">Number.AsDecimal</h2>
        <code>Number.AsDecimal(n)</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a Integer to a Decimal.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>n (Number): Number value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Object_Loaded">
        <h2 style="margin-bottom: 8px;">Object.Loaded</h2>
        <code>Object.Loaded(className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an object class is loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the class is loaded.</div>
        </p>
        <p id="Reference_functions_Object_SetActivity">
        <h2 style="margin-bottom: 8px;">Object.SetActivity</h2>
        <code>Object.SetActivity(className, Activity)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the active state of an object to determine if/when it runs its GlobalUpdate function.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        <li>Activity (Integer): The active state to set the object to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Object_GetActivity">
        <h2 style="margin-bottom: 8px;">Object.GetActivity</h2>
        <code>Object.GetActivity(className)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the active state of an object that determines if/when it runs its GlobalUpdate function.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>className (String): Name of the object class.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the active state of the object if it is loaded, otherwise returns -1.</div>
        </p>
        <p id="Reference_functions_Palette_EnablePaletteUsage">
        <h2 style="margin-bottom: 8px;">Palette.EnablePaletteUsage</h2>
        <code>Palette.EnablePaletteUsage(usePalettes)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables palette usage for the application.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>usePalettes (Boolean): Whether or not to use palettes.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_LoadFromResource">
        <h2 style="margin-bottom: 8px;">Palette.LoadFromResource</h2>
        <code>Palette.LoadFromResource(paletteIndex, filename[, activeRows])</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads palette from an .act, .col, .gif, .png, or .hpal resource.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette to load to.</li>
        <li>filename (String): Filepath of resource.</li>
        <li>activeRows (Bitfield): Which rows of 16 colors will not be loaded for .act, .col, and .gif files, from bottom to top.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_LoadFromImage">
        <h2 style="margin-bottom: 8px;">Palette.LoadFromImage</h2>
        <code>Palette.LoadFromImage(paletteIndex, image)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads palette from an image resource.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette to load to.</li>
        <li>image (Integer): Index of the loaded image.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_GetColor">
        <h2 style="margin-bottom: 8px;">Palette.GetColor</h2>
        <code>Palette.GetColor(paletteIndex, colorIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a color from the specified palette.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndex (Integer): Index of color.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Palette_SetColor">
        <h2 style="margin-bottom: 8px;">Palette.SetColor</h2>
        <code>Palette.SetColor(paletteIndex, colorIndex, hex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a color on the specified palette, format 0xRRGGBB.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndex (Integer): Index of color.</li>
        <li>hex (Integer): Hexadecimal color value to set the color to. (format: 0xRRGGBB)</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_GetColorTransparent">
        <h2 style="margin-bottom: 8px;">Palette.GetColorTransparent</h2>
        <code>Palette.GetColorTransparent(paletteIndex, colorIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets if the color on the specified palette is transparent.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndex (Integer): Index of color.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Palette_SetColorTransparent">
        <h2 style="margin-bottom: 8px;">Palette.SetColorTransparent</h2>
        <code>Palette.SetColorTransparent(paletteIndex, colorIndex, isTransparent)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a color on the specified palette transparent.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndex (Integer): Index of color.</li>
        <li>isTransparent (Boolean): Whether to make the color transparent or not.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_MixPalettes">
        <h2 style="margin-bottom: 8px;">Palette.MixPalettes</h2>
        <code>Palette.MixPalettes(destinationPaletteIndex, paletteIndexA, paletteIndexB, mixRatio, colorIndexStart, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Mixes colors between two palettes and outputs to another palette.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>destinationPaletteIndex (Integer): Index of palette to put colors to.</li>
        <li>paletteIndexA (Integer): First index of palette.</li>
        <li>paletteIndexB (Integer): Second index of palette.</li>
        <li>mixRatio (Number): Percentage to mix the colors between 0.0 - 1.0.</li>
        <li>colorIndexStart (Integer): First index of colors to mix.</li>
        <li>colorCount (Integer): Amount of colors to mix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_RotateColorsLeft">
        <h2 style="margin-bottom: 8px;">Palette.RotateColorsLeft</h2>
        <code>Palette.RotateColorsLeft(paletteIndex, colorIndexStart, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Shifts the colors on the palette to the left.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndexStart (Integer): First index of colors to shift.</li>
        <li>colorCount (Integer): Amount of colors to shift.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_RotateColorsRight">
        <h2 style="margin-bottom: 8px;">Palette.RotateColorsRight</h2>
        <code>Palette.RotateColorsRight(paletteIndex, colorIndexStart, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Shifts the colors on the palette to the right.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>colorIndexStart (Integer): First index of colors to shift.</li>
        <li>colorCount (Integer): Amount of colors to shift.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_CopyColors">
        <h2 style="margin-bottom: 8px;">Palette.CopyColors</h2>
        <code>Palette.CopyColors(paletteIndexA, colorIndexStartA, paletteIndexB, colorIndexStartB, colorCount)</code>
        <div style="margin-top: 8px; font-size: 14px;">Copies colors from Palette A to Palette B</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndexA (Integer): Index of palette to get colors from.</li>
        <li>colorIndexStartA (Integer): First index of colors to copy.</li>
        <li>paletteIndexB (Integer): Index of palette to put colors to.</li>
        <li>colorIndexStartB (Integer): First index of colors to be placed.</li>
        <li>colorCount (Integer): Amount of colors to be copied.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_UsePaletteIndexLines">
        <h2 style="margin-bottom: 8px;">Palette.UsePaletteIndexLines</h2>
        <code>Palette.UsePaletteIndexLines(usePaletteIndexLines)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables the global palette index table.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>usePaletteIndexLines (Boolean): Whether or not to use the global palette index table.</li>
        </ul>
        </p>
        <p id="Reference_functions_Palette_SetPaletteIndexLines">
        <h2 style="margin-bottom: 8px;">Palette.SetPaletteIndexLines</h2>
        <code>Palette.SetPaletteIndexLines(paletteIndex, lineStart, lineEnd)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the palette to be used for drawing on certain Y-positions on the screen (between the start and end lines).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>paletteIndex (Integer): Index of palette.</li>
        <li>lineStart (Number): Start line to set to the palette.</li>
        <li>lineEnd (Number): Line where to stop setting the palette.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Math_GetRandSeed">
        <h2 style="margin-bottom: 8px;">RSDK.Math.GetRandSeed</h2>
        <code>RSDK.Math.GetRandSeed()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the engine's random seed value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an integer of the engine's random seed value.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_SetRandSeed">
        <h2 style="margin-bottom: 8px;">RSDK.Math.SetRandSeed</h2>
        <code>RSDK.Math.SetRandSeed(key)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the engine's random seed value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>key (Integer): Value to set the seed to.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Math_RandomInteger">
        <h2 style="margin-bottom: 8px;">RSDK.Math.RandomInteger</h2>
        <code>RSDK.Math.RandomInteger(min, max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between specified minimum integer and a specified maximum integer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>min (Integer): Minimum non-inclusive integer value.</li>
        <li>max (Integer): Maximum non-inclusive integer value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number as an integer.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_RandomIntegerSeeded">
        <h2 style="margin-bottom: 8px;">RSDK.Math.RandomIntegerSeeded</h2>
        <code>RSDK.Math.RandomIntegerSeeded(min, max[, seed])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between specified minimum integer and a specified maximum integer based off of a given seed.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>min (Integer): Minimum non-inclusive integer value.</li>
        <li>max (Integer): Maximum non-inclusive integer value.</li>
        <li>seed (Integer): Seed of which to base the number.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the random number as an integer.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_ClearTrigLookupTables">
        <h2 style="margin-bottom: 8px;">RSDK.Math.ClearTrigLookupTables</h2>
        <code>RSDK.Math.ClearTrigLookupTables()</code>
        <div style="margin-top: 8px; font-size: 14px;">Clears the engine's angle lookup tables.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_CalculateTrigAngles">
        <h2 style="margin-bottom: 8px;">RSDK.Math.CalculateTrigAngles</h2>
        <code>RSDK.Math.CalculateTrigAngles()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the engine's angle lookup tables.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_Sin1024">
        <h2 style="margin-bottom: 8px;">RSDK.Math.Sin1024</h2>
        <code>RSDK.Math.Sin1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the sine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The sine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_Cos1024">
        <h2 style="margin-bottom: 8px;">RSDK.Math.Cos1024</h2>
        <code>RSDK.Math.Cos1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_Tan1024">
        <h2 style="margin-bottom: 8px;">RSDK.Math.Tan1024</h2>
        <code>RSDK.Math.Tan1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_ASin1024">
        <h2 style="margin-bottom: 8px;">RSDK.Math.ASin1024</h2>
        <code>RSDK.Math.ASin1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc sine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc sine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_ACos1024">
        <h2 style="margin-bottom: 8px;">RSDK.Math.ACos1024</h2>
        <code>RSDK.Math.ACos1024(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc cosine of an angle of x based on a max of 1024.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc cosine 1024 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_Cos512">
        <h2 style="margin-bottom: 8px;">RSDK.Math.Cos512</h2>
        <code>RSDK.Math.Cos512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine 512 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_Tan512">
        <h2 style="margin-bottom: 8px;">RSDK.Math.Tan512</h2>
        <code>RSDK.Math.Tan512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent 512 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_ASin512">
        <h2 style="margin-bottom: 8px;">RSDK.Math.ASin512</h2>
        <code>RSDK.Math.ASin512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc sine of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc sine 512 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_ACos512">
        <h2 style="margin-bottom: 8px;">RSDK.Math.ACos512</h2>
        <code>RSDK.Math.ACos512(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc cosine of an angle of x based on a max of 512.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc cosine 512 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_Cos256">
        <h2 style="margin-bottom: 8px;">RSDK.Math.Cos256</h2>
        <code>RSDK.Math.Cos256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the cosine of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The cosine 256 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_Tan256">
        <h2 style="margin-bottom: 8px;">RSDK.Math.Tan256</h2>
        <code>RSDK.Math.Tan256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the tangent of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the tangent of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The tangent 256 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_ASin256">
        <h2 style="margin-bottom: 8px;">RSDK.Math.ASin256</h2>
        <code>RSDK.Math.ASin256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc sine of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc sine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc sine 256 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_ACos256">
        <h2 style="margin-bottom: 8px;">RSDK.Math.ACos256</h2>
        <code>RSDK.Math.ACos256(angle)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the arc cosine of an angle of x based on a max of 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>angle (Integer): Angle to get the arc cosine of.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The arc cosine 256 of the angle.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_RadianToInteger">
        <h2 style="margin-bottom: 8px;">RSDK.Math.RadianToInteger</h2>
        <code>RSDK.Math.RadianToInteger(radian)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the integer conversion of a radian, based on 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>radian (Decimal): Radian value to convert.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">An integer value of the converted radian.</div>
        </p>
        <p id="Reference_functions_RSDK_Math_IntegerToRadian">
        <h2 style="margin-bottom: 8px;">RSDK.Math.IntegerToRadian</h2>
        <code>RSDK.Math.IntegerToRadian(integer)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the radia Decimal conversion of an integer, based on 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>integer (Integer): Integer value to convert.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">A radia Decimal value of the converted integer.</div>
        </p>
        <p id="Reference_functions_RSDK_Matrix_Create256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.Create256</h2>
        <code>RSDK.Matrix.Create256()</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a 4x4 matrix based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Matrix as an Array.</div>
        </p>
        <p id="Reference_functions_RSDK_Matrix_Identity256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.Identity256</h2>
        <code>RSDK.Matrix.Identity256(matrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to the identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Matrix_Multiply256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.Multiply256</h2>
        <code>RSDK.Matrix.Multiply256(matrix, a, b)</code>
        <div style="margin-top: 8px; font-size: 14px;">Multiplies two matrices based on the deciaml 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>a (Matrix): The first matrix to use for multiplying.</li>
        <li>b (Matrix): The second matrix to use for multiplying.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Matrix_Translate256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.Translate256</h2>
        <code>RSDK.Matrix.Translate256(matrix, x, y, z, setIdentity)</code>
        <div style="margin-top: 8px; font-size: 14px;">Translates the matrix based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>x (Number): X position value.</li>
        <li>y (Number): Y position value.</li>
        <li>z (Number): Z position value.</li>
        <li>setIdentity (Boolean): Whether or not to set the matrix as the identity.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Matrix_Scale256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.Scale256</h2>
        <code>RSDK.Matrix.Scale256(matrix, scaleX, scaleY, scaleZ)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a scale identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>scaleX (Number): X scale value.</li>
        <li>scaleY (Number): Y scale value.</li>
        <li>scaleZ (Number): Z scale value.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Matrix_RotateX256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.RotateX256</h2>
        <code>RSDK.Matrix.RotateX256(matrix, rotationY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation X identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationY (Number): X rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Matrix_RotateY256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.RotateY256</h2>
        <code>RSDK.Matrix.RotateY256(matrix, rotationY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation Y identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationY (Number): Y rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Matrix_RotateZ256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.RotateZ256</h2>
        <code>RSDK.Matrix.RotateZ256(matrix, rotationZ)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation Z identity based on the decimal 256.0.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationZ (Number): Z rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_RSDK_Matrix_Rotate256">
        <h2 style="margin-bottom: 8px;">RSDK.Matrix.Rotate256</h2>
        <code>RSDK.Matrix.Rotate256(matrix, rotationX, rotationY, rotationZ)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the matrix to a rotation identity based on 256.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>matrix (Matrix): The matrix to output the values to.</li>
        <li>rotationX (Number): X rotation value.</li>
        <li>rotationY (Number): Y rotation value.</li>
        <li>rotationZ (Number): Z rotation value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Random_SetSeed">
        <h2 style="margin-bottom: 8px;">Random.SetSeed</h2>
        <code>Random.SetSeed(seed)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the PRNG seed.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>seed (Integer): The seed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Random_GetSeed">
        <h2 style="margin-bottom: 8px;">Random.GetSeed</h2>
        <code>Random.GetSeed()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the PRNG seed.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Random_Max">
        <h2 style="margin-bottom: 8px;">Random.Max</h2>
        <code>Random.Max(max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between 0.0 and a specified maximum, and advances the PRNG state.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>max (Number): Maximum non-inclusive value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Random_Range">
        <h2 style="margin-bottom: 8px;">Random.Range</h2>
        <code>Random.Range(min, max)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a random number between a specified minimum and a specified maximum, and advances the PRNG state.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>min (Number): Minimum non-inclusive value.</li>
        <li>max (Number): Maximum non-inclusive value.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Resources_LoadSprite">
        <h2 style="margin-bottom: 8px;">Resources.LoadSprite</h2>
        <code>Resources.LoadSprite(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Sprite resource, returning its Sprite index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadImage">
        <h2 style="margin-bottom: 8px;">Resources.LoadImage</h2>
        <code>Resources.LoadImage(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads an Image resource, returning its Image index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadFont">
        <h2 style="margin-bottom: 8px;">Resources.LoadFont</h2>
        <code>Resources.LoadFont(filename, pixelSize, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Font resource, returning its Font index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String):</li>
        <li>pixelSize (Number):</li>
        <li>unloadPolicy (Integer):</li>
        </ul>
        </p>
        <p id="Reference_functions_Resources_LoadModel">
        <h2 style="margin-bottom: 8px;">Resources.LoadModel</h2>
        <code>Resources.LoadModel(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads Model resource, returning its Model index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadMusic">
        <h2 style="margin-bottom: 8px;">Resources.LoadMusic</h2>
        <code>Resources.LoadMusic(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Music resource, returning its Music index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadSound">
        <h2 style="margin-bottom: 8px;">Resources.LoadSound</h2>
        <code>Resources.LoadSound(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Sound resource, returning its Sound index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        <li>unloadPolicy (Integer): Whether to unload the resource at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index of the Resource.</div>
        </p>
        <p id="Reference_functions_Resources_LoadVideo">
        <h2 style="margin-bottom: 8px;">Resources.LoadVideo</h2>
        <code>Resources.LoadVideo(filename, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads a Video resource, returning its Video index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String):</li>
        <li>unloadPolicy (Integer):</li>
        </ul>
        </p>
        <p id="Reference_functions_Resources_FileExists">
        <h2 style="margin-bottom: 8px;">Resources.FileExists</h2>
        <code>Resources.FileExists(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if a Resource exists with the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): The given filename.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the Resource exists, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Resources_ReadAllText">
        <h2 style="margin-bottom: 8px;">Resources.ReadAllText</h2>
        <code>Resources.ReadAllText(path)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads all text from the given filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>path (String): The path of the resource to read.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns all the text in the resource as a String value if it can be read, otherwise it returns a <code>null</code> value if it cannot be read.</div>
        </p>
        <p id="Reference_functions_Scene_ProcessObjectMovement">
        <h2 style="margin-bottom: 8px;">Scene.ProcessObjectMovement</h2>
        <code>Scene.ProcessObjectMovement(entity, outer, inner)</code>
        <div style="margin-top: 8px; font-size: 14px;">Processes movement of an instance with an outer hitbox and an inner hitboxe.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>entity (Instance): The instance to move.</li>
        <li>outer (Array): Array containing the outer hitbox.</li>
        <li>inner (Array): Array containing the inner hitbox.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_ObjectTileCollision">
        <h2 style="margin-bottom: 8px;">Scene.ObjectTileCollision</h2>
        <code>Scene.ObjectTileCollision(entity, cLayers, cMode, cPlane, xOffset, yOffset, setPos)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks tile collision based on where an instance should check.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>entity (Instance): The instance to base the values on.</li>
        <li>cLayers (Bitfield): Which layers the entity can collide with.</li>
        <li>cMode (Integer): Collision mode of the entity (floor, left wall, roof, right wall).</li>
        <li>cPlane (Integer): Collision plane to get the collision of (A or B).</li>
        <li>xOffset (Number): How far from the entity's X value to start from.</li>
        <li>yOffset (Number): How far from the entity's Y value to start from.</li>
        <li>setPos (Boolean): Whether to set the entity's position if collision is found.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the instance has collided with a tile.</div>
        </p>
        <p id="Reference_functions_Scene_ObjectTileGrip">
        <h2 style="margin-bottom: 8px;">Scene.ObjectTileGrip</h2>
        <code>Scene.ObjectTileGrip(entity, cLayers, cMode, cPlane, xOffset, yOffset, tolerance)</code>
        <div style="margin-top: 8px; font-size: 14px;">Keeps an instance gripped to tile collision based on where an instance should check.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>entity (Instance): The instance to move.</li>
        <li>cLayers (Bitfield): Which layers the entity can collide with.</li>
        <li>cMode (Integer): Collision mode of the entity (floor, left wall, roof, right wall).</li>
        <li>cPlane (Integer): Collision plane to get the collision of (A or B).</li>
        <li>xOffset (Decimal): How far from the entity's X value to start from.</li>
        <li>yOffset (Decimal): How far from the entity's Y value to start from.</li>
        <li>tolerance (Decimal): How far of a tolerance the entity should check for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether to grip the instance.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionTouch">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionTouch</h2>
        <code>Scene.CheckObjectCollisionTouch(thisEntity, thisHitbox, otherEntity, otherHitbox)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching another instance with their respective hitboxes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEntity (Instance): The first instance to check.</li>
        <li>thisHitbox (Array): Array containing the first entity's hitbox.</li>
        <li>otherEntity (Instance): The other instance to check.</li>
        <li>otherHitbox (Array): Array containing the other entity's hitbox.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value whether the entities are touching.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionCircle">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionCircle</h2>
        <code>Scene.CheckObjectCollisionCircle(thisEnity, thisRadius, otherEntity, otherRadius)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching another instance with within their respective radii.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEnity (Instance): The first instance to check.</li>
        <li>thisRadius (Decimal): Radius of the first entity to check.</li>
        <li>otherEntity (Instance): The other instance to check.</li>
        <li>otherRadius (Array): Radius of the other entity to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value whether the entities have collided.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionBox">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionBox</h2>
        <code>Scene.CheckObjectCollisionBox(thisEnity, thisHitbox, otherEntity, otherHitbox, setValues)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching another instance with their respective hitboxes and sets the values of the other instance if specified.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEnity (Instance): The first instance to check.</li>
        <li>thisHitbox (Array): Array containing the first entity's hitbox.</li>
        <li>otherEntity (Instance): The other instance to check.</li>
        <li>otherHitbox (Array): Array containing the other entity's hitbox.</li>
        <li>setValues (Boolean): Whether to set the values of the other entity.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the side the entities are colliding on.</div>
        </p>
        <p id="Reference_functions_Scene_CheckObjectCollisionPlatform">
        <h2 style="margin-bottom: 8px;">Scene.CheckObjectCollisionPlatform</h2>
        <code>Scene.CheckObjectCollisionPlatform(thisEnity, thisHitbox, otherEntity, otherHitbox, setValues)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if an instance is touching the top of another instance with their respective hitboxes and sets the values of the other instance if specified.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>thisEnity (Instance): The first instance to check.</li>
        <li>thisHitbox (Array): Array containing the first entity's hitbox.</li>
        <li>otherEntity (Instance): The other instance to check whether it is on top of the first instance.</li>
        <li>otherHitbox (Array): Array containing the other entity's hitbox.</li>
        <li>setValues (Boolean): Whether to set the values of the other entity.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value whether the entities have collided.</div>
        </p>
        <p id="Reference_functions_Scene_Load">
        <h2 style="margin-bottom: 8px;">Scene.Load</h2>
        <code>Scene.Load([filename, persistency])</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the active scene. If a path to a resource is provided, the active scene is changed to the one in the specified resource file. Otherwise, the active scene is changed to the currently set entry in the scene list, if it exists (see <code><a href="#Reference_SceneList">SceneList</a></code>.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of scene.</li>
        <li>persistency (Boolean): Whether or not the scene should load with persistency.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_LoadNoPersistency">
        <h2 style="margin-bottom: 8px;">Scene.LoadNoPersistency</h2>
        <code>Scene.LoadNoPersistency(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes active scene to the one in the specified resource file, without keeping any persistent objects. (Deprecated; use <code><a href="#Reference_functions_Scene_Load">Scene.Load</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_LoadPosition">
        <h2 style="margin-bottom: 8px;">Scene.LoadPosition</h2>
        <code>Scene.LoadPosition([persistency])</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads the scene located in the scene list's position slot, if a scene list is loaded. (Deprecated; use <code><a href="#Reference_functions_Scene_Load">Scene.Load</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>persistency (Boolean): Whether or not the scene should load with persistency.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_Change">
        <h2 style="margin-bottom: 8px;">Scene.Change</h2>
        <code>Scene.Change(category, scene)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the current scene if the category name and scene name are valid. Note that this does not load the scene; you must use <code><a href="#Reference_functions_Scene_Load">Scene.Load</a></code>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): Category name.</li>
        <li>scene (String): Scene name. If the scene name is not found but the category name is, the first scene in the category is used.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_LoadTileCollisions">
        <h2 style="margin-bottom: 8px;">Scene.LoadTileCollisions</h2>
        <code>Scene.LoadTileCollisions(filename[, tilesetID])</code>
        <div style="margin-top: 8px; font-size: 14px;">Load tile collisions from a resource file.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of tile collision file.</li>
        <li>tilesetID (Integer): Tileset to load tile collisions for.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_AreTileCollisionsLoaded">
        <h2 style="margin-bottom: 8px;">Scene.AreTileCollisionsLoaded</h2>
        <code>Scene.AreTileCollisionsLoaded()</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns or whether tile collisions are loaded.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if tile collisions are loaded, and <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Scene_AddTileset">
        <h2 style="margin-bottom: 8px;">Scene.AddTileset</h2>
        <code>Scene.AddTileset(tileset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds a new tileset into the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileset (String): Path of tileset to load.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the tileset was added, and <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Scene_Restart">
        <h2 style="margin-bottom: 8px;">Scene.Restart</h2>
        <code>Scene.Restart()</code>
        <div style="margin-top: 8px; font-size: 14px;">Restarts the active scene.</div>
        </p>
        <p id="Reference_functions_Scene_PropertyExists">
        <h2 style="margin-bottom: 8px;">Scene.PropertyExists</h2>
        <code>Scene.PropertyExists(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): Name of property to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetProperty">
        <h2 style="margin-bottom: 8px;">Scene.GetProperty</h2>
        <code>Scene.GetProperty(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): Name of property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerCount">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerCount</h2>
        <code>Scene.GetLayerCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of layers in the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of layers in the active scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerIndex">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerIndex</h2>
        <code>Scene.GetLayerIndex(layerName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the layer index of the layer with the specified name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerName (String): Name of the layer to find.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the layer index, or <code>-1</code> if the layer could not be found.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerVisible">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerVisible</h2>
        <code>Scene.GetLayerVisible(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the visibility of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerOpacity">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerOpacity</h2>
        <code>Scene.GetLayerOpacity(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the opacity of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerUsePaletteIndexLines">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerUsePaletteIndexLines</h2>
        <code>Scene.GetLayerUsePaletteIndexLines(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the layer is using the global palette index table.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerProperty">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerProperty</h2>
        <code>Scene.GetLayerProperty(layerIndex, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>property (String): Name of property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerExists">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerExists</h2>
        <code>Scene.GetLayerExists(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a layer exists or not. (Deprecated)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDeformSplitLine">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDeformSplitLine</h2>
        <code>Scene.GetLayerDeformSplitLine(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the DeformSplitLine of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDeformOffsetA">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDeformOffsetA</h2>
        <code>Scene.GetLayerDeformOffsetA(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the DeformOffsetA of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDeformOffsetB">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDeformOffsetB</h2>
        <code>Scene.GetLayerDeformOffsetB(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the DeformOffsetB of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_LayerPropertyExists">
        <h2 style="margin-bottom: 8px;">Scene.LayerPropertyExists</h2>
        <code>Scene.LayerPropertyExists(layerIndex, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists in the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>property (String): Name of property to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetName">
        <h2 style="margin-bottom: 8px;">Scene.GetName</h2>
        <code>Scene.GetName()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the active scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetWidth">
        <h2 style="margin-bottom: 8px;">Scene.GetWidth</h2>
        <code>Scene.GetWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the scene (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetHeight">
        <h2 style="margin-bottom: 8px;">Scene.GetHeight</h2>
        <code>Scene.GetHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the scene (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerWidth">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerWidth</h2>
        <code>Scene.GetLayerWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of a layer index (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerHeight">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerHeight</h2>
        <code>Scene.GetLayerHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of a layer index (in tiles).</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerOffsetX">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerOffsetX</h2>
        <code>Scene.GetLayerOffsetX()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the X offset of a layer index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerOffsetY">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerOffsetY</h2>
        <code>Scene.GetLayerOffsetY()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the Y offset of a layer index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerDrawGroup">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerDrawGroup</h2>
        <code>Scene.GetLayerDrawGroup(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the draw group of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerHorizontalRepeat">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerHorizontalRepeat</h2>
        <code>Scene.GetLayerHorizontalRepeat(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the layer repeats horizontally.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetLayerVerticalRepeat">
        <h2 style="margin-bottom: 8px;">Scene.GetLayerVerticalRepeat</h2>
        <code>Scene.GetLayerVerticalRepeat(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the layer repeats vertically.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetCount">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetCount</h2>
        <code>Scene.GetTilesetCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of tilesets in the current scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetIndex">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetIndex</h2>
        <code>Scene.GetTilesetIndex(tilesetID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tileset index for the specified filename.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the tileset index, or <code>-1</code> if there is no tileset with said filename.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetName">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetName</h2>
        <code>Scene.GetTilesetName(tilesetIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tileset name for the specified tileset index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetIndex (Index): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetTileCount">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetTileCount</h2>
        <code>Scene.GetTilesetTileCount(tilesetID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tile count for the specified tileset.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetFirstTileID">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetFirstTileID</h2>
        <code>Scene.GetTilesetFirstTileID(tilesetID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the first tile index number for the specified tileset.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTilesetPaletteIndex">
        <h2 style="margin-bottom: 8px;">Scene.GetTilesetPaletteIndex</h2>
        <code>Scene.GetTilesetPaletteIndex(tilesetID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the palette index for the specified tileset.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileWidth">
        <h2 style="margin-bottom: 8px;">Scene.GetTileWidth</h2>
        <code>Scene.GetTileWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of tiles.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileHeight">
        <h2 style="margin-bottom: 8px;">Scene.GetTileHeight</h2>
        <code>Scene.GetTileHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of tiles.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileID">
        <h2 style="margin-bottom: 8px;">Scene.GetTileID</h2>
        <code>Scene.GetTileID(layer, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tile's index number at the tile coordinates.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer</li>
        <li>x (Number): X position (in tiles) of the tile</li>
        <li>y (Number): Y position (in tiles) of the tile</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileFlipX">
        <h2 style="margin-bottom: 8px;">Scene.GetTileFlipX</h2>
        <code>Scene.GetTileFlipX(layer, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the tile at the tile coordinates is flipped horizontally or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer</li>
        <li>x (Number): X position (in tiles) of the tile</li>
        <li>y (Number): Y position (in tiles) of the tile</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the tile's horizontally flipped.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileFlipY">
        <h2 style="margin-bottom: 8px;">Scene.GetTileFlipY</h2>
        <code>Scene.GetTileFlipY(layer, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the tile at the tile coordinates is flipped vertically or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Index of the layer</li>
        <li>x (Number): X position (in tiles) of the tile</li>
        <li>y (Number): Y position (in tiles) of the tile</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether the tile's vertically flipped.</div>
        </p>
        <p id="Reference_functions_Scene_GetDrawGroupCount">
        <h2 style="margin-bottom: 8px;">Scene.GetDrawGroupCount</h2>
        <code>Scene.GetDrawGroupCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of draw groups in the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetDrawGroupEntityDepthSorting">
        <h2 style="margin-bottom: 8px;">Scene.GetDrawGroupEntityDepthSorting</h2>
        <code>Scene.GetDrawGroupEntityDepthSorting(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets if the specified draw group sorts objects by depth.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): Number between 0 to the result of <code><a href="#Reference_functions_Scene_GetDrawGroupCount">Scene.GetDrawGroupCount</a></code>.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_GetListPos">
        <h2 style="margin-bottom: 8px;">Scene.GetListPos</h2>
        <code>Scene.GetListPos()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current list position of the scene. (Deprecated; use <code><a href="#Reference_globals_Scene_ListPos">Scene_ListPos</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentFolder">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentFolder</h2>
        <code>Scene.GetCurrentFolder()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current folder of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentID">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentID</h2>
        <code>Scene.GetCurrentID()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current ID of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentResourceFolder">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentResourceFolder</h2>
        <code>Scene.GetCurrentResourceFolder()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current resource folder of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentSpriteFolder">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentSpriteFolder</h2>
        <code>Scene.GetCurrentSpriteFolder()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current sprite folder of the scene. (Deprecated; use <code><a href="#Reference_functions_Scene_GetCurrentResourceFolder">Scene.GetCurrentResourceFolder</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCurrentCategory">
        <h2 style="margin-bottom: 8px;">Scene.GetCurrentCategory</h2>
        <code>Scene.GetCurrentCategory()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current category name of the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Scene_GetActiveCategory">
        <h2 style="margin-bottom: 8px;">Scene.GetActiveCategory</h2>
        <code>Scene.GetActiveCategory()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current category number of the scene. (Deprecated; use <code><a href="#Reference_globals_Scene_ActiveCategory">Scene_ActiveCategory</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetCategoryCount">
        <h2 style="margin-bottom: 8px;">Scene.GetCategoryCount</h2>
        <code>Scene.GetCategoryCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of categories in the scene list. (Deprecated; use <code><a href="#Reference_functions_SceneList_GetCategoryCount">SceneList.GetCategoryCount</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetStageCount">
        <h2 style="margin-bottom: 8px;">Scene.GetStageCount</h2>
        <code>Scene.GetStageCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of stages in the scene list. (Deprecated; use <code><a href="#Reference_functions_SceneList_GetSceneCount">SceneList.GetSceneCount</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetDebugMode">
        <h2 style="margin-bottom: 8px;">Scene.GetDebugMode</h2>
        <code>Scene.GetDebugMode()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether Debug Mode has been turned on in the current scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_Scene_GetFirstInstance">
        <h2 style="margin-bottom: 8px;">Scene.GetFirstInstance</h2>
        <code>Scene.GetFirstInstance()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the first active instance in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the first active instance in the scene, or <code>null</code> if there are no instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetLastInstance">
        <h2 style="margin-bottom: 8px;">Scene.GetLastInstance</h2>
        <code>Scene.GetLastInstance()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the last active instance in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the last active instance in the scene, or <code>null</code> if there are no instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetInstanceCount">
        <h2 style="margin-bottom: 8px;">Scene.GetInstanceCount</h2>
        <code>Scene.GetInstanceCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the count of instances currently in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetStaticInstanceCount">
        <h2 style="margin-bottom: 8px;">Scene.GetStaticInstanceCount</h2>
        <code>Scene.GetStaticInstanceCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the count of instances currently in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetDynamicInstanceCount">
        <h2 style="margin-bottom: 8px;">Scene.GetDynamicInstanceCount</h2>
        <code>Scene.GetDynamicInstanceCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the count of instances currently in the scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of instances in the scene.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimationEnabled">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimationEnabled</h2>
        <code>Scene.GetTileAnimationEnabled()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not tile animation is enabled.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns 0 if tile animation is disabled, 1 if it's enabled, and 2 if tiles animate even if the scene is paused.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequence">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequence</h2>
        <code>Scene.GetTileAnimSequence(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the tile IDs of the animation sequence for a tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): Which tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array of tile IDs.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequenceDurations">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequenceDurations</h2>
        <code>Scene.GetTileAnimSequenceDurations(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame durations of the animation sequence for a tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): Which tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array of frame durations.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequencePaused">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequencePaused</h2>
        <code>Scene.GetTileAnimSequencePaused(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns if a tile ID animation sequence is paused.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Whether the animation is paused.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequenceSpeed">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequenceSpeed</h2>
        <code>Scene.GetTileAnimSequenceSpeed(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the speed of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The frame speed.</div>
        </p>
        <p id="Reference_functions_Scene_GetTileAnimSequenceFrame">
        <h2 style="margin-bottom: 8px;">Scene.GetTileAnimSequenceFrame</h2>
        <code>Scene.GetTileAnimSequenceFrame(tileID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current frame of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The frame index.</div>
        </p>
        <p id="Reference_functions_Scene_IsCurrentEntryValid">
        <h2 style="margin-bottom: 8px;">Scene.IsCurrentEntryValid</h2>
        <code>Scene.IsCurrentEntryValid()</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the current entry in the scene list is valid.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_IsUsingFolder">
        <h2 style="margin-bottom: 8px;">Scene.IsUsingFolder</h2>
        <code>Scene.IsUsingFolder(folder)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the current scene's folder matches the string to check.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>folder (String): Folder name to compare.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_IsUsingID">
        <h2 style="margin-bottom: 8px;">Scene.IsUsingID</h2>
        <code>Scene.IsUsingID(id)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the current scene's ID matches the string to check.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>id (String): ID to compare.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_CheckValidScene">
        <h2 style="margin-bottom: 8px;">Scene.CheckValidScene</h2>
        <code>Scene.CheckValidScene()</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the scene list's position is within the list's size, if a scene list is loaded. (Deprecated; use <code><a href="#Reference_functions_Scene_IsCurrentEntryValid">Scene.IsCurrentEntryValid</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_CheckSceneFolder">
        <h2 style="margin-bottom: 8px;">Scene.CheckSceneFolder</h2>
        <code>Scene.CheckSceneFolder(folder)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the current scene's folder matches the string to check, if a scene list is loaded. (Deprecated; use <code><a href="#Reference_functions_Scene_IsUsingFolder">Scene.IsUsingFolder</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>folder (String): Folder name to compare.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_CheckSceneID">
        <h2 style="margin-bottom: 8px;">Scene.CheckSceneID</h2>
        <code>Scene.CheckSceneID(id)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether the current scene's ID matches the string to check, if a scene list is loaded. (Deprecated; use <code><a href="#Reference_functions_Scene_IsUsingID">Scene.IsUsingID</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>id (String): ID to compare.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_IsPaused">
        <h2 style="margin-bottom: 8px;">Scene.IsPaused</h2>
        <code>Scene.IsPaused()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the scene is paused.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Scene_SetListPos">
        <h2 style="margin-bottom: 8px;">Scene.SetListPos</h2>
        <code>Scene.SetListPos(sceneNum)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current list position of the scene. (Deprecated; use <code><a href="#Reference_globals_Scene_ListPos">Scene_ListPos</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sceneNum (Integer): Scene number to use.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetActiveCategory">
        <h2 style="margin-bottom: 8px;">Scene.SetActiveCategory</h2>
        <code>Scene.SetActiveCategory(categoryNum)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current category number of the scene. (Deprecated; use <code><a href="#Reference_globals_Scene_ActiveCategory">Scene_ActiveCategory</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>categoryNum (Integer): Scene category number to use.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetDebugMode">
        <h2 style="margin-bottom: 8px;">Scene.SetDebugMode</h2>
        <code>Scene.SetDebugMode()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether Debug Mode has been turned on in the current scene.</div>
        </p>
        <p id="Reference_functions_Scene_SetScene">
        <h2 style="margin-bottom: 8px;">Scene.SetScene</h2>
        <code>Scene.SetScene(category, scene)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the scene if the category and scene names exist within the scene list. (Deprecated; use <code><a href="#Reference_functions_Scene_Change">Scene.Change</a></code> instead.)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): Category name.</li>
        <li>scene (String): Scene name. If the scene name is not found but the category name is, the first scene in the category is used.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTile">
        <h2 style="margin-bottom: 8px;">Scene.SetTile</h2>
        <code>Scene.SetTile(layer, cellX, cellY, tileID, flipX, flipY[, collisionMaskA, collisionMaskB])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile at a position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Layer index.</li>
        <li>cellX (Number): Tile cell X.</li>
        <li>cellY (Number): Tile cell Y.</li>
        <li>tileID (Integer): Tile ID.</li>
        <li>flipX (Boolean): Whether to flip the tile horizontally or not.</li>
        <li>flipY (Boolean): Whether to flip the tile vertically or not.</li>
        <li>collisionMaskA (Integer): Collision mask to use for the tile on Plane A. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        <li>collisionMaskB (Integer): Collision mask to use for the tile on Plane B. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileCollisionSides">
        <h2 style="margin-bottom: 8px;">Scene.SetTileCollisionSides</h2>
        <code>Scene.SetTileCollisionSides(layer, cellX, cellY, collisionMaskA, collisionMaskB)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the collision of a tile at a position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layer (Integer): Layer index.</li>
        <li>cellX (Number): Tile cell X.</li>
        <li>cellY (Number): Tile cell Y.</li>
        <li>collisionMaskA (Integer): Collision mask to use for the tile on Plane A. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        <li>collisionMaskB (Integer): Collision mask to use for the tile on Plane B. (0: No collision, 1: Top-side collision only, 2: Left-right-bottom-side collision only, 3: All-side collision)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetPaused">
        <h2 style="margin-bottom: 8px;">Scene.SetPaused</h2>
        <code>Scene.SetPaused(isPaused)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether the game is paused or not. When paused, only objects with <code><a href="#Reference_fields_instance_Pauseable">instance.Pauseable</a></code> set to <code>false</code> will continue to <code>Update</code>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isPaused (Boolean): Whether or not the scene is paused.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimationEnabled">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimationEnabled</h2>
        <code>Scene.SetTileAnimationEnabled(isEnabled)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not tile animation is enabled.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isEnabled (Integer): 0 disables tile animation, 1 enables it, and 2 makes tiles animate even if the scene is paused.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequence">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequence</h2>
        <code>Scene.SetTileAnimSequence(tileID, tileIDs[, frameDurations])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets an animation sequence for a tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): Which tile ID to add an animated sequence to.</li>
        <li>tileIDs (Array): Tile ID list.</li>
        <li>frameDurations (Array): Frame duration list.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequenceFromSprite">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequenceFromSprite</h2>
        <code>Scene.SetTileAnimSequenceFromSprite(tileID, spriteIndex, animationIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets an animation sequence for a tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): Which tile ID to add an animated sequence to.</li>
        <li>spriteIndex (Integer): Sprite index. (<code>null</code> to disable)</li>
        <li>animationIndex (Integer): Animation index in sprite.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequencePaused">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequencePaused</h2>
        <code>Scene.SetTileAnimSequencePaused(tileID, isPaused)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        <li>isPaused (Boolean): Whether the animation is paused.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequenceSpeed">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequenceSpeed</h2>
        <code>Scene.SetTileAnimSequenceSpeed(tileID, speed)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the speed of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        <li>speed (Decimal): The frame speed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileAnimSequenceFrame">
        <h2 style="margin-bottom: 8px;">Scene.SetTileAnimSequenceFrame</h2>
        <code>Scene.SetTileAnimSequenceFrame(tileID, index)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the current frame of a tile ID animation sequence.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): The tile ID.</li>
        <li>index (Integer): The frame index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTilesetPaletteIndex">
        <h2 style="margin-bottom: 8px;">Scene.SetTilesetPaletteIndex</h2>
        <code>Scene.SetTilesetPaletteIndex(tilesetID, paletteIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the palette index of the specified tileset.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tilesetID (Integer): The tileset index.</li>
        <li>paletteIndex (Integer): The palette index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerVisible">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerVisible</h2>
        <code>Scene.SetLayerVisible(layerIndex, isVisible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the visibility of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>isVisible (Boolean): Whether or not the layer can be seen.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerCollidable">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerCollidable</h2>
        <code>Scene.SetLayerCollidable(layerIndex, isVisible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not the specified layer's tiles can be collided with.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>isVisible (Boolean): Whether or not the layer can be collided with.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerInternalSize">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerInternalSize</h2>
        <code>Scene.SetLayerInternalSize()</code>
        <div style="margin-top: 8px; font-size: 14px;">Do not use this.</div>
        </p>
        <p id="Reference_functions_Scene_SetLayerOffsetPosition">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOffsetPosition</h2>
        <code>Scene.SetLayerOffsetPosition(layerIndex, offsetX, offsetY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the camera offset position of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>offsetX (Number): Offset X position.</li>
        <li>offsetY (Number): Offset Y position.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerOffsetX">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOffsetX</h2>
        <code>Scene.SetLayerOffsetX(layerIndex, offsetX)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the camera offset X value of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>offsetX (Number): Offset X position.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerOffsetY">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOffsetY</h2>
        <code>Scene.SetLayerOffsetY(layerIndex, offsetY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the camera offset Y value of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>offsetY (Number): Offset Y position.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDrawGroup">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDrawGroup</h2>
        <code>Scene.SetLayerDrawGroup(layerIndex, drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the draw group of the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>drawGroup (Integer): Number between 0 to the result of <code><a href="#Reference_functions_Scene_GetDrawGroupCount">Scene.GetDrawGroupCount</a></code>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDrawBehavior">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDrawBehavior</h2>
        <code>Scene.SetLayerDrawBehavior(layerIndex, drawBehavior)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the parallax direction of the layer. See <code><a href="#Reference_DrawBehavior_*">DrawBehavior_*</a></code> for a list of accepted draw behaviors.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>drawBehavior (Enum): The <a href="#Reference_DrawBehavior_*">draw behavior</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerRepeat">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerRepeat</h2>
        <code>Scene.SetLayerRepeat(layerIndex, doesRepeat)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not the specified layer repeats.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>doesRepeat (Boolean): Whether or not the layer repeats.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerHorizontalRepeat">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerHorizontalRepeat</h2>
        <code>Scene.SetLayerHorizontalRepeat(layerIndex, doesRepeat)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not the specified layer repeats horizontally.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>doesRepeat (Boolean): Whether or not the layer repeats horizontally.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerVerticalRepeat">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerVerticalRepeat</h2>
        <code>Scene.SetLayerVerticalRepeat(layerIndex, doesRepeat)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not the specified layer repeats vertically.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>doesRepeat (Boolean): Whether or not the layer repeats vertically.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetDrawGroupCount">
        <h2 style="margin-bottom: 8px;">Scene.SetDrawGroupCount</h2>
        <code>Scene.SetDrawGroupCount(count)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the amount of draw groups in the active scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>count (Integer): Draw group count.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetDrawGroupEntityDepthSorting">
        <h2 style="margin-bottom: 8px;">Scene.SetDrawGroupEntityDepthSorting</h2>
        <code>Scene.SetDrawGroupEntityDepthSorting(drawGroup, useEntityDepth)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified draw group to sort objects by depth.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): Number between 0 to the result of <code><a href="#Reference_functions_Scene_GetDrawGroupCount">Scene.GetDrawGroupCount</a></code>.</li>
        <li>useEntityDepth (Boolean): Whether or not to sort objects by depth.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerBlend">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerBlend</h2>
        <code>Scene.SetLayerBlend(layerIndex, doBlend[, blendMode])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not to use color and alpha blending on this layer. See <code><a href="#Reference_BlendMode_*">BlendMode_*</a></code> for a list of accepted blend modes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>doBlend (Boolean): Whether or not to use blending.</li>
        <li>blendMode (Enum): The desired <a href="#Reference_BlendMode_*">blend mode</a>.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerOpacity">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerOpacity</h2>
        <code>Scene.SetLayerOpacity(layerIndex, opacity)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the opacity of the layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>opacity (Decimal): Opacity from 0.0 to 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerUsePaletteIndexLines">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerUsePaletteIndexLines</h2>
        <code>Scene.SetLayerUsePaletteIndexLines(layerIndex, usePaletteIndexLines)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables the use of the global palette index table for the specified layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>usePaletteIndexLines (Boolean): Whether the layer is using the global palette index table.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerScroll">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerScroll</h2>
        <code>Scene.SetLayerScroll(layerIndex, relative, constant)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the scroll values of the layer. (Horizontal Parallax = Up/Down values, Vertical Parallax = Left/Right values)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>relative (Decimal): How much to move the layer relative to the camera. (0.0 = no movement, 1.0 = moves opposite to speed of camera, 2.0 = moves twice the speed opposite to camera)</li>
        <li>constant (Decimal): How many pixels to move the layer per frame.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerSetParallaxLinesBegin">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerSetParallaxLinesBegin</h2>
        <code>Scene.SetLayerSetParallaxLinesBegin(layerIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Begins setup for changing the parallax lines.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerSetParallaxLines">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerSetParallaxLines</h2>
        <code>Scene.SetLayerSetParallaxLines(lineStart, lineEnd, relative, constant, canDeform)</code>
        <div style="margin-top: 8px; font-size: 14px;">Set the parallax lines.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>lineStart (Integer): Start line.</li>
        <li>lineEnd (Integer): End line.</li>
        <li>relative (Number): How much to move the scroll line relative to the camera. (0.0 = no movement, 1.0 = moves opposite to speed of camera, 2.0 = moves twice the speed opposite to camera)</li>
        <li>constant (Number): How many pixels to move the layer per frame.</li>
        <li>canDeform (Boolean): Whether the parallax lines can be deformed.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerSetParallaxLinesEnd">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerSetParallaxLinesEnd</h2>
        <code>Scene.SetLayerSetParallaxLinesEnd()</code>
        <div style="margin-top: 8px; font-size: 14px;">Ends setup for changing the parallax lines and submits the changes.</div>
        </p>
        <p id="Reference_functions_Scene_SetLayerTileDeforms">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerTileDeforms</h2>
        <code>Scene.SetLayerTileDeforms(layerIndex, deformIndex, deformA, deformB)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile deforms of the layer at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformIndex (Integer): Index of deform value.</li>
        <li>deformA (Number): Deform value above the Deform Split Line.</li>
        <li>deformB (Number): Deform value below the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerTileDeformSplitLine">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerTileDeformSplitLine</h2>
        <code>Scene.SetLayerTileDeformSplitLine(layerIndex, deformPosition)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the Deform Split Line.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformPosition (Number): The position on screen where the Deform Split Line should be. (Y when horizontal parallax, X when vertical.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerTileDeformOffsets">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerTileDeformOffsets</h2>
        <code>Scene.SetLayerTileDeformOffsets(layerIndex, deformAOffset, deformBOffset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the Deform Split Line.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformAOffset (Number): Offset for the deforms above the Deform Split Line.</li>
        <li>deformBOffset (Number): Offset for the deforms below the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDeformOffsetA">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDeformOffsetA</h2>
        <code>Scene.SetLayerDeformOffsetA(layerIndex, deformA)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile deform offset A of the layer at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformA (Number): Deform value above the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerDeformOffsetB">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerDeformOffsetB</h2>
        <code>Scene.SetLayerDeformOffsetB(layerIndex, deformA)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile deform offset B of the layer at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>deformA (Number): Deform value below the Deform Split Line.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerCustomScanlineFunction">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerCustomScanlineFunction</h2>
        <code>Scene.SetLayerCustomScanlineFunction(layerIndex, function)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the function to be used for generating custom tile scanlines.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>function (Function): Function to be used before tile drawing for generating scanlines. (Use <code>null</code> to reset functionality.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileScanline">
        <h2 style="margin-bottom: 8px;">Scene.SetTileScanline</h2>
        <code>Scene.SetTileScanline(scanline, srcX, srcY, deltaX, deltaY[, opacity, maxHorzCells, maxVertCells])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the tile scanline (for use only inside a Custom Scanline Function).</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scanline (Integer): Index of scanline to edit.</li>
        <li>srcX (Number):</li>
        <li>srcY (Number):</li>
        <li>deltaX (Number):</li>
        <li>deltaY (Number):</li>
        <li>opacity (Decimal):</li>
        <li>maxHorzCells (Number):</li>
        <li>maxVertCells (Number):</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetLayerCustomRenderFunction">
        <h2 style="margin-bottom: 8px;">Scene.SetLayerCustomRenderFunction</h2>
        <code>Scene.SetLayerCustomRenderFunction(layerIndex, function)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the function to be used for rendering a specific layer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>layerIndex (Integer): Index of layer.</li>
        <li>function (Function): Function to call to render the layer. (Use <code>null</code> to reset functionality.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetObjectViewRender">
        <h2 style="margin-bottom: 8px;">Scene.SetObjectViewRender</h2>
        <code>Scene.SetObjectViewRender(viewIndex, enableViewRender)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not objects can render on the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>enableViewRender (Boolean):</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene_SetTileViewRender">
        <h2 style="margin-bottom: 8px;">Scene.SetTileViewRender</h2>
        <code>Scene.SetTileViewRender(viewIndex, enableViewRender)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether or not tiles can render on the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>enableViewRender (Boolean):</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_Create">
        <h2 style="margin-bottom: 8px;">Scene3D.Create</h2>
        <code>Scene3D.Create(unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>unloadPolicy (Integer): Whether or not to delete the 3D scene at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The index of the created 3D scene.</div>
        </p>
        <p id="Reference_functions_Scene3D_Delete">
        <h2 style="margin-bottom: 8px;">Scene3D.Delete</h2>
        <code>Scene3D.Delete(scene3DIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deletes a 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene to delete.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetDrawMode">
        <h2 style="margin-bottom: 8px;">Scene3D.SetDrawMode</h2>
        <code>Scene3D.SetDrawMode(scene3DIndex, drawMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_DrawMode_*">draw mode</a> of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>drawMode (Enum): The type of drawing to use for the vertices in the 3D scene. See <code><a href="#Reference_DrawMode_*">DrawMode_*</a></code> for a list of accepted draw modes.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFaceCullMode">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFaceCullMode</h2>
        <code>Scene3D.SetFaceCullMode(scene3DIndex, cullMode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_FaceCull_*">face culling mode</a> of the 3D scene. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>cullMode (Enum): The type of face culling to use for the vertices in the 3D scene. See <code><a href="#Reference_FaceCull_*">FaceCull_*</a></code> for a list of accepted face cull modes.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFieldOfView">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFieldOfView</h2>
        <code>Scene3D.SetFieldOfView(scene3DIndex, fieldOfView)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the field of view of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>fieldOfView (Matrix): The field of view value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFarClippingPlane">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFarClippingPlane</h2>
        <code>Scene3D.SetFarClippingPlane(scene3DIndex, farClippingPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the far clipping plane of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>farClippingPlane (Matrix): The far clipping plane value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetNearClippingPlane">
        <h2 style="margin-bottom: 8px;">Scene3D.SetNearClippingPlane</h2>
        <code>Scene3D.SetNearClippingPlane(scene3DIndex, farClippingPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the near clipping plane of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>farClippingPlane (Matrix): The near clipping plane value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetViewMatrix">
        <h2 style="margin-bottom: 8px;">Scene3D.SetViewMatrix</h2>
        <code>Scene3D.SetViewMatrix(scene3DIndex, viewMatrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the view matrix of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>viewMatrix (Matrix): The view matrix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetCustomProjectionMatrix">
        <h2 style="margin-bottom: 8px;">Scene3D.SetCustomProjectionMatrix</h2>
        <code>Scene3D.SetCustomProjectionMatrix(scene3DIndex, projMatrix)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a custom projection matrix.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>projMatrix (Matrix): The projection matrix.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetAmbientLighting">
        <h2 style="margin-bottom: 8px;">Scene3D.SetAmbientLighting</h2>
        <code>Scene3D.SetAmbientLighting(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the ambient lighting of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetDiffuseLighting">
        <h2 style="margin-bottom: 8px;">Scene3D.SetDiffuseLighting</h2>
        <code>Scene3D.SetDiffuseLighting(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the diffuse lighting of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetSpecularLighting">
        <h2 style="margin-bottom: 8px;">Scene3D.SetSpecularLighting</h2>
        <code>Scene3D.SetSpecularLighting(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specular lighting of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogEquation">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogEquation</h2>
        <code>Scene3D.SetFogEquation(scene3DIndex, fogEquation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the <a href="#Reference_FogEquation_*">fog equation</a> of the 3D scene. (software-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>fogEquation (Enum): The <a href="#Reference_FogEquation_*">fog equation</a> to use.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogStart">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogStart</h2>
        <code>Scene3D.SetFogStart(scene3DIndex, start)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the near distance used in the linear equation of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>start (Number): The start value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogEnd">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogEnd</h2>
        <code>Scene3D.SetFogEnd(scene3DIndex, end)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the far distance used in the linear equation of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>end (Number): The end value.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogDensity">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogDensity</h2>
        <code>Scene3D.SetFogDensity(scene3DIndex, density)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the density used in the exponential equation of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>density (Number): The fog density.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogColor">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogColor</h2>
        <code>Scene3D.SetFogColor(scene3DIndex, red, green, blue)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the fog color of the 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>red (Number): The red color value, bounded by 0.0 - 1.0.</li>
        <li>green (Number): The green color value, bounded by 0.0 - 1.0.</li>
        <li>blue (Number): The blue color value, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetFogSmoothness">
        <h2 style="margin-bottom: 8px;">Scene3D.SetFogSmoothness</h2>
        <code>Scene3D.SetFogSmoothness(scene3DIndex, smoothness)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the smoothness of the 3D scene's fog.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>smoothness (Number): The smoothness, bounded by 0.0 - 1.0.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_SetPointSize">
        <h2 style="margin-bottom: 8px;">Scene3D.SetPointSize</h2>
        <code>Scene3D.SetPointSize(scene3DIndex, pointSize)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the point size of the 3D scene. (hardware-renderer only)</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        <li>pointSize (Decimal): The point size.</li>
        </ul>
        </p>
        <p id="Reference_functions_Scene3D_Clear">
        <h2 style="margin-bottom: 8px;">Scene3D.Clear</h2>
        <code>Scene3D.Clear(scene3DIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes all previously drawn elements out of a 3D scene.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>scene3DIndex (Integer): The index of the 3D scene.</li>
        </ul>
        </p>
        <p id="Reference_functions_SceneList_Get">
        <h2 style="margin-bottom: 8px;">SceneList.Get</h2>
        <code>SceneList.Get(category, entry)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the scene path for the specified category and entry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): The category.</li>
        <li>entry (String): The entry.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_SceneList_GetEntryID">
        <h2 style="margin-bottom: 8px;">SceneList.GetEntryID</h2>
        <code>SceneList.GetEntryID(categoryName, entryName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the entry ID for the specified category and entry name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>categoryName (String): The category name.</li>
        <li>entryName (String): The entry name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the entry ID, or <code>-1</code> if not found.</div>
        </p>
        <p id="Reference_functions_SceneList_GetCategoryID">
        <h2 style="margin-bottom: 8px;">SceneList.GetCategoryID</h2>
        <code>SceneList.GetCategoryID(categoryName)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the category ID for the specified category name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>categoryName (String): The category name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the category ID, or <code>-1</code> if not found.</div>
        </p>
        <p id="Reference_functions_SceneList_GetEntryName">
        <h2 style="margin-bottom: 8px;">SceneList.GetEntryName</h2>
        <code>SceneList.GetEntryName(category, entryID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the entry name for the specified category and entry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): The category.</li>
        <li>entryID (Integer): The entry ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the entry name.</div>
        </p>
        <p id="Reference_functions_SceneList_GetCategoryName">
        <h2 style="margin-bottom: 8px;">SceneList.GetCategoryName</h2>
        <code>SceneList.GetCategoryName(categoryID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the category name for the specified category ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>categoryID (Integer): The category ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the category name, or <code>-1</code> if not valid.</div>
        </p>
        <p id="Reference_functions_SceneList_GetEntryProperty">
        <h2 style="margin-bottom: 8px;">SceneList.GetEntryProperty</h2>
        <code>SceneList.GetEntryProperty(category, entry, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property for an entry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): The category.</li>
        <li>entry (String): The entry.</li>
        <li>property (String): The property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value, or <code>null</code> if the entry has no such property.</div>
        </p>
        <p id="Reference_functions_SceneList_GetCategoryProperty">
        <h2 style="margin-bottom: 8px;">SceneList.GetCategoryProperty</h2>
        <code>SceneList.GetCategoryProperty(category, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property for a category.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): The category.</li>
        <li>property (String): The property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value, or <code>null</code> if the category has no such property.</div>
        </p>
        <p id="Reference_functions_SceneList_HasEntryProperty">
        <h2 style="margin-bottom: 8px;">SceneList.HasEntryProperty</h2>
        <code>SceneList.HasEntryProperty(category, entry, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a given property exists in the entry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): The category.</li>
        <li>entry (String): The entry.</li>
        <li>property (String): The property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the property exists, <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_SceneList_HasCategoryProperty">
        <h2 style="margin-bottom: 8px;">SceneList.HasCategoryProperty</h2>
        <code>SceneList.HasCategoryProperty(category, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a given property exists in the category.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>category (String): The category.</li>
        <li>property (String): The property.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the property exists, <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_SceneList_GetCategoryCount">
        <h2 style="margin-bottom: 8px;">SceneList.GetCategoryCount</h2>
        <code>SceneList.GetCategoryCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of categories in the scene list.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_SceneList_GetSceneCount">
        <h2 style="margin-bottom: 8px;">SceneList.GetSceneCount</h2>
        <code>SceneList.GetSceneCount([categoryName])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of scenes in a category.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>categoryName (String): The category name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the number of scenes in the category. If <code>categoryName</code> is omitted, this returns the total amount of scenes in the entire list.</div>
        </p>
        <p id="Reference_functions_Serializer_WriteToStream">
        <h2 style="margin-bottom: 8px;">Serializer.WriteToStream</h2>
        <code>Serializer.WriteToStream(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Serializes a value into a stream.<br/></br>Supported types:<ul><li>Integer</li><li>Decimal</li><li><code>null</code></li><li>String</li><li>Array</li><li>Map</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (any type): The value to serialize.</li>
        </ul>
        </p>
        <p id="Reference_functions_Serializer_ReadFromStream">
        <h2 style="margin-bottom: 8px;">Serializer.ReadFromStream</h2>
        <code>Serializer.ReadFromStream(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deserializes a value from a stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The deserialized value.</div>
        </p>
        <p id="Reference_functions_Settings_Load">
        <h2 style="margin-bottom: 8px;">Settings.Load</h2>
        <code>Settings.Load(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Loads the config from the specified filename. Calling this does not save the current settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filepath of config.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_Save">
        <h2 style="margin-bottom: 8px;">Settings.Save</h2>
        <code>Settings.Save([filename])</code>
        <div style="margin-top: 8px; font-size: 14px;">Saves the settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filepath of config. This does not change the filepath of the current settings (Use <code><a href="#Reference_functions_Settings_SetFilename">Settings.SetFilename</a></code> to do that.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetFilename">
        <h2 style="margin-bottom: 8px;">Settings.SetFilename</h2>
        <code>Settings.SetFilename(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the filepath of the settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filepath of config. This does not save the current settings.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_GetString">
        <h2 style="margin-bottom: 8px;">Settings.GetString</h2>
        <code>Settings.GetString(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as a string.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as a string, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_GetNumber">
        <h2 style="margin-bottom: 8px;">Settings.GetNumber</h2>
        <code>Settings.GetNumber(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as a number.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as a number, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_GetInteger">
        <h2 style="margin-bottom: 8px;">Settings.GetInteger</h2>
        <code>Settings.GetInteger(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as an integer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as an integer, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_GetBool">
        <h2 style="margin-bottom: 8px;">Settings.GetBool</h2>
        <code>Settings.GetBool(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Looks for a property in a section, and returns its value, as a boolean.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to look for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property as a boolean, or <code>null</code> if the section or property aren't valid.</div>
        </p>
        <p id="Reference_functions_Settings_SetString">
        <h2 style="margin-bottom: 8px;">Settings.SetString</h2>
        <code>Settings.SetString(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to a string value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (String): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetNumber">
        <h2 style="margin-bottom: 8px;">Settings.SetNumber</h2>
        <code>Settings.SetNumber(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to a Decimal value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (Number): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetInteger">
        <h2 style="margin-bottom: 8px;">Settings.SetInteger</h2>
        <code>Settings.SetInteger(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to an integer value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (Integer): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SetBool">
        <h2 style="margin-bottom: 8px;">Settings.SetBool</h2>
        <code>Settings.SetBool(section, property, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets a property in a section to a boolean value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If the section doesn't exist, it will be created. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to set.</li>
        <li>value (Boolean): The value of the property.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_AddSection">
        <h2 style="margin-bottom: 8px;">Settings.AddSection</h2>
        <code>Settings.AddSection(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Creates a section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section name.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_RemoveSection">
        <h2 style="margin-bottom: 8px;">Settings.RemoveSection</h2>
        <code>Settings.RemoveSection(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes a section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section name.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_SectionExists">
        <h2 style="margin-bottom: 8px;">Settings.SectionExists</h2>
        <code>Settings.SectionExists(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a section exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the section exists, <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Settings_GetSectionCount">
        <h2 style="margin-bottom: 8px;">Settings.GetSectionCount</h2>
        <code>Settings.GetSectionCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many sections exist in the settings.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The total section count, as an integer.</div>
        </p>
        <p id="Reference_functions_Settings_PropertyExists">
        <h2 style="margin-bottom: 8px;">Settings.PropertyExists</h2>
        <code>Settings.PropertyExists(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the property exists, <code>false</code> if not.</div>
        </p>
        <p id="Reference_functions_Settings_RemoveProperty">
        <h2 style="margin-bottom: 8px;">Settings.RemoveProperty</h2>
        <code>Settings.RemoveProperty(section, property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes a property from a section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section where the property resides. If this is <code>null</code>, the global section is used instead.</li>
        <li>property (String): The property to remove.</li>
        </ul>
        </p>
        <p id="Reference_functions_Settings_GetPropertyCount">
        <h2 style="margin-bottom: 8px;">Settings.GetPropertyCount</h2>
        <code>Settings.GetPropertyCount(section)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns how many properties exist in the section.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>section (String): The section. If this is <code>null</code>, the global section is used instead.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The total section count, as an integer.</div>
        </p>
        <p id="Reference_functions_Shader_Set">
        <h2 style="margin-bottom: 8px; color: red;">Shader.Set</h2>
        <code>Shader.Set()</code>
        </p>
        <p id="Reference_functions_Shader_Unset">
        <h2 style="margin-bottom: 8px; color: red;">Shader.Unset</h2>
        <code>Shader.Unset()</code>
        </p>
        <p id="Reference_functions_SocketClient_Open">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.Open</h2>
        <code>SocketClient.Open()</code>
        </p>
        <p id="Reference_functions_SocketClient_Close">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.Close</h2>
        <code>SocketClient.Close()</code>
        </p>
        <p id="Reference_functions_SocketClient_IsOpen">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.IsOpen</h2>
        <code>SocketClient.IsOpen()</code>
        </p>
        <p id="Reference_functions_SocketClient_Poll">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.Poll</h2>
        <code>SocketClient.Poll()</code>
        </p>
        <p id="Reference_functions_SocketClient_BytesToRead">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.BytesToRead</h2>
        <code>SocketClient.BytesToRead()</code>
        </p>
        <p id="Reference_functions_SocketClient_ReadDecimal">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.ReadDecimal</h2>
        <code>SocketClient.ReadDecimal()</code>
        </p>
        <p id="Reference_functions_SocketClient_ReadInteger">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.ReadInteger</h2>
        <code>SocketClient.ReadInteger()</code>
        </p>
        <p id="Reference_functions_SocketClient_ReadString">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.ReadString</h2>
        <code>SocketClient.ReadString()</code>
        </p>
        <p id="Reference_functions_SocketClient_WriteDecimal">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.WriteDecimal</h2>
        <code>SocketClient.WriteDecimal()</code>
        </p>
        <p id="Reference_functions_SocketClient_WriteInteger">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.WriteInteger</h2>
        <code>SocketClient.WriteInteger()</code>
        </p>
        <p id="Reference_functions_SocketClient_WriteString">
        <h2 style="margin-bottom: 8px; color: red;">SocketClient.WriteString</h2>
        <code>SocketClient.WriteString()</code>
        </p>
        <p id="Reference_functions_Sound_Play">
        <h2 style="margin-bottom: 8px;">Sound.Play</h2>
        <code>Sound.Play(sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound once.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_functions_Sound_Loop">
        <h2 style="margin-bottom: 8px;">Sound.Loop</h2>
        <code>Sound.Loop(sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound, looping back when it ends.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_functions_Sound_Stop">
        <h2 style="margin-bottom: 8px;">Sound.Stop</h2>
        <code>Sound.Stop(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops an actively playing sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to stop.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_Pause">
        <h2 style="margin-bottom: 8px;">Sound.Pause</h2>
        <code>Sound.Pause(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses an actively playing sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to pause.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_Resume">
        <h2 style="margin-bottom: 8px;">Sound.Resume</h2>
        <code>Sound.Resume(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Unpauses a paused sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to resume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_StopAll">
        <h2 style="margin-bottom: 8px;">Sound.StopAll</h2>
        <code>Sound.StopAll()</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops all actively playing sounds.</div>
        </p>
        <p id="Reference_functions_Sound_PauseAll">
        <h2 style="margin-bottom: 8px;">Sound.PauseAll</h2>
        <code>Sound.PauseAll()</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses all actively playing sounds.</div>
        </p>
        <p id="Reference_functions_Sound_ResumeAll">
        <h2 style="margin-bottom: 8px;">Sound.ResumeAll</h2>
        <code>Sound.ResumeAll()</code>
        <div style="margin-top: 8px; font-size: 14px;">Resumes all actively playing sounds.</div>
        </p>
        <p id="Reference_functions_Sound_IsPlaying">
        <h2 style="margin-bottom: 8px;">Sound.IsPlaying</h2>
        <code>Sound.IsPlaying(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether a sound is currently playing or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Sound_PlayMultiple">
        <h2 style="margin-bottom: 8px;">Sound.PlayMultiple</h2>
        <code>Sound.PlayMultiple(sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound once, without interrupting channels playing the same sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_functions_Sound_LoopMultiple">
        <h2 style="margin-bottom: 8px;">Sound.LoopMultiple</h2>
        <code>Sound.LoopMultiple(sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound, looping back when it ends, without interrupting channels playing the same sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_functions_Sound_PlayAtChannel">
        <h2 style="margin-bottom: 8px;">Sound.PlayAtChannel</h2>
        <code>Sound.PlayAtChannel(channel, sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound at the specified channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index.</li>
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_LoopAtChannel">
        <h2 style="margin-bottom: 8px;">Sound.LoopAtChannel</h2>
        <code>Sound.LoopAtChannel(channel, sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound at the specified channel, looping back when it ends.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index.</li>
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_StopChannel">
        <h2 style="margin-bottom: 8px;">Sound.StopChannel</h2>
        <code>Sound.StopChannel(channel)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops a channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to stop.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_PauseChannel">
        <h2 style="margin-bottom: 8px;">Sound.PauseChannel</h2>
        <code>Sound.PauseChannel(channel)</code>
        <div style="margin-top: 8px; font-size: 14px;">Pauses a channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to pause.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_ResumeChannel">
        <h2 style="margin-bottom: 8px;">Sound.ResumeChannel</h2>
        <code>Sound.ResumeChannel(channel)</code>
        <div style="margin-top: 8px; font-size: 14px;">Unpauses a paused channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to resume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_AlterChannel">
        <h2 style="margin-bottom: 8px;">Sound.AlterChannel</h2>
        <code>Sound.AlterChannel(channel, panning, speed, volume)</code>
        <div style="margin-top: 8px; font-size: 14px;">Alters the playback conditions of the specified channel.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>channel (Integer): The channel index to resume.</li>
        <li>panning (Decimal): Control the panning of the sound. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it.</li>
        <li>speed (Decimal): Control the speed of the sound. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed.</li>
        <li>volume (Decimal): Controls the volume of the sound. 0.0 is muted, 1.0 is normal volume.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sound_GetFreeChannel">
        <h2 style="margin-bottom: 8px;">Sound.GetFreeChannel</h2>
        <code>Sound.GetFreeChannel()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the first channel index that is not currently playing any sound.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the available channel index, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_functions_Sound_IsChannelFree">
        <h2 style="margin-bottom: 8px;">Sound.IsChannelFree</h2>
        <code>Sound.IsChannelFree(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks whether a channel is currently playing any sound or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The channel index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sprite_GetAnimationCount">
        <h2 style="margin-bottom: 8px;">Sprite.GetAnimationCount</h2>
        <code>Sprite.GetAnimationCount(sprite)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of animations in the sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the amount of animations in the sprite.</div>
        </p>
        <p id="Reference_functions_Sprite_GetAnimationName">
        <h2 style="margin-bottom: 8px;">Sprite.GetAnimationName</h2>
        <code>Sprite.GetAnimationName(sprite, animationIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the name of the specified animation index in the sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animationIndex (Integer): The animation index.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the name of the specified animation index.</div>
        </p>
        <p id="Reference_functions_Sprite_GetAnimationIndexByName">
        <h2 style="margin-bottom: 8px;">Sprite.GetAnimationIndexByName</h2>
        <code>Sprite.GetAnimationIndexByName(sprite, name)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the first animation in the sprite which matches the specified name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>name (String): The animation name to search for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the first animation index with the specified name, or -1 if there was no match.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameLoopIndex">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameLoopIndex</h2>
        <code>Sprite.GetFrameLoopIndex(sprite, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the index of the frame that the specified animation will loop back to when it finishes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame loop index.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameCount">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameCount</h2>
        <code>Sprite.GetFrameCount(sprite, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the amount of frames in the specified animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame count in the specified animation.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameDuration">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameDuration</h2>
        <code>Sprite.GetFrameDuration(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame duration of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame duration (in game frames) of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameSpeed">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameSpeed</h2>
        <code>Sprite.GetFrameSpeed(sprite, animation)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the animation speed of the specified animation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameWidth">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameWidth</h2>
        <code>Sprite.GetFrameWidth(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame width of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame width (in pixels) of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameHeight">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameHeight</h2>
        <code>Sprite.GetFrameHeight(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame height of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame height (in pixels) of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameID">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameID</h2>
        <code>Sprite.GetFrameID(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the frame ID of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the frame ID of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameOffsetX">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameOffsetX</h2>
        <code>Sprite.GetFrameOffsetX(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the X offset of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the X offset of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameOffsetY">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameOffsetY</h2>
        <code>Sprite.GetFrameOffsetY(sprite, animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the Y offset of the specified sprite frame.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animation (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the Y offset of the specified sprite frame.</div>
        </p>
        <p id="Reference_functions_Sprite_GetFrameHitbox">
        <h2 style="margin-bottom: 8px;">Sprite.GetFrameHitbox</h2>
        <code>Sprite.GetFrameHitbox(sprite, animationID, frame, hitboxID)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the hitbox of an animation and frame of a sprite.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index to check.</li>
        <li>animationID (Integer): The animation index of the sprite to check.</li>
        <li>frame (Integer): The frame index of the animation to check.</li>
        <li>hitboxID (Integer): The index number of the hitbox.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a reference value to a hitbox array.</div>
        </p>
        <p id="Reference_functions_Sprite_MakePalettized">
        <h2 style="margin-bottom: 8px;">Sprite.MakePalettized</h2>
        <code>Sprite.MakePalettized(sprite, paletteIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a sprite's colors to the ones in the specified palette index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index.</li>
        <li>paletteIndex (Integer): The palette index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Sprite_MakeNonPalettized">
        <h2 style="margin-bottom: 8px;">Sprite.MakeNonPalettized</h2>
        <code>Sprite.MakeNonPalettized(sprite)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes a sprite's palette.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Integer): The sprite index.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_FromResource">
        <h2 style="margin-bottom: 8px;">Stream.FromResource</h2>
        <code>Stream.FromResource(filename)</code>
        <div style="margin-top: 8px; font-size: 14px;">Opens a stream from a resource.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Filename of the resource.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the newly opened stream.</div>
        </p>
        <p id="Reference_functions_Stream_FromFile">
        <h2 style="margin-bottom: 8px;">Stream.FromFile</h2>
        <code>Stream.FromFile(filename, mode)</code>
        <div style="margin-top: 8px; font-size: 14px;">Opens a stream from a file. See <code><a href="#Reference_FileStream_*">FileStream_*</a></code> for a list of accepted file access modes.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>filename (String): Path of the file.</li>
        <li>mode (Enum): <a href="#Reference_FileStream_*">File access mode</a>.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the newly opened stream.</div>
        </p>
        <p id="Reference_functions_Stream_Close">
        <h2 style="margin-bottom: 8px;">Stream.Close</h2>
        <code>Stream.Close(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Closes a stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to close.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_Seek">
        <h2 style="margin-bottom: 8px;">Stream.Seek</h2>
        <code>Stream.Seek(stream, offset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Seeks a stream, relative to the start of the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to seek.</li>
        <li>offset (Integer): Offset to seek to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_SeekEnd">
        <h2 style="margin-bottom: 8px;">Stream.SeekEnd</h2>
        <code>Stream.SeekEnd(stream, offset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Seeks a stream, relative to the end.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to seek.</li>
        <li>offset (Integer): Offset to seek to.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_Skip">
        <h2 style="margin-bottom: 8px;">Stream.Skip</h2>
        <code>Stream.Skip(stream, offset)</code>
        <div style="margin-top: 8px; font-size: 14px;">Seeks a stream, relative to the current position.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream to skip.</li>
        <li>offset (Integer): How many bytes to skip.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_Position">
        <h2 style="margin-bottom: 8px;">Stream.Position</h2>
        <code>Stream.Position(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the current position of the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The current position of the stream.</div>
        </p>
        <p id="Reference_functions_Stream_Length">
        <h2 style="margin-bottom: 8px;">Stream.Length</h2>
        <code>Stream.Length(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Returns the length of the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The length of the stream.</div>
        </p>
        <p id="Reference_functions_Stream_ReadByte">
        <h2 style="margin-bottom: 8px;">Stream.ReadByte</h2>
        <code>Stream.ReadByte(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 8-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 8-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt16">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt16</h2>
        <code>Stream.ReadUInt16(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt16BE</h2>
        <code>Stream.ReadUInt16BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned big-endian 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned big-endian 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt32">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt32</h2>
        <code>Stream.ReadUInt32(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt32BE</h2>
        <code>Stream.ReadUInt32BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned big-endian 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned big-endian 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadUInt64">
        <h2 style="margin-bottom: 8px;">Stream.ReadUInt64</h2>
        <code>Stream.ReadUInt64(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads an unsigned 64-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an unsigned 64-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt16">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt16</h2>
        <code>Stream.ReadInt16(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt16BE</h2>
        <code>Stream.ReadInt16BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed big-endian 16-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed big-endian 16-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt32">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt32</h2>
        <code>Stream.ReadInt32(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt32BE</h2>
        <code>Stream.ReadInt32BE(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed big-endian 32-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed big-endian 32-bit number as an Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadInt64">
        <h2 style="margin-bottom: 8px;">Stream.ReadInt64</h2>
        <code>Stream.ReadInt64(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a signed 64-bit number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a signed 64-bit Integer value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadFloat">
        <h2 style="margin-bottom: 8px;">Stream.ReadFloat</h2>
        <code>Stream.ReadFloat(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a floating point number from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadString">
        <h2 style="margin-bottom: 8px;">Stream.ReadString</h2>
        <code>Stream.ReadString(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a null-terminated string from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Stream_ReadLine">
        <h2 style="margin-bottom: 8px;">Stream.ReadLine</h2>
        <code>Stream.ReadLine(stream)</code>
        <div style="margin-top: 8px; font-size: 14px;">Reads a line from the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_Stream_WriteByte">
        <h2 style="margin-bottom: 8px;">Stream.WriteByte</h2>
        <code>Stream.WriteByte(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 8-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt16">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt16</h2>
        <code>Stream.WriteUInt16(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt16BE</h2>
        <code>Stream.WriteUInt16BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned big-endian 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt32">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt32</h2>
        <code>Stream.WriteUInt32(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt32BE</h2>
        <code>Stream.WriteUInt32BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned big-endian 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteUInt64">
        <h2 style="margin-bottom: 8px;">Stream.WriteUInt64</h2>
        <code>Stream.WriteUInt64(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes an unsigned 64-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt16">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt16</h2>
        <code>Stream.WriteInt16(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt16BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt16BE</h2>
        <code>Stream.WriteInt16BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed big-endian 16-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt32">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt32</h2>
        <code>Stream.WriteInt32(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt32BE">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt32BE</h2>
        <code>Stream.WriteInt32BE(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed big-endian 32-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteInt64">
        <h2 style="margin-bottom: 8px;">Stream.WriteInt64</h2>
        <code>Stream.WriteInt64(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a signed 64-bit number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Integer): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteFloat">
        <h2 style="margin-bottom: 8px;">Stream.WriteFloat</h2>
        <code>Stream.WriteFloat(stream, value)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a floating point number to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>value (Decimal): The value to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_Stream_WriteString">
        <h2 style="margin-bottom: 8px;">Stream.WriteString</h2>
        <code>Stream.WriteString(stream, string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Writes a null-terminated string to the stream.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stream (Stream): The stream.</li>
        <li>string (String): The string to write.</li>
        </ul>
        </p>
        <p id="Reference_functions_String_Format">
        <h2 style="margin-bottom: 8px;">String.Format</h2>
        <code>String.Format(string[, values])</code>
        <div style="margin-top: 8px; font-size: 14px;">Formats a <b>format string</b> according to the given <b>format specifiers</b>. A format specifier is a string of the form<br><br><code>%[flags][width][.precision][conversion specifier]</code><br><br>where a <b>conversion specifier</b> must be one of the following:<br/><ul><li><code>d</code>: Integers</li><li><code>f</code> or <code>%F</code>: Decimals</li><li><code>s</code>: Strings</li><li><code>c</code>: Characters</li><li><code>x</code> or <code>%X</code>: Hexadecimal integers</li><li><code>b</code> or <code>%b</code>: Binary integers</li><li><code>o</code>: Octal integers</li><li><code>%</code>: A literal percent sign character</li></ul><b>Flags</b> are optional, and must be one of the following:<br/><ul><li><code>0</code>: Pads the value with leading zeroes. See the <b>width sub-specifier</b>.</li><li><code>-</code>: Left-justifies the result. See the <b>width sub-specifier</b>.</li><li><code>#</code>: Prefixes something to the value depending on the <b>conversion specifier</b>:<ul><li><code>x</code> or <code>X</code>: Prefixes the value with <code>0x</code> or <code>0X</code> respectively.</li><li><code>b</code> or <code>B</code>: Prefixes the value with <code>0b</code> or <code>0B</code> respectively.</li><li><code>f</code>: Prefixes the value with a <code>.</code> character.</li><li><code>o</code>: Prefixes the value with a <code>0</code> character.</li></ul><li><code>+</code>: Prefixes positive numbers with a plus sign.</li><li>A space character: If no sign character (<code>-</code> or <code>+</code>) was written, a space character is written instead.</li></ul>A <b>width sub-specifier</b> is used in conjunction with the flags:<br/><ul><li>A number: The amount of padding to add.</li><li><code>*</code>: This functions the same as the above, but the width is given in the next argument as an Integer value.</li></ul><b>Precision specifiers</b> are also supported:<br/><ul><li><code>.</code> followed by a number:<ul><li>For Integer values, this pads the value with leading zeroes.</li><li>For Decimal values, this specifies the number of digits to be printed after the decimal point (which is 6 by default).</li><li>For String values, this is the maximum amount of characters to be printed.</li></ul><li><code>.</code> followed by a <code>*</code>: This functions the same as the above, but the precision is given in the next argument as an Integer value.</li></ul></div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String): The format string.</li>
        <li>values (any type): Variable arguments.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_String_Split">
        <h2 style="margin-bottom: 8px;">String.Split</h2>
        <code>String.Split(string, delimiter)</code>
        <div style="margin-top: 8px; font-size: 14px;">Splits a string by a delimiter.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String): The string to split.</li>
        <li>delimiter (Integer): The delimiter string.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Array of String values.</div>
        </p>
        <p id="Reference_functions_String_CharAt">
        <h2 style="margin-bottom: 8px;">String.CharAt</h2>
        <code>String.CharAt(string, index)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the UTF8 value of the character at the specified index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>index (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the UTF8 value as an Integer.</div>
        </p>
        <p id="Reference_functions_String_Length">
        <h2 style="margin-bottom: 8px;">String.Length</h2>
        <code>String.Length(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the length of the String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the length of the String value as an Integer.</div>
        </p>
        <p id="Reference_functions_String_Compare">
        <h2 style="margin-bottom: 8px;">String.Compare</h2>
        <code>String.Compare(stringA, stringB)</code>
        <div style="margin-top: 8px; font-size: 14px;">Compare two Strings and retrieve a numerical difference.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>stringA (String):</li>
        <li>stringB (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the comparison result as an Integer.</div>
        </p>
        <p id="Reference_functions_String_IndexOf">
        <h2 style="margin-bottom: 8px;">String.IndexOf</h2>
        <code>String.IndexOf(string, substring)</code>
        <div style="margin-top: 8px; font-size: 14px;">Get the first index at which the substring occurs in the string.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>substring (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index as an Integer.</div>
        </p>
        <p id="Reference_functions_String_Contains">
        <h2 style="margin-bottom: 8px;">String.Contains</h2>
        <code>String.Contains(string, substring)</code>
        <div style="margin-top: 8px; font-size: 14px;">Searches for whether or not a substring is within a String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>substring (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_String_Substring">
        <h2 style="margin-bottom: 8px;">String.Substring</h2>
        <code>String.Substring(string, startIndex, length)</code>
        <div style="margin-top: 8px; font-size: 14px;">Get a String value from a portion of a larger String value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>startIndex (Integer):</li>
        <li>length (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a String value.</div>
        </p>
        <p id="Reference_functions_String_ToUpperCase">
        <h2 style="margin-bottom: 8px;">String.ToUpperCase</h2>
        <code>String.ToUpperCase(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Convert a String value to its uppercase representation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a uppercase String value.</div>
        </p>
        <p id="Reference_functions_String_ToLowerCase">
        <h2 style="margin-bottom: 8px;">String.ToLowerCase</h2>
        <code>String.ToLowerCase(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Convert a String value to its lowercase representation.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a lowercase String value.</div>
        </p>
        <p id="Reference_functions_String_LastIndexOf">
        <h2 style="margin-bottom: 8px;">String.LastIndexOf</h2>
        <code>String.LastIndexOf(string, substring)</code>
        <div style="margin-top: 8px; font-size: 14px;">Get the last index at which the substring occurs in the string.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String):</li>
        <li>substring (String):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the index as an Integer.</div>
        </p>
        <p id="Reference_functions_String_ParseInteger">
        <h2 style="margin-bottom: 8px;">String.ParseInteger</h2>
        <code>String.ParseInteger(string[, radix])</code>
        <div style="margin-top: 8px; font-size: 14px;">Converts a String value to an Integer value, if possible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String): The string to parse.</li>
        <li>radix (Integer): The numerical base, or radix. If <code>0</code>, the radix is detected by the value of <code>string</code>: <br/>If <code>string</code> begins with <code>0x</code>, it is a hexadecimal number (base 16);<br/>Else, if <code>string</code> begins with <code>0</code>, it is an octal number (base 8);<br/>Else, if <code>string</code> begins with <code>0b</code>, it is a binary number (base 2);<br/>Else, the number is assumed to be in base 10.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the value as an Integer.</div>
        </p>
        <p id="Reference_functions_String_ParseDecimal">
        <h2 style="margin-bottom: 8px;">String.ParseDecimal</h2>
        <code>String.ParseDecimal(string)</code>
        <div style="margin-top: 8px; font-size: 14px;">Convert a String value to a Decimal value if possible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>string (String): The string to parse.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the value as a Decimal.</div>
        </p>
        <p id="Reference_functions_Texture_Create">
        <h2 style="margin-bottom: 8px; color: red;">Texture.Create</h2>
        <code>Texture.Create()</code>
        </p>
        <p id="Reference_functions_Texture_Copy">
        <h2 style="margin-bottom: 8px; color: red;">Texture.Copy</h2>
        <code>Texture.Copy()</code>
        </p>
        <p id="Reference_functions_Thread_RunEvent">
        <h2 style="margin-bottom: 8px; color: red;">Thread.RunEvent</h2>
        <code>Thread.RunEvent()</code>
        </p>
        <p id="Reference_functions_Thread_Sleep">
        <h2 style="margin-bottom: 8px; color: red;">Thread.Sleep</h2>
        <code>Thread.Sleep()</code>
        </p>
        <p id="Reference_functions_TileCollision_Point">
        <h2 style="margin-bottom: 8px;">TileCollision.Point</h2>
        <code>TileCollision.Point(x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks for a tile collision at a specified point, returning <code>true</code> if successful, <code>false</code> if otherwise.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position to check.</li>
        <li>y (Number): Y position to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_TileCollision_PointExtended">
        <h2 style="margin-bottom: 8px;">TileCollision.PointExtended</h2>
        <code>TileCollision.PointExtended(x, y, collisionField, collisionSide)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks for a tile collision at a specified point, returning the angle value if successful, <code>-1</code> if otherwise.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position to check.</li>
        <li>y (Number): Y position to check.</li>
        <li>collisionField (Integer): Low (0) or high (1) field to check.</li>
        <li>collisionSide (Integer): Which side of the tile to check for collision. (TOP = 1, RIGHT = 2, BOTTOM = 4, LEFT = 8, ALL = 15)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the angle of the ground as an Integer value.</div>
        </p>
        <p id="Reference_functions_TileCollision_Line">
        <h2 style="margin-bottom: 8px;">TileCollision.Line</h2>
        <code>TileCollision.Line(x, y, directionType, length, collisionField, compareAngle, instance)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks for a tile collision in a straight line, returning the angle value if successful, <code>-1</code> if otherwise.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): X position to start checking from.</li>
        <li>y (Number): Y position to start checking from.</li>
        <li>directionType (Integer): Ordinal direction to check in. (0: Down, 1: Right, 2: Up, 3: Left, or one of the enums: SensorDirection_Up, SensorDirection_Left, SensorDirection_Down, SensorDirection_Right)</li>
        <li>length (Integer): How many pixels to check.</li>
        <li>collisionField (Integer): Low (0) or high (1) field to check.</li>
        <li>compareAngle (Integer): Only return a collision if the angle is within 0x20 this value, otherwise if angle comparison is not desired, set this value to -1.</li>
        <li>instance (Instance): Instance to write the values to.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>false</code> if no tile collision, but if <code>true</code>: <br/><pre class="code"><br/>instance.SensorX: (Number), // X Position where the sensor collided if it did. <br/>instance.SensorY: (Number), // Y Position where the sensor collided if it did. <br/>instance.SensorCollided: (Boolean), // Whether or not the sensor collided. <br/>instance.SensorAngle: (Integer) // Tile angle at the collision. <br/></pre></div>
        </p>
        <p id="Reference_functions_TileInfo_SetSpriteInfo">
        <h2 style="margin-bottom: 8px;">TileInfo.SetSpriteInfo</h2>
        <code>TileInfo.SetSpriteInfo(tileID, spriteIndex, animationIndex, frameIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the sprite, animation, and frame to use for specified tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of tile to check.</li>
        <li>spriteIndex (Integer): Sprite index. (<code>-1</code> for default tile sprite)</li>
        <li>animationIndex (Integer): Animation index.</li>
        <li>frameIndex (Integer): Frame index. (<code>-1</code> for default tile frame)</li>
        </ul>
        </p>
        <p id="Reference_functions_TileInfo_IsEmptySpace">
        <h2 style="margin-bottom: 8px;">TileInfo.IsEmptySpace</h2>
        <code>TileInfo.IsEmptySpace(tileID, collisionPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks to see if a tile at the ID is empty.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of tile to check.</li>
        <li>collisionPlane (Integer): The collision plane of the tile to check for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the tile is empty space, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetEmptyTile">
        <h2 style="margin-bottom: 8px;">TileInfo.GetEmptyTile</h2>
        <code>TileInfo.GetEmptyTile()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the scene's empty tile ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the ID of the scene's empty tile space.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetCollision">
        <h2 style="margin-bottom: 8px;">TileInfo.GetCollision</h2>
        <code>TileInfo.GetCollision(tileID, collisionField, directionType, position[, flipX, flipY])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the collision value at the pixel position of the desired tile, -1 if no collision.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to get the value of.</li>
        <li>collisionField (Integer): The collision plane of the tile to get the collision from.</li>
        <li>directionType (Integer): Ordinal direction to check in. (0: Down, 1: Right, 2: Up, 3: Left, or one of the enums: SensorDirection_Up, SensorDirection_Left, SensorDirection_Down, SensorDirection_Right)</li>
        <li>position (Integer): Position on the tile to check, X position if the directionType is Up/Down, Y position if the directionType is Left/Right.</li>
        <li>flipX (Boolean): Whether or not to check the collision with the tile horizontally flipped.</li>
        <li>flipY (Boolean): Whether or not to check the collision with the tile vertically flipped.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Collision position (Integer) on the tile, X position if the directionType is Left/Right, Y position if the directionType is Up/Down, -1 if there was no collision.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetAngle">
        <h2 style="margin-bottom: 8px;">TileInfo.GetAngle</h2>
        <code>TileInfo.GetAngle(tileID, collisionField, directionType[, flipX, flipY])</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the angle value of the desired tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to get the value of.</li>
        <li>collisionField (Integer): The collision plane of the tile to get the angle from.</li>
        <li>directionType (Integer): Ordinal direction to check in. (0: Down, 1: Right, 2: Up, 3: Left, or one of the enums: SensorDirection_Up, SensorDirection_Left, SensorDirection_Down, SensorDirection_Right)</li>
        <li>flipX (Boolean): Whether or not to check the angle with the tile horizontally flipped.</li>
        <li>flipY (Boolean): Whether or not to check the angle with the tile vertically flipped.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Angle value between 0x00 to 0xFF at the specified direction.</div>
        </p>
        <p id="Reference_functions_TileInfo_GetBehaviorFlag">
        <h2 style="margin-bottom: 8px;">TileInfo.GetBehaviorFlag</h2>
        <code>TileInfo.GetBehaviorFlag(tileID, collisionPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the behavior value of the desired tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to get the value of.</li>
        <li>collisionPlane (Integer): The collision plane of the tile to get the behavior from.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Behavior flag (Integer) of the tile.</div>
        </p>
        <p id="Reference_functions_TileInfo_IsCeiling">
        <h2 style="margin-bottom: 8px;">TileInfo.IsCeiling</h2>
        <code>TileInfo.IsCeiling(tileID, collisionPlane)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the desired tile is a ceiling tile.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>tileID (Integer): ID of the tile to check.</li>
        <li>collisionPlane (Integer): The collision plane of the tile to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the tile is a ceiling tile, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Touch_GetX">
        <h2 style="margin-bottom: 8px;">Touch.GetX</h2>
        <code>Touch.GetX(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the X position of a touch.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Touch_GetY">
        <h2 style="margin-bottom: 8px;">Touch.GetY</h2>
        <code>Touch.GetY(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the Y position of a touch.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_Touch_IsDown">
        <h2 style="margin-bottom: 8px;">Touch.IsDown</h2>
        <code>Touch.IsDown(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a touch is currently down on the screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Touch_IsPressed">
        <h2 style="margin-bottom: 8px;">Touch.IsPressed</h2>
        <code>Touch.IsPressed(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a touch just pressed down on the screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_Touch_IsReleased">
        <h2 style="margin-bottom: 8px;">Touch.IsReleased</h2>
        <code>Touch.IsReleased(touchIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether a touch just released from the screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>touchIndex (Integer):</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_VertexBuffer_Create">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Create</h2>
        <code>VertexBuffer.Create(numVertices, unloadPolicy)</code>
        <div style="margin-top: 8px; font-size: 14px;">Create a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>numVertices (Integer): The initial capacity of this vertex buffer.</li>
        <li>unloadPolicy (Integer): Whether or not to delete the vertex buffer at the end of the current Scene, or the game end.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">The index of the created vertex buffer.</div>
        </p>
        <p id="Reference_functions_VertexBuffer_Resize">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Resize</h2>
        <code>VertexBuffer.Resize(vertexBufferIndex, numVertices)</code>
        <div style="margin-top: 8px; font-size: 14px;">Resizes a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to resize.</li>
        <li>numVertices (Integer): The amount of vertices that this vertex buffer will hold.</li>
        </ul>
        </p>
        <p id="Reference_functions_VertexBuffer_Clear">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Clear</h2>
        <code>VertexBuffer.Clear(vertexBufferIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Clears a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to clear.</li>
        </ul>
        </p>
        <p id="Reference_functions_VertexBuffer_Delete">
        <h2 style="margin-bottom: 8px;">VertexBuffer.Delete</h2>
        <code>VertexBuffer.Delete(vertexBufferIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Deletes a vertex buffer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>vertexBufferIndex (Integer): The vertex buffer to delete.</li>
        </ul>
        </p>
        <p id="Reference_functions_Video_Play">
        <h2 style="margin-bottom: 8px; color: red;">Video.Play</h2>
        <code>Video.Play()</code>
        </p>
        <p id="Reference_functions_Video_Pause">
        <h2 style="margin-bottom: 8px; color: red;">Video.Pause</h2>
        <code>Video.Pause()</code>
        </p>
        <p id="Reference_functions_Video_Resume">
        <h2 style="margin-bottom: 8px; color: red;">Video.Resume</h2>
        <code>Video.Resume()</code>
        </p>
        <p id="Reference_functions_Video_Stop">
        <h2 style="margin-bottom: 8px; color: red;">Video.Stop</h2>
        <code>Video.Stop()</code>
        </p>
        <p id="Reference_functions_Video_Close">
        <h2 style="margin-bottom: 8px; color: red;">Video.Close</h2>
        <code>Video.Close()</code>
        </p>
        <p id="Reference_functions_Video_IsBuffering">
        <h2 style="margin-bottom: 8px; color: red;">Video.IsBuffering</h2>
        <code>Video.IsBuffering()</code>
        </p>
        <p id="Reference_functions_Video_IsPlaying">
        <h2 style="margin-bottom: 8px; color: red;">Video.IsPlaying</h2>
        <code>Video.IsPlaying()</code>
        </p>
        <p id="Reference_functions_Video_IsPaused">
        <h2 style="margin-bottom: 8px; color: red;">Video.IsPaused</h2>
        <code>Video.IsPaused()</code>
        </p>
        <p id="Reference_functions_Video_SetPosition">
        <h2 style="margin-bottom: 8px; color: red;">Video.SetPosition</h2>
        <code>Video.SetPosition()</code>
        </p>
        <p id="Reference_functions_Video_SetBufferDuration">
        <h2 style="margin-bottom: 8px; color: red;">Video.SetBufferDuration</h2>
        <code>Video.SetBufferDuration()</code>
        </p>
        <p id="Reference_functions_Video_SetTrackEnabled">
        <h2 style="margin-bottom: 8px; color: red;">Video.SetTrackEnabled</h2>
        <code>Video.SetTrackEnabled()</code>
        </p>
        <p id="Reference_functions_Video_GetPosition">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetPosition</h2>
        <code>Video.GetPosition()</code>
        </p>
        <p id="Reference_functions_Video_GetDuration">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDuration</h2>
        <code>Video.GetDuration()</code>
        </p>
        <p id="Reference_functions_Video_GetBufferDuration">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetBufferDuration</h2>
        <code>Video.GetBufferDuration()</code>
        </p>
        <p id="Reference_functions_Video_GetBufferEnd">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetBufferEnd</h2>
        <code>Video.GetBufferEnd()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackCount">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackCount</h2>
        <code>Video.GetTrackCount()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackEnabled">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackEnabled</h2>
        <code>Video.GetTrackEnabled()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackName">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackName</h2>
        <code>Video.GetTrackName()</code>
        </p>
        <p id="Reference_functions_Video_GetTrackLanguage">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetTrackLanguage</h2>
        <code>Video.GetTrackLanguage()</code>
        </p>
        <p id="Reference_functions_Video_GetDefaultVideoTrack">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDefaultVideoTrack</h2>
        <code>Video.GetDefaultVideoTrack()</code>
        </p>
        <p id="Reference_functions_Video_GetDefaultAudioTrack">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDefaultAudioTrack</h2>
        <code>Video.GetDefaultAudioTrack()</code>
        </p>
        <p id="Reference_functions_Video_GetDefaultSubtitleTrack">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetDefaultSubtitleTrack</h2>
        <code>Video.GetDefaultSubtitleTrack()</code>
        </p>
        <p id="Reference_functions_Video_GetWidth">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetWidth</h2>
        <code>Video.GetWidth()</code>
        </p>
        <p id="Reference_functions_Video_GetHeight">
        <h2 style="margin-bottom: 8px; color: red;">Video.GetHeight</h2>
        <code>Video.GetHeight()</code>
        </p>
        <p id="Reference_functions_View_SetX">
        <h2 style="margin-bottom: 8px;">View.SetX</h2>
        <code>View.SetX(viewIndex, x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the x-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X position</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetY">
        <h2 style="margin-bottom: 8px;">View.SetY</h2>
        <code>View.SetY(viewIndex, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the y-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>y (Number): Desired Y position</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetZ">
        <h2 style="margin-bottom: 8px;">View.SetZ</h2>
        <code>View.SetZ(viewIndex, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the z-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>z (Number): Desired Z position</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetPosition">
        <h2 style="margin-bottom: 8px;">View.SetPosition</h2>
        <code>View.SetPosition(viewIndex, x, y[, z])</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X position</li>
        <li>y (Number): Desired Y position</li>
        <li>z (Number): Desired Z position</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetAngle">
        <h2 style="margin-bottom: 8px;">View.SetAngle</h2>
        <code>View.SetAngle(viewIndex, x, y, z)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the angle of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X angle</li>
        <li>y (Number): Desired Y angle</li>
        <li>z (Number): Desired Z angle</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetSize">
        <h2 style="margin-bottom: 8px;">View.SetSize</h2>
        <code>View.SetSize(viewIndex, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the size of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>width (Number): Desired width.</li>
        <li>height (Number): Desired height.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputX">
        <h2 style="margin-bottom: 8px;">View.SetOutputX</h2>
        <code>View.SetOutputX(viewIndex, x)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the x-axis output position of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X position</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputY">
        <h2 style="margin-bottom: 8px;">View.SetOutputY</h2>
        <code>View.SetOutputY(viewIndex, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the y-axis output position of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>y (Number): Desired Y position</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputPosition">
        <h2 style="margin-bottom: 8px;">View.SetOutputPosition</h2>
        <code>View.SetOutputPosition(viewIndex, x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the output position of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>x (Number): Desired X position</li>
        <li>y (Number): Desired Y position</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetOutputSize">
        <h2 style="margin-bottom: 8px;">View.SetOutputSize</h2>
        <code>View.SetOutputSize(viewIndex, width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the output size of the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>width (Number): Desired width.</li>
        <li>height (Number): Desired height.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_GetX">
        <h2 style="margin-bottom: 8px;">View.GetX</h2>
        <code>View.GetX(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the x-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetY">
        <h2 style="margin-bottom: 8px;">View.GetY</h2>
        <code>View.GetY(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the y-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetZ">
        <h2 style="margin-bottom: 8px;">View.GetZ</h2>
        <code>View.GetZ(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the z-axis position of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetWidth">
        <h2 style="margin-bottom: 8px;">View.GetWidth</h2>
        <code>View.GetWidth(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetHeight">
        <h2 style="margin-bottom: 8px;">View.GetHeight</h2>
        <code>View.GetHeight(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetCenterX">
        <h2 style="margin-bottom: 8px;">View.GetCenterX</h2>
        <code>View.GetCenterX(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the x center of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_GetCenterY">
        <h2 style="margin-bottom: 8px;">View.GetCenterY</h2>
        <code>View.GetCenterY(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the y center of the camera for the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Decimal value.</div>
        </p>
        <p id="Reference_functions_View_IsUsingDrawTarget">
        <h2 style="margin-bottom: 8px;">View.IsUsingDrawTarget</h2>
        <code>View.IsUsingDrawTarget(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is using a draw target or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetUseDrawTarget">
        <h2 style="margin-bottom: 8px;">View.SetUseDrawTarget</h2>
        <code>View.SetUseDrawTarget(viewIndex, useDrawTarget)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to use a draw target.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>useDrawTarget (Boolean): Whether to use a draw target or not.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_GetDrawTarget">
        <h2 style="margin-bottom: 8px;">View.GetDrawTarget</h2>
        <code>View.GetDrawTarget(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the specified camera's draw target.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_IsUsingSoftwareRenderer">
        <h2 style="margin-bottom: 8px;">View.IsUsingSoftwareRenderer</h2>
        <code>View.IsUsingSoftwareRenderer(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is using the software renderer or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetUseSoftwareRenderer">
        <h2 style="margin-bottom: 8px;">View.SetUseSoftwareRenderer</h2>
        <code>View.SetUseSoftwareRenderer(viewIndex, useSoftwareRenderer)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to use the software renderer.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>useSoftwareRenderer (Boolean):</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetUsePerspective">
        <h2 style="margin-bottom: 8px; color: red;">View.SetUsePerspective</h2>
        <code>View.SetUsePerspective()</code>
        </p>
        <p id="Reference_functions_View_IsEnabled">
        <h2 style="margin-bottom: 8px;">View.IsEnabled</h2>
        <code>View.IsEnabled(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is active or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetEnabled">
        <h2 style="margin-bottom: 8px;">View.SetEnabled</h2>
        <code>View.SetEnabled(viewIndex, enabled)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to be active.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>enabled (Boolean): Whether or not the camera should be enabled.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_IsVisible">
        <h2 style="margin-bottom: 8px;">View.IsVisible</h2>
        <code>View.IsVisible(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether the specified camera is visible or not.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_functions_View_SetVisible">
        <h2 style="margin-bottom: 8px;">View.SetVisible</h2>
        <code>View.SetVisible(viewIndex, visible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the specified camera to be visible.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>visible (Boolean): Whether or not the camera should be visible.</li>
        </ul>
        </p>
        <p id="Reference_functions_View_SetFieldOfView">
        <h2 style="margin-bottom: 8px; color: red;">View.SetFieldOfView</h2>
        <code>View.SetFieldOfView()</code>
        </p>
        <p id="Reference_functions_View_SetPriority">
        <h2 style="margin-bottom: 8px;">View.SetPriority</h2>
        <code>View.SetPriority(viewIndex)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the specified view's priority.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_GetPriority">
        <h2 style="margin-bottom: 8px;">View.GetPriority</h2>
        <code>View.GetPriority(viewIndex, priority)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the specified view's priority.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): Index of the view.</li>
        <li>priority (Integer):</li>
        </ul>
        </p>
        <p id="Reference_functions_View_GetCurrent">
        <h2 style="margin-bottom: 8px;">View.GetCurrent</h2>
        <code>View.GetCurrent()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the current view index being drawn to.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_GetCount">
        <h2 style="margin-bottom: 8px;">View.GetCount</h2>
        <code>View.GetCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the total amount of views.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_GetActiveCount">
        <h2 style="margin-bottom: 8px;">View.GetActiveCount</h2>
        <code>View.GetActiveCount()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the total amount of views currently activated.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_functions_View_CheckOnScreen">
        <h2 style="margin-bottom: 8px;">View.CheckOnScreen</h2>
        <code>View.CheckOnScreen(instance, rangeX, rangeY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether an instance is on screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>instance (Instance): The instance to check.</li>
        <li>rangeX (Decimal): The x range to check, or null if an update region width should be used.</li>
        <li>rangeY (Decimal): The y range to check, or null if an update region height should be used.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether or not the instance is on screen on any view.</div>
        </p>
        <p id="Reference_functions_View_CheckPosOnScreen">
        <h2 style="margin-bottom: 8px;">View.CheckPosOnScreen</h2>
        <code>View.CheckPosOnScreen(posX, posY, rangeX, rangeY)</code>
        <div style="margin-top: 8px; font-size: 14px;">Determines whether a position is on screen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>posX (Decimal): The x position to check.</li>
        <li>posY (Decimal): The y position to check.</li>
        <li>rangeX (Decimal): The x range to check.</li>
        <li>rangeY (Decimal): The y range to check.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns whether or not the position is on screen on any view.</div>
        </p>
        <p id="Reference_functions_Window_SetSize">
        <h2 style="margin-bottom: 8px;">Window.SetSize</h2>
        <code>Window.SetSize(width, height)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the size of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>width (Number): Window width</li>
        <li>height (Number): Window height</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetFullscreen">
        <h2 style="margin-bottom: 8px;">Window.SetFullscreen</h2>
        <code>Window.SetFullscreen(isFullscreen)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the fullscreen state of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isFullscreen (Boolean): Whether or not the window should be fullscreen.</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetBorderless">
        <h2 style="margin-bottom: 8px;">Window.SetBorderless</h2>
        <code>Window.SetBorderless(isBorderless)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the bordered state of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>isBorderless (Boolean): Whether or not the window should be borderless.</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetVSync">
        <h2 style="margin-bottom: 8px;">Window.SetVSync</h2>
        <code>Window.SetVSync(enableVsync)</code>
        <div style="margin-top: 8px; font-size: 14px;">Enables or disables V-Sync for the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>enableVsync (Boolean): Whether or not the window should use V-Sync.</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetPosition">
        <h2 style="margin-bottom: 8px;">Window.SetPosition</h2>
        <code>Window.SetPosition(x, y)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>x (Number): Window x</li>
        <li>y (Number): Window y</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_SetPositionCentered">
        <h2 style="margin-bottom: 8px;">Window.SetPositionCentered</h2>
        <code>Window.SetPositionCentered()</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the position of the active window to the center of the display.</div>
        </p>
        <p id="Reference_functions_Window_SetTitle">
        <h2 style="margin-bottom: 8px;">Window.SetTitle</h2>
        <code>Window.SetTitle(title)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets the title of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>title (String): Window title</li>
        </ul>
        </p>
        <p id="Reference_functions_Window_GetWidth">
        <h2 style="margin-bottom: 8px;">Window.GetWidth</h2>
        <code>Window.GetWidth()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the width of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the width of the active window.</div>
        </p>
        <p id="Reference_functions_Window_GetHeight">
        <h2 style="margin-bottom: 8px;">Window.GetHeight</h2>
        <code>Window.GetHeight()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the height of the active window.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the height of the active window.</div>
        </p>
        <p id="Reference_functions_Window_GetFullscreen">
        <h2 style="margin-bottom: 8px;">Window.GetFullscreen</h2>
        <code>Window.GetFullscreen()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the active window is currently fullscreen.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the window is fullscreen, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_Window_IsResizeable">
        <h2 style="margin-bottom: 8px;">Window.IsResizeable</h2>
        <code>Window.IsResizeable()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets whether or not the active window is resizeable.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the window is resizeable, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_functions_XML_Parse">
        <h2 style="margin-bottom: 8px;">XML.Parse</h2>
        <code>XML.Parse(xmlText)</code>
        <div style="margin-top: 8px; font-size: 14px;">Decodes a String value into a Map value.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>xmlText (String): XML-compliant text.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Map value if the text can be decoded, otherwise returns <code>null</code>.</div>
        </p>
        <p>725 out of 784 functions have descriptions. </p>
        <hr/>
        <h3>Instance methods</h3>
        <p id="Reference_methods_instance_SetAnimation">
        <h2 style="margin-bottom: 8px;">instance.SetAnimation</h2>
        <code>instance.SetAnimation(animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the current animation of the entity, if the animation index differs from the entity's current animation index.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_ResetAnimation">
        <h2 style="margin-bottom: 8px;">instance.ResetAnimation</h2>
        <code>instance.ResetAnimation(animation, frame)</code>
        <div style="margin-top: 8px; font-size: 14px;">Changes the current animation of the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_Animate">
        <h2 style="margin-bottom: 8px;">instance.Animate</h2>
        <code>instance.Animate()</code>
        <div style="margin-top: 8px; font-size: 14px;">Animates the entity.</div>
        </p>
        <p id="Reference_methods_instance_GetIDWithinClass">
        <h2 style="margin-bottom: 8px;">instance.GetIDWithinClass</h2>
        <code>instance.GetIDWithinClass()</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the ordered ID of the entity amongst other entities of the same type.</div>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an Integer value.</div>
        </p>
        <p id="Reference_methods_instance_AddToRegistry">
        <h2 style="margin-bottom: 8px;">instance.AddToRegistry</h2>
        <code>instance.AddToRegistry(registry)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds the entity to a registry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>registry (String): The registry name.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_IsInRegistry">
        <h2 style="margin-bottom: 8px;">instance.IsInRegistry</h2>
        <code>instance.IsInRegistry(registry)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the entity is in a registry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>registry (String): The registry name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns a Boolean value.</div>
        </p>
        <p id="Reference_methods_instance_RemoveFromRegistry">
        <h2 style="margin-bottom: 8px;">instance.RemoveFromRegistry</h2>
        <code>instance.RemoveFromRegistry(registry)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the entity from a registry.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>registry (String): The registry name.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_ApplyMotion">
        <h2 style="margin-bottom: 8px;">instance.ApplyMotion</h2>
        <code>instance.ApplyMotion()</code>
        <div style="margin-top: 8px; font-size: 14px;">Applies gravity and velocities to the entity.</div>
        </p>
        <p id="Reference_methods_instance_InView">
        <h2 style="margin-bottom: 8px;">instance.InView</h2>
        <code>instance.InView(viewIndex, x, y, w, h)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the specified positions and ranges are within the specified view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): The view index.</li>
        <li>x (Decimal): The X position.</li>
        <li>y (Decimal): The Y position.</li>
        <li>w (Decimal): The width.</li>
        <li>h (Decimal): The height.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the specified positions and ranges are within the specified view, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_CollidedWithObject">
        <h2 style="margin-bottom: 8px;">instance.CollidedWithObject</h2>
        <code>instance.CollidedWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the entity collided with another entity, or any entity of the specified class name.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance/String): The entity or class to collide with.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the entity that was collided with, or <code>null</code> if it did not collide with any entity.</div>
        </p>
        <p id="Reference_methods_instance_GetHitboxFromSprite">
        <h2 style="margin-bottom: 8px;">instance.GetHitboxFromSprite</h2>
        <code>instance.GetHitboxFromSprite(sprite, animation, frame, hitbox)</code>
        <div style="margin-top: 8px; font-size: 14px;">Updates the entity's hitbox with the hitbox in the specified sprite's animation, frame and hitbox ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Sprite): The sprite.</li>
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        <li>hitbox (Integer): The hitbox ID.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_ReturnHitboxFromSprite">
        <h2 style="margin-bottom: 8px;">instance.ReturnHitboxFromSprite</h2>
        <code>instance.ReturnHitboxFromSprite(sprite, animation, frame, hitbox)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets the hitbox in the specified sprite's animation, frame and hitbox ID.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sprite (Sprite): The sprite.</li>
        <li>animation (Integer): The animation index.</li>
        <li>frame (Integer): The frame index.</li>
        <li>hitbox (Integer): The hitbox ID.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns an array containing the hitbox top, left, right and bottom sides in that order.</div>
        </p>
        <p id="Reference_methods_instance_CollideWithObject">
        <h2 style="margin-bottom: 8px;">instance.CollideWithObject</h2>
        <code>instance.CollideWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Does collision with another entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance): The other entity to check collision for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity collided, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_SolidCollideWithObject">
        <h2 style="margin-bottom: 8px;">instance.SolidCollideWithObject</h2>
        <code>instance.SolidCollideWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Does solid collision with another entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance): The other entity to check collision for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity collided, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_TopSolidCollideWithObject">
        <h2 style="margin-bottom: 8px;">instance.TopSolidCollideWithObject</h2>
        <code>instance.TopSolidCollideWithObject(other)</code>
        <div style="margin-top: 8px; font-size: 14px;">Does solid collision with another entity's top.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>other (Instance): The other entity to check collision for.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity collided, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_PropertyExists">
        <h2 style="margin-bottom: 8px;">instance.PropertyExists</h2>
        <code>instance.PropertyExists(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if a property exists in the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): The property name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the property exists, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_PropertyGet">
        <h2 style="margin-bottom: 8px;">instance.PropertyGet</h2>
        <code>instance.PropertyGet(property)</code>
        <div style="margin-top: 8px; font-size: 14px;">Gets a property exists from the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>property (String): The property name.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the property if it exists, and <code>null</code> if the property does not exist.</div>
        </p>
        <p id="Reference_methods_instance_SetViewVisibility">
        <h2 style="margin-bottom: 8px;">instance.SetViewVisibility</h2>
        <code>instance.SetViewVisibility(viewIndex, visible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Sets whether the entity is visible on a specific view.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): The view index.</li>
        <li>visible (Boolean): Whether the entity will be visible or not on the specified view.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_SetViewOverride">
        <h2 style="margin-bottom: 8px;">instance.SetViewOverride</h2>
        <code>instance.SetViewOverride(viewIndex, visible)</code>
        <div style="margin-top: 8px; font-size: 14px;">Toggles the bypass for each view's entity rendering toggle set by <code><a href="#Reference_functions_Scene_SetObjectViewRender">Scene.SetObjectViewRender</a></code>.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>viewIndex (Integer): The view index.</li>
        <li>visible (Boolean): Whether the entity will always be visible or not on the specified view.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_AddToDrawGroup">
        <h2 style="margin-bottom: 8px;">instance.AddToDrawGroup</h2>
        <code>instance.AddToDrawGroup(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Adds the entity into the specified draw group.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): The draw group.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_IsInDrawGroup">
        <h2 style="margin-bottom: 8px;">instance.IsInDrawGroup</h2>
        <code>instance.IsInDrawGroup(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Checks if the entity is in the specified draw group.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): The draw group.</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns <code>true</code> if the entity is in the specified draw group, <code>false</code> if otherwise.</div>
        </p>
        <p id="Reference_methods_instance_RemoveFromDrawGroup">
        <h2 style="margin-bottom: 8px;">instance.RemoveFromDrawGroup</h2>
        <code>instance.RemoveFromDrawGroup(drawGroup)</code>
        <div style="margin-top: 8px; font-size: 14px;">Removes the entity from the specified draw group.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>drawGroup (Integer): The draw group.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_PlaySound">
        <h2 style="margin-bottom: 8px;">instance.PlaySound</h2>
        <code>instance.PlaySound(sound[, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound once from the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_methods_instance_LoopSound">
        <h2 style="margin-bottom: 8px;">instance.LoopSound</h2>
        <code>instance.LoopSound(sound[, loopPoint, panning, speed, volume])</code>
        <div style="margin-top: 8px; font-size: 14px;">Plays a sound from the entity, looping back when it ends.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to play.</li>
        <li>loopPoint (Integer): Loop point in samples.</li>
        <li>panning (Decimal): Control the panning of the audio. -1.0 makes it sound in left ear only, 1.0 makes it sound in right ear, and closer to 0.0 centers it. (0.0 is the default.)</li>
        <li>speed (Decimal): Control the speed of the audio. > 1.0 makes it faster, < 1.0 is slower, 1.0 is normal speed. (1.0 is the default.)</li>
        <li>volume (Decimal): Controls the volume of the audio. 0.0 is muted, 1.0 is normal volume. (1.0 is the default.)</li>
        </ul>
        <div style="font-weight: bold; margin-top: 8px;">Returns:</div>
        <div style="font-size: 14px;">Returns the channel index where the sound began to play, or <code>-1</code> if no channel was available.</div>
        </p>
        <p id="Reference_methods_instance_StopSound">
        <h2 style="margin-bottom: 8px;">instance.StopSound</h2>
        <code>instance.StopSound(sound)</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops a specific sound that is being played from the entity.</div>
        <div style="font-weight: bold; margin-top: 8px;">Parameters:</div>
        <ul style="margin-top: 0px; font-size: 14px;">
        <li>sound (Integer): The sound index to interrupt.</li>
        </ul>
        </p>
        <p id="Reference_methods_instance_StopAllSounds">
        <h2 style="margin-bottom: 8px;">instance.StopAllSounds</h2>
        <code>instance.StopAllSounds()</code>
        <div style="margin-top: 8px; font-size: 14px;">Stops all sounds the entity is playing.</div>
        </p>
        <p>26 out of 26 methods have descriptions. </p>
        <hr/>
        <h3>Instance fields</h3>
        <p id="Reference_fields_instance_X">
        <h3 style="margin-bottom: 8px;"><code>instance.X</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The X position of the entity.</div>
        </p>
        <p id="Reference_fields_instance_Y">
        <h3 style="margin-bottom: 8px;"><code>instance.Y</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The Y position of the entity.</div>
        </p>
        <p id="Reference_fields_instance_Z">
        <h3 style="margin-bottom: 8px;"><code>instance.Z</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The Z position of the entity.</div>
        </p>
        <p id="Reference_fields_instance_XSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.XSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal velocity of the entity.</div>
        </p>
        <p id="Reference_fields_instance_YSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.YSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical velocity of the entity.</div>
        </p>
        <p id="Reference_fields_instance_GroundSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.GroundSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The speed of the entity on the ground.</div>
        </p>
        <p id="Reference_fields_instance_Gravity">
        <h3 style="margin-bottom: 8px;"><code>instance.Gravity</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The gravity of the entity.</div>
        </p>
        <p id="Reference_fields_instance_AutoPhysics">
        <h3 style="margin-bottom: 8px;"><code>instance.AutoPhysics</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether <code><a href="#Reference_methods_instance_ApplyMotion">instance.ApplyMotion</a></code> is automatically called for this entity.</div>
        </p>
        <p id="Reference_fields_instance_Angle">
        <h3 style="margin-bottom: 8px;"><code>instance.Angle</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The angle of the entity on the ground, within the range of <code>0x00</code> - <code>0xFF</code>.</div>
        </p>
        <p id="Reference_fields_instance_AngleMode">
        <h3 style="margin-bottom: 8px;"><code>instance.AngleMode</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The angle mode of the entity on the ground, within the range of <code>0</code> - <code>3</code>.</div>
        </p>
        <p id="Reference_fields_instance_Ground">
        <h3 style="margin-bottom: 8px;"><code>instance.Ground</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity is on the ground.</div>
        </p>
        <p id="Reference_fields_instance_ScaleX">
        <h3 style="margin-bottom: 8px;"><code>instance.ScaleX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>1.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for scaling a sprite horizontally.</div>
        </p>
        <p id="Reference_fields_instance_ScaleY">
        <h3 style="margin-bottom: 8px;"><code>instance.ScaleY</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>1.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for scaling a sprite vertically.</div>
        </p>
        <p id="Reference_fields_instance_Rotation">
        <h3 style="margin-bottom: 8px;"><code>instance.Rotation</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal (radians)</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for rotating a sprite.</div>
        </p>
        <p id="Reference_fields_instance_Alpha">
        <h3 style="margin-bottom: 8px;"><code>instance.Alpha</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A field that may be used in <code>instance.Render</code> for changing the opacity of a sprite.</div>
        </p>
        <p id="Reference_fields_instance_Priority">
        <h3 style="margin-bottom: 8px;"><code>instance.Priority</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The priority, or draw group, where this entity is located.</div>
        </p>
        <p id="Reference_fields_instance_Depth">
        <h3 style="margin-bottom: 8px;"><code>instance.Depth</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The depth of the entity. Used for sorting entity draw order.</div>
        </p>
        <p id="Reference_fields_instance_Sprite">
        <h3 style="margin-bottom: 8px;"><code>instance.Sprite</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer (Resource)</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The sprite index of the entity.</div>
        </p>
        <p id="Reference_fields_instance_CurrentAnimation">
        <h3 style="margin-bottom: 8px;"><code>instance.CurrentAnimation</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The current sprite  animation index of the entity.</div>
        </p>
        <p id="Reference_fields_instance_CurrentFrame">
        <h3 style="margin-bottom: 8px;"><code>instance.CurrentFrame</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The current frame index of the entity's current animation.</div>
        </p>
        <p id="Reference_fields_instance_CurrentFrameCount">
        <h3 style="margin-bottom: 8px;"><code>instance.CurrentFrameCount</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The frame count of the entity's current animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationSpeed">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationSpeed</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The animation speed of the entity's animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationTimer">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationTimer</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The animation timer of the entity's animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationFrameDuration">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationFrameDuration</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The duration of the entity's current animation frame.</div>
        </p>
        <p id="Reference_fields_instance_AnimationLoopIndex">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationLoopIndex</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The loop index of entity's current animation.</div>
        </p>
        <p id="Reference_fields_instance_AnimationSpeedMult">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationSpeedMult</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>1.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The animation speed multiplier of the entity.</div>
        </p>
        <p id="Reference_fields_instance_AnimationSpeedAdd">
        <h3 style="margin-bottom: 8px;"><code>instance.AnimationSpeedAdd</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">This value is added to the result of <code><a href="#Reference_fields_instance_AnimationSpeed">instance.AnimationSpeed</a></code> * <code><a href="#Reference_fields_instance_AnimationSpeedMult">instance.AnimationSpeedMult</a></code> when the entity is being animated.</div>
        </p>
        <p id="Reference_fields_instance_AutoAnimate">
        <h3 style="margin-bottom: 8px;"><code>instance.AutoAnimate</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether <code><a href="#Reference_methods_instance_Animate">instance.Animate</a></code> is automatically called for this entity.</div>
        </p>
        <p id="Reference_fields_instance_OnScreen">
        <h3 style="margin-bottom: 8px;"><code>instance.OnScreen</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">See <code><a href="#Reference_fields_instance_InRange">instance.InRange</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_WasOffScreen">
        <h3 style="margin-bottom: 8px;"><code>instance.WasOffScreen</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Indicates if the entity was previously off-screen.</div>
        </p>
        <p id="Reference_fields_instance_OnScreenHitboxW">
        <h3 style="margin-bottom: 8px;"><code>instance.OnScreenHitboxW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Alias for <code><a href="#Reference_fields_instance_UpdateRegionW">instance.UpdateRegionW</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_OnScreenHitboxH">
        <h3 style="margin-bottom: 8px;"><code>instance.OnScreenHitboxH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Alias for <code><a href="#Reference_fields_instance_UpdateRegionH">instance.UpdateRegionH</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_ViewRenderFlag">
        <h3 style="margin-bottom: 8px;"><code>instance.ViewRenderFlag</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>~0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A bitfield that indicates in which views the entity renders. By default, this is on for every view.</div>
        </p>
        <p id="Reference_fields_instance_ViewOverrideFlag">
        <h3 style="margin-bottom: 8px;"><code>instance.ViewOverrideFlag</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A bitfield similar to <code><a href="#Reference_fields_instance_ViewRenderFlag">instance.ViewRenderFlag</a></code>. Bypasses each view's entity rendering toggle set by <code><a href="#Reference_functions_Scene_SetObjectViewRender">Scene.SetObjectViewRender</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionW">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal on-screen range where the entity can update. If this is set to <code>0.0</code>, the entity will update regardless of the camera's horizontal position.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionH">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical on-screen range where the entity can update. If this is set to <code>0.0</code>, the entity will update regardless of the camera's vertical position.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionTop">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionTop</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The top on-screen range where the entity can update. If set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_UpdateRegionH">UpdateRegionH</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionLeft">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionLeft</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The left on-screen range where the entity can update. If set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_UpdateRegionW">UpdateRegionW</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionRight">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionRight</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The left on-screen range where the entity can update. If set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_UpdateRegionW">UpdateRegionW</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_UpdateRegionBottom">
        <h3 style="margin-bottom: 8px;"><code>instance.UpdateRegionBottom</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The bottom on-screen range where the entity can update. If set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_UpdateRegionH">UpdateRegionH</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionW">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal on-screen range where the entity can render. If set to <code>0.0</code>, the entity will render regardless of the camera's horizontal position.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionH">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical on-screen range where the entity can render. If set to <code>0.0</code>, the entity will render regardless of the camera's vertical position.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionTop">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionTop</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The top on-screen range where the entity can render. If set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_RenderRegionH">RenderRegionH</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionLeft">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionLeft</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The left on-screen range where the entity can render. If this and <code><a href="#Reference_fields_instance_RenderRegionRight">instance.RenderRegionRight</a></code> are set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_RenderRegionW">RenderRegionW</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionRight">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionRight</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The left on-screen range where the entity can render. If this and <code><a href="#Reference_fields_instance_RenderRegionLeft">instance.RenderRegionLeft</a></code> are set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_RenderRegionW">RenderRegionW</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_RenderRegionBottom">
        <h3 style="margin-bottom: 8px;"><code>instance.RenderRegionBottom</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The bottom on-screen range where the entity can render. If set to <code>0.0</code>, the entity will use its <a href="#Reference_fields_instance_RenderRegionH">RenderRegionH</a> instead.</div>
        </p>
        <p id="Reference_fields_instance_HitboxW">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxW</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The width of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxH">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxH</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The height of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxOffX">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxOffX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The horizontal offset of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxOffY">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxOffY</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The vertical offset of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxLeft">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxLeft</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The left extent of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxTop">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxTop</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The top extent of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxRight">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxRight</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The right extent of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_HitboxBottom">
        <h3 style="margin-bottom: 8px;"><code>instance.HitboxBottom</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The bottom extent of the hitbox.</div>
        </p>
        <p id="Reference_fields_instance_FlipFlag">
        <h3 style="margin-bottom: 8px;"><code>instance.FlipFlag</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Bitfield that indicates whether the entity is X/Y flipped.</div>
        </p>
        <p id="Reference_fields_instance_VelocityX">
        <h3 style="margin-bottom: 8px;"><code>instance.VelocityX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_XSpeed">instance.XSpeed</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_VelocityX">
        <h3 style="margin-bottom: 8px;"><code>instance.VelocityX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_YSpeed">instance.YSpeed</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_GroundVel">
        <h3 style="margin-bottom: 8px;"><code>instance.GroundVel</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_GroundSpeed">instance.GroundSpeed</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_Direction">
        <h3 style="margin-bottom: 8px;"><code>instance.Direction</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_FlipFlag">instance.FlipFlag</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_OnGround">
        <h3 style="margin-bottom: 8px;"><code>instance.OnGround</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Similar to <code><a href="#Reference_fields_instance_Ground">instance.Ground</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_SlotID">
        <h3 style="margin-bottom: 8px;"><code>instance.SlotID</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>-1</code></div>
        <div style="margin-top: 8px; font-size: 14px;">If this entity was spawned from a scene file, this field contains the slot ID in which it was placed. If not, this field contains the default value of <code>-1</code>.</div>
        </p>
        <p id="Reference_fields_instance_ZDepth">
        <h3 style="margin-bottom: 8px;"><code>instance.ZDepth</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        </p>
        <p id="Reference_fields_instance_CollisionLayers">
        <h3 style="margin-bottom: 8px;"><code>instance.CollisionLayers</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">A bitfield containing which layers an entity is able to collide with.</div>
        </p>
        <p id="Reference_fields_instance_CollisionPlane">
        <h3 style="margin-bottom: 8px;"><code>instance.CollisionPlane</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        </p>
        <p id="Reference_fields_instance_CollisionMode">
        <h3 style="margin-bottom: 8px;"><code>instance.CollisionMode</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        </p>
        <p id="Reference_fields_instance_TileCollisions">
        <h3 style="margin-bottom: 8px;"><code>instance.TileCollisions</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        </p>
        <p id="Reference_fields_instance_Activity">
        <h3 style="margin-bottom: 8px;"><code>instance.Activity</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Enumeration</div>
        <div style="font-size: 14px;"><b>Default: </b><code>ACTIVE_BOUNDS</code></div>
        <div style="margin-top: 8px; font-size: 14px;">The active status for this entity.</div>
        </p>
        <p id="Reference_fields_instance_InRange">
        <h3 style="margin-bottom: 8px;"><code>instance.InRange</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether this entity is within active range; see <code><a href="#Reference_fields_instance_Activity">instance.Activity</a></code>.</div>
        </p>
        <p id="Reference_fields_instance_SensorX">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorX</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will contain the horizontal position of where the entity collided.</div>
        </p>
        <p id="Reference_fields_instance_SensorY">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorY</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0.0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will contain the vertical position of where the entity collided.</div>
        </p>
        <p id="Reference_fields_instance_SensorAngle">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorAngle</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will be <code>true</code> if the entity collided with a tile, <code>false</code> otherwise.</div>
        </p>
        <p id="Reference_fields_instance_SensorAngle">
        <h3 style="margin-bottom: 8px;"><code>instance.SensorAngle</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>0</code></div>
        <div style="margin-top: 8px; font-size: 14px;">After a successful call to <code><a href="#Reference_functions_TileCollision_Line">TileCollision.Line</a></code>, this value will contain the angle of the tile within the range of <code>0x00</code> - <code>0xFF</code>.</div>
        </p>
        <p id="Reference_fields_instance_Active">
        <h3 style="margin-bottom: 8px;"><code>instance.Active</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity is active. If set to false, the entity is removed at the end of the frame.</div>
        </p>
        <p id="Reference_fields_instance_Pauseable">
        <h3 style="margin-bottom: 8px;"><code>instance.Pauseable</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity stops updating when the scene is paused.</div>
        </p>
        <p id="Reference_fields_instance_Persistent">
        <h3 style="margin-bottom: 8px;"><code>instance.Persistent</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>false</code></div>
        <div style="margin-top: 8px; font-size: 14px;">See <code><a href="#Reference_fields_instance_Persistence">instance.Persistence</a></code> instead.</div>
        </p>
        <p id="Reference_fields_instance_Interactable">
        <h3 style="margin-bottom: 8px;"><code>instance.Interactable</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Boolean</div>
        <div style="font-size: 14px;"><b>Default: </b><code>true</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity can be interacted with. If set to <code>false</code>, the entity will not be included in <code>with</code> iterations.</div>
        </p>
        <p id="Reference_fields_instance_Persistence">
        <h3 style="margin-bottom: 8px;"><code>instance.Persistence</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="font-size: 14px;"><b>Default: </b><code>Persistence_NONE</code></div>
        <div style="margin-top: 8px; font-size: 14px;">Whether the entity persists between scenes.</div>
        </p>
        <p>73 out of 77 fields have descriptions. </p>
        <hr/>
        <h3>Enums</h3>
        <p id="Reference_enums_ACTIVE_NEVER">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_NEVER</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity never updates. Object never runs GlobalUpdate.</div>
        </p>
        <p id="Reference_enums_ACTIVE_ALWAYS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_ALWAYS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity always updates. Object always runs GlobalUpdate.</div>
        </p>
        <p id="Reference_enums_ACTIVE_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity updates no matter where it is located on the scene if the scene is paused. Object runs GlobalUpdate if the scene is not paused.</div>
        </p>
        <p id="Reference_enums_ACTIVE_PAUSED">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_PAUSED</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates if the scene is paused. Object runs GlobalUpdate if the scene is paused.</div>
        </p>
        <p id="Reference_enums_ACTIVE_BOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_BOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates if it is within its bounds (uses UpdateRegionW and uses UpdateRegionH).</div>
        </p>
        <p id="Reference_enums_ACTIVE_XBOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_XBOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates within an X bound. (only uses UpdateRegionW)</div>
        </p>
        <p id="Reference_enums_ACTIVE_YBOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_YBOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity only updates within a Y bound. (only uses UpdateRegionH)</div>
        </p>
        <p id="Reference_enums_ACTIVE_RBOUNDS">
        <h3 style="margin-bottom: 8px;"><code>ACTIVE_RBOUNDS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity updates within a radius. (uses UpdateRegionW)</div>
        </p>
        <p id="Reference_enums_Axis_LEFTX">
        <h3 style="margin-bottom: 8px;"><code>Axis_LEFTX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller stick X.</div>
        </p>
        <p id="Reference_enums_Axis_LEFTY">
        <h3 style="margin-bottom: 8px;"><code>Axis_LEFTY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller stick Y.</div>
        </p>
        <p id="Reference_enums_Axis_RIGHTX">
        <h3 style="margin-bottom: 8px;"><code>Axis_RIGHTX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller stick X.</div>
        </p>
        <p id="Reference_enums_Axis_RIGHTY">
        <h3 style="margin-bottom: 8px;"><code>Axis_RIGHTY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller stick Y.</div>
        </p>
        <p id="Reference_enums_Axis_TRIGGERLEFT">
        <h3 style="margin-bottom: 8px;"><code>Axis_TRIGGERLEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller trigger.</div>
        </p>
        <p id="Reference_enums_Axis_TRIGGERRIGHT">
        <h3 style="margin-bottom: 8px;"><code>Axis_TRIGGERRIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller trigger.</div>
        </p>
        <p id="Reference_enums_BlendFactor_ZERO">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_ZERO</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (0, 0, 0, 0)</div>
        </p>
        <p id="Reference_enums_BlendFactor_ONE">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_ONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1, 1, 1, 1)</div>
        </p>
        <p id="Reference_enums_BlendFactor_SRC_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_SRC_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (Rs, Gs, Bs, As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_SRC_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_SRC_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-Rs, 1-Gs, 1-Bs, 1-As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_SRC_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_SRC_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (As, As, As, As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_SRC_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_SRC_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-As, 1-As, 1-As, 1-As)</div>
        </p>
        <p id="Reference_enums_BlendFactor_DST_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_DST_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (Rd, Gd, Bd, Ad)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_DST_COLOR">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_DST_COLOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-Rd, 1-Gd, 1-Bd, 1-Ad)</div>
        </p>
        <p id="Reference_enums_BlendFactor_DST_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_DST_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (Ad, Ad, Ad, Ad)</div>
        </p>
        <p id="Reference_enums_BlendFactor_INV_DST_ALPHA">
        <h3 style="margin-bottom: 8px;"><code>BlendFactor_INV_DST_ALPHA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blend factor: (1-Ad, 1-Ad, 1-Ad, 1-Ad)</div>
        </p>
        <p id="Reference_enums_BlendMode_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Normal pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_ADD">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_ADD</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Additive pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_SUBTRACT">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_SUBTRACT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Subtractive pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_MAX">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_MAX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(hardware-renderer only) Maximum pixel blending.</div>
        </p>
        <p id="Reference_enums_BlendMode_MATCH_EQUAL">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_MATCH_EQUAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Draw pixels only where it matches the Comparison Color.</div>
        </p>
        <p id="Reference_enums_BlendMode_MATCH_NOT_EQUAL">
        <h3 style="margin-bottom: 8px;"><code>BlendMode_MATCH_NOT_EQUAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Draw pixels only where it does not match the Comparison Color.</div>
        </p>
        <p id="Reference_enums_Button_A">
        <h3 style="margin-bottom: 8px;"><code>Button_A</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Bottom controller face button.</div>
        </p>
        <p id="Reference_enums_Button_B">
        <h3 style="margin-bottom: 8px;"><code>Button_B</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right controller face button.</div>
        </p>
        <p id="Reference_enums_Button_X">
        <h3 style="margin-bottom: 8px;"><code>Button_X</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left controller face button.</div>
        </p>
        <p id="Reference_enums_Button_Y">
        <h3 style="margin-bottom: 8px;"><code>Button_Y</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Top controller face button.</div>
        </p>
        <p id="Reference_enums_Button_BACK">
        <h3 style="margin-bottom: 8px;"><code>Button_BACK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller Back button.</div>
        </p>
        <p id="Reference_enums_Button_GUIDE">
        <h3 style="margin-bottom: 8px;"><code>Button_GUIDE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller Guide button.</div>
        </p>
        <p id="Reference_enums_Button_START">
        <h3 style="margin-bottom: 8px;"><code>Button_START</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller Start button.</div>
        </p>
        <p id="Reference_enums_Button_LEFTSTICK">
        <h3 style="margin-bottom: 8px;"><code>Button_LEFTSTICK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller left stick click.</div>
        </p>
        <p id="Reference_enums_Button_RIGHTSTICK">
        <h3 style="margin-bottom: 8px;"><code>Button_RIGHTSTICK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller right stick click.</div>
        </p>
        <p id="Reference_enums_Button_LEFTSHOULDER">
        <h3 style="margin-bottom: 8px;"><code>Button_LEFTSHOULDER</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller left shoulder.</div>
        </p>
        <p id="Reference_enums_Button_RIGHTSHOULDER">
        <h3 style="margin-bottom: 8px;"><code>Button_RIGHTSHOULDER</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller right shoulder.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_UP">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_UP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Up.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_DOWN">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_DOWN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Down.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_LEFT">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_LEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Left.</div>
        </p>
        <p id="Reference_enums_Button_DPAD_RIGHT">
        <h3 style="margin-bottom: 8px;"><code>Button_DPAD_RIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller D-Pad Right.</div>
        </p>
        <p id="Reference_enums_Button_SHARE">
        <h3 style="margin-bottom: 8px;"><code>Button_SHARE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Share/Capture controller button.</div>
        </p>
        <p id="Reference_enums_Button_MICROPHONE">
        <h3 style="margin-bottom: 8px;"><code>Button_MICROPHONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Microphone controller button.</div>
        </p>
        <p id="Reference_enums_Button_TOUCHPAD">
        <h3 style="margin-bottom: 8px;"><code>Button_TOUCHPAD</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Touchpad controller button.</div>
        </p>
        <p id="Reference_enums_Button_PADDLE1">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE1</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P1 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_PADDLE2">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE2</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P2 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_PADDLE3">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE3</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P3 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_PADDLE4">
        <h3 style="margin-bottom: 8px;"><code>Button_PADDLE4</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P4 Paddle (Xbox Elite controllers.).</div>
        </p>
        <p id="Reference_enums_Button_MISC1">
        <h3 style="margin-bottom: 8px;"><code>Button_MISC1</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller button for miscellaneous purposes.</div>
        </p>
        <p id="Reference_enums_CMODE_FLOOR">
        <h3 style="margin-bottom: 8px;"><code>CMODE_FLOOR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with a floor.</div>
        </p>
        <p id="Reference_enums_CMODE_LWALL">
        <h3 style="margin-bottom: 8px;"><code>CMODE_LWALL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with the left side of a wall.</div>
        </p>
        <p id="Reference_enums_CMODE_ROOF">
        <h3 style="margin-bottom: 8px;"><code>CMODE_ROOF</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with a roof.</div>
        </p>
        <p id="Reference_enums_CMODE_RWALL">
        <h3 style="margin-bottom: 8px;"><code>CMODE_RWALL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects to collide with the right side of a wall.</div>
        </p>
        <p id="Reference_enums_C_NONE">
        <h3 style="margin-bottom: 8px;"><code>C_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">No collided side.</div>
        </p>
        <p id="Reference_enums_C_TOP">
        <h3 style="margin-bottom: 8px;"><code>C_TOP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Top collided side.</div>
        </p>
        <p id="Reference_enums_C_LEFT">
        <h3 style="margin-bottom: 8px;"><code>C_LEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left collided side.</div>
        </p>
        <p id="Reference_enums_C_RIGHT">
        <h3 style="margin-bottom: 8px;"><code>C_RIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right collided side.</div>
        </p>
        <p id="Reference_enums_C_BOTTOM">
        <h3 style="margin-bottom: 8px;"><code>C_BOTTOM</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Bottom collided side.</div>
        </p>
        <p id="Reference_enums_Controller_Xbox360">
        <h3 style="margin-bottom: 8px;"><code>Controller_Xbox360</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox 360 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_XboxOne">
        <h3 style="margin-bottom: 8px;"><code>Controller_XboxOne</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox One controller type.</div>
        </p>
        <p id="Reference_enums_Controller_XboxSeriesXS">
        <h3 style="margin-bottom: 8px;"><code>Controller_XboxSeriesXS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox Series XS controller type.</div>
        </p>
        <p id="Reference_enums_Controller_XboxElite">
        <h3 style="margin-bottom: 8px;"><code>Controller_XboxElite</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox Elite controller type.</div>
        </p>
        <p id="Reference_enums_Controller_PS3">
        <h3 style="margin-bottom: 8px;"><code>Controller_PS3</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation 3 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_PS4">
        <h3 style="margin-bottom: 8px;"><code>Controller_PS4</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation 4 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_PS5">
        <h3 style="margin-bottom: 8px;"><code>Controller_PS5</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation 5 controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchJoyConPair">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchJoyConPair</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Joy-Con pair controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchJoyConLeft">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchJoyConLeft</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Joy-Con L controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchJoyConRight">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchJoyConRight</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Joy-Con R controller type.</div>
        </p>
        <p id="Reference_enums_Controller_SwitchPro">
        <h3 style="margin-bottom: 8px;"><code>Controller_SwitchPro</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch Pro Controller controller type.</div>
        </p>
        <p id="Reference_enums_Controller_Stadia">
        <h3 style="margin-bottom: 8px;"><code>Controller_Stadia</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Stadia Controller controller type.</div>
        </p>
        <p id="Reference_enums_Controller_AmazonLuna">
        <h3 style="margin-bottom: 8px;"><code>Controller_AmazonLuna</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Amazon Luna controller type.</div>
        </p>
        <p id="Reference_enums_Controller_NvidiaShield">
        <h3 style="margin-bottom: 8px;"><code>Controller_NvidiaShield</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nvidia Shield TV controller type.</div>
        </p>
        <p id="Reference_enums_Controller_Unknown">
        <h3 style="margin-bottom: 8px;"><code>Controller_Unknown</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Unknown or unrecognized controller type.</div>
        </p>
        <p id="Reference_enums_DrawBehavior_HorizontalParallax">
        <h3 style="margin-bottom: 8px;"><code>DrawBehavior_HorizontalParallax</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Horizontal parallax.</div>
        </p>
        <p id="Reference_enums_DrawBehavior_VerticalParallax">
        <h3 style="margin-bottom: 8px;"><code>DrawBehavior_VerticalParallax</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Do not use.</div>
        </p>
        <p id="Reference_enums_DrawBehavior_CustomTileScanLines">
        <h3 style="margin-bottom: 8px;"><code>DrawBehavior_CustomTileScanLines</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Custom scanline behavior.</div>
        </p>
        <p id="Reference_enums_DrawMode_LINES">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LINES</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Draws the faces with lines, using a solid color determined by the face's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_POLYGONS">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POLYGONS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Draws the faces with polygons, using a solid color determined by the face's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_POINTS">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POINTS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(hardware-renderer only) Draws the faces with points, using a solid color determined by the face's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_FLAT_LIGHTING">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FLAT_LIGHTING</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables lighting, using a color for the primitive calculated with the vertex normals, and the primitive's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_SMOOTH_LIGHTING">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_SMOOTH_LIGHTING</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables lighting, using a color smoothly spread across the primitive calculated with the vertex normals, and the primitive's existing colors (and if not, the blend color.)</div>
        </p>
        <p id="Reference_enums_DrawMode_TEXTURED">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_TEXTURED</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables texturing.</div>
        </p>
        <p id="Reference_enums_DrawMode_AFFINE">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_AFFINE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Uses affine texture mapping.</div>
        </p>
        <p id="Reference_enums_DrawMode_DEPTH_TEST">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_DEPTH_TEST</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Enables depth testing.</div>
        </p>
        <p id="Reference_enums_DrawMode_FOG">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FOG</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Enables fog.</div>
        </p>
        <p id="Reference_enums_DrawMode_ORTHOGRAPHIC">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_ORTHOGRAPHIC</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">(software-renderer only) Uses orthographic perspective projection.</div>
        </p>
        <p id="Reference_enums_DrawMode_LINES_FLAT">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LINES_FLAT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></code> and <code><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_LINES_SMOOTH">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LINES_SMOOTH</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></code> and <code><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_POLYGONS_FLAT">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POLYGONS_FLAT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></code> and <code><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_POLYGONS_SMOOTH">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_POLYGONS_SMOOTH</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Combination of <code><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></code> and <code><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></code>.</div>
        </p>
        <p id="Reference_enums_DrawMode_PrimitiveMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_PrimitiveMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code><a href="#Reference_enums_DrawMode_LINES">DrawMode_LINES</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_POLYGONS">DrawMode_POLYGONS</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_POINTS">DrawMode_POINTS</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_DrawMode_LightingMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_LightingMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code><a href="#Reference_enums_DrawMode_FLAT_LIGHTING">DrawMode_FLAT_LIGHTING</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_SMOOTH_LIGHTING">DrawMode_SMOOTH_LIGHTING</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_DrawMode_FillTypeMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FillTypeMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code><a href="#Reference_enums_DrawMode_PrimitiveMask">DrawMode_PrimitiveMask</a></code><code> | </code><code><a href="#Reference_enums_DrawMode_LightingMask">DrawMode_LightingMask</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_DrawMode_FlagsMask">
        <h3 style="margin-bottom: 8px;"><code>DrawMode_FlagsMask</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Masks out <code>~</code><code><a href="#Reference_enums_DrawMode_FillTypeMask">DrawMode_FillTypeMask</a></code> out of a draw mode.</div>
        </p>
        <p id="Reference_enums_FLIP_NONE">
        <h3 style="margin-bottom: 8px;"><code>FLIP_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">No flip.</div>
        </p>
        <p id="Reference_enums_FLIP_X">
        <h3 style="margin-bottom: 8px;"><code>FLIP_X</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Horizontal flip.</div>
        </p>
        <p id="Reference_enums_FLIP_Y">
        <h3 style="margin-bottom: 8px;"><code>FLIP_Y</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Vertical flip.</div>
        </p>
        <p id="Reference_enums_FLIP_XY">
        <h3 style="margin-bottom: 8px;"><code>FLIP_XY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Horizontal and vertical flip.</div>
        </p>
        <p id="Reference_enums_FaceCull_None">
        <h3 style="margin-bottom: 8px;"><code>FaceCull_None</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Disables face culling.</div>
        </p>
        <p id="Reference_enums_FaceCull_Back">
        <h3 style="margin-bottom: 8px;"><code>FaceCull_Back</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Culls back faces.</div>
        </p>
        <p id="Reference_enums_FaceCull_Front">
        <h3 style="margin-bottom: 8px;"><code>FaceCull_Front</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Culls front faces.</div>
        </p>
        <p id="Reference_enums_FileStream_READ_ACCESS">
        <h3 style="margin-bottom: 8px;"><code>FileStream_READ_ACCESS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Read file access mode. (<code>rb</code>)</div>
        </p>
        <p id="Reference_enums_FileStream_WRITE_ACCESS">
        <h3 style="margin-bottom: 8px;"><code>FileStream_WRITE_ACCESS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Write file access mode. (<code>wb</code>)</div>
        </p>
        <p id="Reference_enums_FileStream_APPEND_ACCESS">
        <h3 style="margin-bottom: 8px;"><code>FileStream_APPEND_ACCESS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Append file access mode. (<code>ab</code>)</div>
        </p>
        <p id="Reference_enums_Filter_NONE">
        <h3 style="margin-bottom: 8px;"><code>Filter_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Disables the current filter.</div>
        </p>
        <p id="Reference_enums_Filter_BLACK_AND_WHITE">
        <h3 style="margin-bottom: 8px;"><code>Filter_BLACK_AND_WHITE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Black and white filter.</div>
        </p>
        <p id="Reference_enums_Filter_INVERT">
        <h3 style="margin-bottom: 8px;"><code>Filter_INVERT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Invert filter.</div>
        </p>
        <p id="Reference_enums_FogEquation_Linear">
        <h3 style="margin-bottom: 8px;"><code>FogEquation_Linear</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Linear fog equation.</div>
        </p>
        <p id="Reference_enums_FogEquation_Exp">
        <h3 style="margin-bottom: 8px;"><code>FogEquation_Exp</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Exponential fog equation.</div>
        </p>
        <p id="Reference_enums_GeoBooleanOp_Intersection">
        <h3 style="margin-bottom: 8px;"><code>GeoBooleanOp_Intersection</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">AND operation.</div>
        </p>
        <p id="Reference_enums_GeoBooleanOp_Union">
        <h3 style="margin-bottom: 8px;"><code>GeoBooleanOp_Union</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">OR operation.</div>
        </p>
        <p id="Reference_enums_GeoBooleanOp_Difference">
        <h3 style="margin-bottom: 8px;"><code>GeoBooleanOp_Difference</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">NOT operation.</div>
        </p>
        <p id="Reference_enums_GeoBooleanOp_ExclusiveOr">
        <h3 style="margin-bottom: 8px;"><code>GeoBooleanOp_ExclusiveOr</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">XOR operation.</div>
        </p>
        <p id="Reference_enums_GeoFillRule_EvenOdd">
        <h3 style="margin-bottom: 8px;"><code>GeoFillRule_EvenOdd</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Only odd numbered subregions are filled.</div>
        </p>
        <p id="Reference_enums_GeoFillRule_NonZero">
        <h3 style="margin-bottom: 8px;"><code>GeoFillRule_NonZero</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Only non-zero subregions are filled.</div>
        </p>
        <p id="Reference_enums_GeoFillRule_Positive">
        <h3 style="margin-bottom: 8px;"><code>GeoFillRule_Positive</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Only subregions that have winding counts greater than zero (> 0) are filled.</div>
        </p>
        <p id="Reference_enums_GeoFillRule_Negative">
        <h3 style="margin-bottom: 8px;"><code>GeoFillRule_Negative</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Only subregions that have winding counts lesser than zero (< 0) are filled.</div>
        </p>
        <p id="Reference_enums_HitboxSide_LEFT">
        <h3 style="margin-bottom: 8px;"><code>HitboxSide_LEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left side, slot 0 of a hitbox array.</div>
        </p>
        <p id="Reference_enums_HitboxSide_TOP">
        <h3 style="margin-bottom: 8px;"><code>HitboxSide_TOP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Top side, slot 1 of a hitbox array.</div>
        </p>
        <p id="Reference_enums_HitboxSide_RIGHT">
        <h3 style="margin-bottom: 8px;"><code>HitboxSide_RIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right side, slot 2 of a hitbox array.</div>
        </p>
        <p id="Reference_enums_HitboxSide_BOTTOM">
        <h3 style="margin-bottom: 8px;"><code>HitboxSide_BOTTOM</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Bottom side, slot 3 of a hitbox array.</div>
        </p>
        <p id="Reference_enums_InputBind_Keyboard">
        <h3 style="margin-bottom: 8px;"><code>InputBind_Keyboard</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keyboard key input bind.</div>
        </p>
        <p id="Reference_enums_InputBind_ControllerButton">
        <h3 style="margin-bottom: 8px;"><code>InputBind_ControllerButton</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller button input bind.</div>
        </p>
        <p id="Reference_enums_InputBind_ControllerAxis">
        <h3 style="margin-bottom: 8px;"><code>InputBind_ControllerAxis</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller axis input bind.</div>
        </p>
        <p id="Reference_enums_InputDevice_Keyboard">
        <h3 style="margin-bottom: 8px;"><code>InputDevice_Keyboard</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keyboard input device.</div>
        </p>
        <p id="Reference_enums_InputDevice_Controller">
        <h3 style="margin-bottom: 8px;"><code>InputDevice_Controller</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Controller input device.</div>
        </p>
        <p id="Reference_enums_KeyBind_Fullscreen">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_Fullscreen</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Fullscreen keybind.</div>
        </p>
        <p id="Reference_enums_KeyBind_DevRestartApp">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevRestartApp</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">App restart keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevRestartScene">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevRestartScene</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Scene restart keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevRecompile">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevRecompile</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Script recompile keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevPerfSnapshot">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevPerfSnapshot</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Performance snapshot keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_Fullscreen">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_Fullscreen</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Scene layer info keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevFastForward">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevFastForward</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Fast forward keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevFrameStepper">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevFrameStepper</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Frame stepper keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevStepFrame">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevStepFrame</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Step frame keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevTileCol">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevTileCol</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Tile collision display keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevObjectRegions">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevObjectRegions</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Object regions display keybind. (dev)</div>
        </p>
        <p id="Reference_enums_KeyBind_DevQuit">
        <h3 style="margin-bottom: 8px;"><code>KeyBind_DevQuit</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">App quit keybind. (dev)</div>
        </p>
        <p id="Reference_enums_Key_UNKNOWN">
        <h3 style="margin-bottom: 8px;"><code>Key_UNKNOWN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Invalid key.</div>
        </p>
        <p id="Reference_enums_Key_A">
        <h3 style="margin-bottom: 8px;"><code>Key_A</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">A key.</div>
        </p>
        <p id="Reference_enums_Key_B">
        <h3 style="margin-bottom: 8px;"><code>Key_B</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">B key.</div>
        </p>
        <p id="Reference_enums_Key_C">
        <h3 style="margin-bottom: 8px;"><code>Key_C</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">C key.</div>
        </p>
        <p id="Reference_enums_Key_D">
        <h3 style="margin-bottom: 8px;"><code>Key_D</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">D key.</div>
        </p>
        <p id="Reference_enums_Key_E">
        <h3 style="margin-bottom: 8px;"><code>Key_E</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">E key.</div>
        </p>
        <p id="Reference_enums_Key_F">
        <h3 style="margin-bottom: 8px;"><code>Key_F</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F key.</div>
        </p>
        <p id="Reference_enums_Key_G">
        <h3 style="margin-bottom: 8px;"><code>Key_G</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">G key.</div>
        </p>
        <p id="Reference_enums_Key_H">
        <h3 style="margin-bottom: 8px;"><code>Key_H</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">H key.</div>
        </p>
        <p id="Reference_enums_Key_I">
        <h3 style="margin-bottom: 8px;"><code>Key_I</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">I key.</div>
        </p>
        <p id="Reference_enums_Key_J">
        <h3 style="margin-bottom: 8px;"><code>Key_J</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">J key.</div>
        </p>
        <p id="Reference_enums_Key_K">
        <h3 style="margin-bottom: 8px;"><code>Key_K</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">K key.</div>
        </p>
        <p id="Reference_enums_Key_L">
        <h3 style="margin-bottom: 8px;"><code>Key_L</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">L key.</div>
        </p>
        <p id="Reference_enums_Key_M">
        <h3 style="margin-bottom: 8px;"><code>Key_M</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">M key.</div>
        </p>
        <p id="Reference_enums_Key_N">
        <h3 style="margin-bottom: 8px;"><code>Key_N</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">N key.</div>
        </p>
        <p id="Reference_enums_Key_O">
        <h3 style="margin-bottom: 8px;"><code>Key_O</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">O key.</div>
        </p>
        <p id="Reference_enums_Key_P">
        <h3 style="margin-bottom: 8px;"><code>Key_P</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">P key.</div>
        </p>
        <p id="Reference_enums_Key_Q">
        <h3 style="margin-bottom: 8px;"><code>Key_Q</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Q key.</div>
        </p>
        <p id="Reference_enums_Key_R">
        <h3 style="margin-bottom: 8px;"><code>Key_R</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">R key.</div>
        </p>
        <p id="Reference_enums_Key_S">
        <h3 style="margin-bottom: 8px;"><code>Key_S</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">S key.</div>
        </p>
        <p id="Reference_enums_Key_T">
        <h3 style="margin-bottom: 8px;"><code>Key_T</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">T key.</div>
        </p>
        <p id="Reference_enums_Key_U">
        <h3 style="margin-bottom: 8px;"><code>Key_U</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">U key.</div>
        </p>
        <p id="Reference_enums_Key_V">
        <h3 style="margin-bottom: 8px;"><code>Key_V</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">V key.</div>
        </p>
        <p id="Reference_enums_Key_W">
        <h3 style="margin-bottom: 8px;"><code>Key_W</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">W key.</div>
        </p>
        <p id="Reference_enums_Key_X">
        <h3 style="margin-bottom: 8px;"><code>Key_X</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">X key.</div>
        </p>
        <p id="Reference_enums_Key_Y">
        <h3 style="margin-bottom: 8px;"><code>Key_Y</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Y key.</div>
        </p>
        <p id="Reference_enums_Key_Z">
        <h3 style="margin-bottom: 8px;"><code>Key_Z</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Z key.</div>
        </p>
        <p id="Reference_enums_Key_1">
        <h3 style="margin-bottom: 8px;"><code>Key_1</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 1 key.</div>
        </p>
        <p id="Reference_enums_Key_2">
        <h3 style="margin-bottom: 8px;"><code>Key_2</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 2 key.</div>
        </p>
        <p id="Reference_enums_Key_3">
        <h3 style="margin-bottom: 8px;"><code>Key_3</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 3 key.</div>
        </p>
        <p id="Reference_enums_Key_4">
        <h3 style="margin-bottom: 8px;"><code>Key_4</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 4 key.</div>
        </p>
        <p id="Reference_enums_Key_5">
        <h3 style="margin-bottom: 8px;"><code>Key_5</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 5 key.</div>
        </p>
        <p id="Reference_enums_Key_6">
        <h3 style="margin-bottom: 8px;"><code>Key_6</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 6 key.</div>
        </p>
        <p id="Reference_enums_Key_7">
        <h3 style="margin-bottom: 8px;"><code>Key_7</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 7 key.</div>
        </p>
        <p id="Reference_enums_Key_8">
        <h3 style="margin-bottom: 8px;"><code>Key_8</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 8 key.</div>
        </p>
        <p id="Reference_enums_Key_9">
        <h3 style="margin-bottom: 8px;"><code>Key_9</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 9 key.</div>
        </p>
        <p id="Reference_enums_Key_0">
        <h3 style="margin-bottom: 8px;"><code>Key_0</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number 0 key.</div>
        </p>
        <p id="Reference_enums_Key_RETURN">
        <h3 style="margin-bottom: 8px;"><code>Key_RETURN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Return key.</div>
        </p>
        <p id="Reference_enums_Key_ESCAPE">
        <h3 style="margin-bottom: 8px;"><code>Key_ESCAPE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Escape key.</div>
        </p>
        <p id="Reference_enums_Key_BACKSPACE">
        <h3 style="margin-bottom: 8px;"><code>Key_BACKSPACE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Backspace key.</div>
        </p>
        <p id="Reference_enums_Key_TAB">
        <h3 style="margin-bottom: 8px;"><code>Key_TAB</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Tab key.</div>
        </p>
        <p id="Reference_enums_Key_SPACE">
        <h3 style="margin-bottom: 8px;"><code>Key_SPACE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Space Bar key.</div>
        </p>
        <p id="Reference_enums_Key_MINUS">
        <h3 style="margin-bottom: 8px;"><code>Key_MINUS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Minus key.</div>
        </p>
        <p id="Reference_enums_Key_EQUALS">
        <h3 style="margin-bottom: 8px;"><code>Key_EQUALS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Equals key.</div>
        </p>
        <p id="Reference_enums_Key_LEFTBRACKET">
        <h3 style="margin-bottom: 8px;"><code>Key_LEFTBRACKET</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left Bracket key.</div>
        </p>
        <p id="Reference_enums_Key_RIGHTBRACKET">
        <h3 style="margin-bottom: 8px;"><code>Key_RIGHTBRACKET</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right Bracket key.</div>
        </p>
        <p id="Reference_enums_Key_BACKSLASH">
        <h3 style="margin-bottom: 8px;"><code>Key_BACKSLASH</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Backslash key.</div>
        </p>
        <p id="Reference_enums_Key_SEMICOLON">
        <h3 style="margin-bottom: 8px;"><code>Key_SEMICOLON</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Semicolon key.</div>
        </p>
        <p id="Reference_enums_Key_APOSTROPHE">
        <h3 style="margin-bottom: 8px;"><code>Key_APOSTROPHE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Apostrophe key.</div>
        </p>
        <p id="Reference_enums_Key_GRAVE">
        <h3 style="margin-bottom: 8px;"><code>Key_GRAVE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Grave key.</div>
        </p>
        <p id="Reference_enums_Key_COMMA">
        <h3 style="margin-bottom: 8px;"><code>Key_COMMA</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Comma key.</div>
        </p>
        <p id="Reference_enums_Key_PERIOD">
        <h3 style="margin-bottom: 8px;"><code>Key_PERIOD</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Period key.</div>
        </p>
        <p id="Reference_enums_Key_SLASH">
        <h3 style="margin-bottom: 8px;"><code>Key_SLASH</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">SLASH key.</div>
        </p>
        <p id="Reference_enums_Key_CAPSLOCK">
        <h3 style="margin-bottom: 8px;"><code>Key_CAPSLOCK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Caps Lock key.</div>
        </p>
        <p id="Reference_enums_Key_F1">
        <h3 style="margin-bottom: 8px;"><code>Key_F1</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F1 key.</div>
        </p>
        <p id="Reference_enums_Key_F2">
        <h3 style="margin-bottom: 8px;"><code>Key_F2</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F2 key.</div>
        </p>
        <p id="Reference_enums_Key_F3">
        <h3 style="margin-bottom: 8px;"><code>Key_F3</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F3 key.</div>
        </p>
        <p id="Reference_enums_Key_F4">
        <h3 style="margin-bottom: 8px;"><code>Key_F4</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F4 key.</div>
        </p>
        <p id="Reference_enums_Key_F5">
        <h3 style="margin-bottom: 8px;"><code>Key_F5</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F5 key.</div>
        </p>
        <p id="Reference_enums_Key_F6">
        <h3 style="margin-bottom: 8px;"><code>Key_F6</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F6 key.</div>
        </p>
        <p id="Reference_enums_Key_F7">
        <h3 style="margin-bottom: 8px;"><code>Key_F7</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F7 key.</div>
        </p>
        <p id="Reference_enums_Key_F8">
        <h3 style="margin-bottom: 8px;"><code>Key_F8</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F8 key.</div>
        </p>
        <p id="Reference_enums_Key_F9">
        <h3 style="margin-bottom: 8px;"><code>Key_F9</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F9 key.</div>
        </p>
        <p id="Reference_enums_Key_F10">
        <h3 style="margin-bottom: 8px;"><code>Key_F10</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F10 key.</div>
        </p>
        <p id="Reference_enums_Key_F11">
        <h3 style="margin-bottom: 8px;"><code>Key_F11</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F11 key.</div>
        </p>
        <p id="Reference_enums_Key_F12">
        <h3 style="margin-bottom: 8px;"><code>Key_F12</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">F12 key.</div>
        </p>
        <p id="Reference_enums_Key_PRINTSCREEN">
        <h3 style="margin-bottom: 8px;"><code>Key_PRINTSCREEN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Print Screen key.</div>
        </p>
        <p id="Reference_enums_Key_SCROLLLOCK">
        <h3 style="margin-bottom: 8px;"><code>Key_SCROLLLOCK</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Scroll Lock key.</div>
        </p>
        <p id="Reference_enums_Key_PAUSE">
        <h3 style="margin-bottom: 8px;"><code>Key_PAUSE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Pause/Break key.</div>
        </p>
        <p id="Reference_enums_Key_INSERT">
        <h3 style="margin-bottom: 8px;"><code>Key_INSERT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Insert key.</div>
        </p>
        <p id="Reference_enums_Key_HOME">
        <h3 style="margin-bottom: 8px;"><code>Key_HOME</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Home key.</div>
        </p>
        <p id="Reference_enums_Key_PAGEUP">
        <h3 style="margin-bottom: 8px;"><code>Key_PAGEUP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Page Up key.</div>
        </p>
        <p id="Reference_enums_Key_DELETE">
        <h3 style="margin-bottom: 8px;"><code>Key_DELETE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Delete key.</div>
        </p>
        <p id="Reference_enums_Key_END">
        <h3 style="margin-bottom: 8px;"><code>Key_END</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">End key.</div>
        </p>
        <p id="Reference_enums_Key_PAGEDOWN">
        <h3 style="margin-bottom: 8px;"><code>Key_PAGEDOWN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Page Down key.</div>
        </p>
        <p id="Reference_enums_Key_RIGHT">
        <h3 style="margin-bottom: 8px;"><code>Key_RIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Arrow Right key.</div>
        </p>
        <p id="Reference_enums_Key_LEFT">
        <h3 style="margin-bottom: 8px;"><code>Key_LEFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Arrow Left key.</div>
        </p>
        <p id="Reference_enums_Key_DOWN">
        <h3 style="margin-bottom: 8px;"><code>Key_DOWN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Arrow Down key.</div>
        </p>
        <p id="Reference_enums_Key_UP">
        <h3 style="margin-bottom: 8px;"><code>Key_UP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Arrow Up key.</div>
        </p>
        <p id="Reference_enums_Key_NUMLOCKCLEAR">
        <h3 style="margin-bottom: 8px;"><code>Key_NUMLOCKCLEAR</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Num Clear key.</div>
        </p>
        <p id="Reference_enums_Key_KP_DIVIDE">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_DIVIDE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad Divide key.</div>
        </p>
        <p id="Reference_enums_Key_KP_MULTIPLY">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_MULTIPLY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad Multiply key.</div>
        </p>
        <p id="Reference_enums_Key_KP_MINUS">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_MINUS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad Minus key.</div>
        </p>
        <p id="Reference_enums_Key_KP_PLUS">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_PLUS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad Plus key.</div>
        </p>
        <p id="Reference_enums_Key_KP_ENTER">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_ENTER</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad Enter key.</div>
        </p>
        <p id="Reference_enums_Key_KP_1">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_1</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 1 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_2">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_2</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 2 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_3">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_3</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 3 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_4">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_4</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 4 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_5">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_5</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 5 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_6">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_6</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 6 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_7">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_7</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 7 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_8">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_8</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 8 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_9">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_9</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 9 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_0">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_0</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad 0 key.</div>
        </p>
        <p id="Reference_enums_Key_KP_PERIOD">
        <h3 style="margin-bottom: 8px;"><code>Key_KP_PERIOD</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Keypad Period key.</div>
        </p>
        <p id="Reference_enums_Key_LCTRL">
        <h3 style="margin-bottom: 8px;"><code>Key_LCTRL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left Ctrl key.</div>
        </p>
        <p id="Reference_enums_Key_LSHIFT">
        <h3 style="margin-bottom: 8px;"><code>Key_LSHIFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left Shift key.</div>
        </p>
        <p id="Reference_enums_Key_LALT">
        <h3 style="margin-bottom: 8px;"><code>Key_LALT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left Alt key.</div>
        </p>
        <p id="Reference_enums_Key_LGUI">
        <h3 style="margin-bottom: 8px;"><code>Key_LGUI</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left GUI key.</div>
        </p>
        <p id="Reference_enums_Key_RCTRL">
        <h3 style="margin-bottom: 8px;"><code>Key_RCTRL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right Ctrl key.</div>
        </p>
        <p id="Reference_enums_Key_RSHIFT">
        <h3 style="margin-bottom: 8px;"><code>Key_RSHIFT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right Shift key.</div>
        </p>
        <p id="Reference_enums_Key_RALT">
        <h3 style="margin-bottom: 8px;"><code>Key_RALT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right Alt key.</div>
        </p>
        <p id="Reference_enums_Key_RGUI">
        <h3 style="margin-bottom: 8px;"><code>Key_RGUI</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right GUI key.</div>
        </p>
        <p id="Reference_enums_Persistence_NONE">
        <h3 style="margin-bottom: 8px;"><code>Persistence_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Doesn't persist between scenes.</div>
        </p>
        <p id="Reference_enums_Persistence_SCENE">
        <h3 style="margin-bottom: 8px;"><code>Persistence_SCENE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Persists between scenes.</div>
        </p>
        <p id="Reference_enums_Persistence_GAME">
        <h3 style="margin-bottom: 8px;"><code>Persistence_GAME</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Always persists, unless the game is restarted.</div>
        </p>
        <p id="Reference_enums_Platform_Windows">
        <h3 style="margin-bottom: 8px;"><code>Platform_Windows</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Windows platform.</div>
        </p>
        <p id="Reference_enums_Platform_MacOS">
        <h3 style="margin-bottom: 8px;"><code>Platform_MacOS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">MacOS platform.</div>
        </p>
        <p id="Reference_enums_Platform_Linux">
        <h3 style="margin-bottom: 8px;"><code>Platform_Linux</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Linux platform.</div>
        </p>
        <p id="Reference_enums_Platform_Switch">
        <h3 style="margin-bottom: 8px;"><code>Platform_Switch</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Nintendo Switch platform.</div>
        </p>
        <p id="Reference_enums_Platform_PlayStation">
        <h3 style="margin-bottom: 8px;"><code>Platform_PlayStation</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">PlayStation platform.</div>
        </p>
        <p id="Reference_enums_Platform_Xbox">
        <h3 style="margin-bottom: 8px;"><code>Platform_Xbox</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Xbox platform.</div>
        </p>
        <p id="Reference_enums_Platform_Android">
        <h3 style="margin-bottom: 8px;"><code>Platform_Android</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Android platform.</div>
        </p>
        <p id="Reference_enums_Platform_iOS">
        <h3 style="margin-bottom: 8px;"><code>Platform_iOS</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">iOS platform.</div>
        </p>
        <p id="Reference_enums_Platform_Unknown">
        <h3 style="margin-bottom: 8px;"><code>Platform_Unknown</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Unknown platform.</div>
        </p>
        <p id="Reference_enums_SCOPE_SCENE">
        <h3 style="margin-bottom: 8px;"><code>SCOPE_SCENE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Scene scope.</div>
        </p>
        <p id="Reference_enums_SCOPE_GAME">
        <h3 style="margin-bottom: 8px;"><code>SCOPE_GAME</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Game scope.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Down">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Down</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Down sensor direction.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Right">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Right</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Right sensor direction.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Up">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Up</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Up sensor direction.</div>
        </p>
        <p id="Reference_enums_SensorDirection_Left">
        <h3 style="margin-bottom: 8px;"><code>SensorDirection_Left</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Left sensor direction.</div>
        </p>
        <p id="Reference_enums_StencilOp_Keep">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_Keep</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Doesn't modify the stencil buffer value (keeps it the same.)</div>
        </p>
        <p id="Reference_enums_StencilOp_Zero">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_Zero</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Sets the stencil buffer value to zero.</div>
        </p>
        <p id="Reference_enums_StencilOp_Incr">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_Incr</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Increases the stencil buffer value, saturating it if it would wrap around (the value is set to a specific maximum.)</div>
        </p>
        <p id="Reference_enums_StencilOp_Decr">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_Decr</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Increases the stencil buffer value, setting it to zero if it would wrap around.</div>
        </p>
        <p id="Reference_enums_StencilOp_Invert">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_Invert</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Inverts the bits of the stencil buffer value.</div>
        </p>
        <p id="Reference_enums_StencilOp_Replace">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_Replace</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Replaces the bits of the stencil buffer value with the masked value.</div>
        </p>
        <p id="Reference_enums_StencilOp_IncrWrap">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_IncrWrap</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Increases the stencil buffer value, letting it wrap around.</div>
        </p>
        <p id="Reference_enums_StencilOp_DecrWrap">
        <h3 style="margin-bottom: 8px;"><code>StencilOp_DecrWrap</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Increases the stencil buffer value, letting it wrap around.</div>
        </p>
        <p id="Reference_enums_StencilTest_Never">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_Never</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Always fails.</div>
        </p>
        <p id="Reference_enums_StencilTest_Always">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_Always</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Always passes.</div>
        </p>
        <p id="Reference_enums_StencilTest_Equal">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_Equal</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Does an "equals" operation.</div>
        </p>
        <p id="Reference_enums_StencilTest_NotEqual">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_NotEqual</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Does a "not equal" operation.</div>
        </p>
        <p id="Reference_enums_StencilTest_Less">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_Less</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Does a "less than" operation.</div>
        </p>
        <p id="Reference_enums_StencilTest_Greater">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_Greater</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Does a "greater than" operation.</div>
        </p>
        <p id="Reference_enums_StencilTest_LEqual">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_LEqual</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Does a "less than or equal to" operation.</div>
        </p>
        <p id="Reference_enums_StencilTest_GEqual">
        <h3 style="margin-bottom: 8px;"><code>StencilTest_GEqual</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Does a "greater than or equal to" operation.</div>
        </p>
        <p id="Reference_enums_TILECOLLISION_NONE">
        <h3 style="margin-bottom: 8px;"><code>TILECOLLISION_NONE</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects no tile collision.</div>
        </p>
        <p id="Reference_enums_TILECOLLISION_DOWN">
        <h3 style="margin-bottom: 8px;"><code>TILECOLLISION_DOWN</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects downward gravity for tile collision.</div>
        </p>
        <p id="Reference_enums_TILECOLLISION_UP">
        <h3 style="margin-bottom: 8px;"><code>TILECOLLISION_UP</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Entity expects upward gravity for tile collision.</div>
        </p>
        <p id="Reference_enums_TimeOfDay_MORNING">
        <h3 style="margin-bottom: 8px;"><code>TimeOfDay_MORNING</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The early hours of the day (5AM to 11AM, or 05:00 to 11:00).</div>
        </p>
        <p id="Reference_enums_TimeOfDay_MIDDAY">
        <h3 style="margin-bottom: 8px;"><code>TimeOfDay_MIDDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The middle hours of the day (12PM to 4PM, or 12:00 to 16:00).</div>
        </p>
        <p id="Reference_enums_TimeOfDay_EVENING">
        <h3 style="margin-bottom: 8px;"><code>TimeOfDay_EVENING</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The later hours of the day (5PM to 8PM, or 17:00 to 20:00).</div>
        </p>
        <p id="Reference_enums_TimeOfDay_NIGHT">
        <h3 style="margin-bottom: 8px;"><code>TimeOfDay_NIGHT</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The very late and very early hours of the day (9PM to 4AM, or 21:00 to 4:00).</div>
        </p>
        <p id="Reference_enums_TintMode_SRC_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>TintMode_SRC_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Tints the source pixel with the tint color.</div>
        </p>
        <p id="Reference_enums_TintMode_DST_NORMAL">
        <h3 style="margin-bottom: 8px;"><code>TintMode_DST_NORMAL</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Tints the destination pixel with the tint color.</div>
        </p>
        <p id="Reference_enums_TintMode_SRC_BLEND">
        <h3 style="margin-bottom: 8px;"><code>TintMode_SRC_BLEND</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blends the source pixel with the tint color.</div>
        </p>
        <p id="Reference_enums_TintMode_DST_BLEND">
        <h3 style="margin-bottom: 8px;"><code>TintMode_DST_BLEND</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Blends the destination pixel with the tint color.</div>
        </p>
        <p id="Reference_enums_Weekday_SUNDAY">
        <h3 style="margin-bottom: 8px;"><code>Weekday_SUNDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The first day of the week.</div>
        </p>
        <p id="Reference_enums_Weekday_MONDAY">
        <h3 style="margin-bottom: 8px;"><code>Weekday_MONDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The second day of the week.</div>
        </p>
        <p id="Reference_enums_Weekday_TUESDAY">
        <h3 style="margin-bottom: 8px;"><code>Weekday_TUESDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The third day of the week.</div>
        </p>
        <p id="Reference_enums_Weekday_WEDNESDAY">
        <h3 style="margin-bottom: 8px;"><code>Weekday_WEDNESDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The fourth day of the week.</div>
        </p>
        <p id="Reference_enums_Weekday_THURSDAY">
        <h3 style="margin-bottom: 8px;"><code>Weekday_THURSDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The fifth day of the week.</div>
        </p>
        <p id="Reference_enums_Weekday_FRIDAY">
        <h3 style="margin-bottom: 8px;"><code>Weekday_FRIDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The sixth day of the week.</div>
        </p>
        <p id="Reference_enums_Weekday_SATURDAY">
        <h3 style="margin-bottom: 8px;"><code>Weekday_SATURDAY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The seventh day of the week.</div>
        </p>
        <p>298 out of 298 enums have descriptions. </p>
        <hr/>
        <h3>Constants</h3>
        <p id="Reference_constants_NUM_CONTROLLER_BUTTONS">
        <h3 style="margin-bottom: 8px;"><code>NUM_CONTROLLER_BUTTONS</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">The amount of buttons in a controller.</div>
        </p>
        <p id="Reference_constants_NUM_CONTROLLER_AXES">
        <h3 style="margin-bottom: 8px;"><code>NUM_CONTROLLER_AXES</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">The amount of axes in a controller.</div>
        </p>
        <p id="Reference_constants_NUM_INPUT_DEVICE_TYPES">
        <h3 style="margin-bottom: 8px;"><code>NUM_INPUT_DEVICE_TYPES</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number of input device types.</div>
        </p>
        <p id="Reference_constants_NUM_INPUT_BIND_TYPES">
        <h3 style="margin-bottom: 8px;"><code>NUM_INPUT_BIND_TYPES</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Number of input bind types.</div>
        </p>
        <p id="Reference_constants_MAX_SCENE_VIEWS">
        <h3 style="margin-bottom: 8px;"><code>MAX_SCENE_VIEWS</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">The max amount of scene views.</div>
        </p>
        <p id="Reference_constants_Math_PI">
        <h3 style="margin-bottom: 8px;"><code>Math_PI</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">The value of pi.</div>
        </p>
        <p id="Reference_constants_Math_PI_DOUBLE">
        <h3 style="margin-bottom: 8px;"><code>Math_PI_DOUBLE</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">Double of the value of pi.</div>
        </p>
        <p id="Reference_constants_Math_PI_HALF">
        <h3 style="margin-bottom: 8px;"><code>Math_PI_HALF</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">Half of the value of pi.</div>
        </p>
        <p id="Reference_constants_Math_R_PI">
        <h3 style="margin-bottom: 8px;"><code>Math_R_PI</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Decimal</div>
        <div style="margin-top: 8px; font-size: 14px;">A less precise value of pi.</div>
        </p>
        <p id="Reference_constants_NUM_KEYBOARD_KEYS">
        <h3 style="margin-bottom: 8px;"><code>NUM_KEYBOARD_KEYS</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Count of keyboard keys.</div>
        </p>
        <p id="Reference_constants_MAX_PALETTE_COUNT">
        <h3 style="margin-bottom: 8px;"><code>MAX_PALETTE_COUNT</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">The max amount of palettes.</div>
        </p>
        <p id="Reference_constants_KeyMod_SHIFT">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_SHIFT</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for either Shift key.</div>
        </p>
        <p id="Reference_constants_KeyMod_CTRL">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_CTRL</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for either Ctrl key.</div>
        </p>
        <p id="Reference_constants_KeyMod_ALT">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_ALT</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for either Alt key.</div>
        </p>
        <p id="Reference_constants_KeyMod_LSHIFT">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_LSHIFT</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Left Shift key.</div>
        </p>
        <p id="Reference_constants_KeyMod_RSHIFT">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_RSHIFT</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Right Shift key.</div>
        </p>
        <p id="Reference_constants_KeyMod_LCTRL">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_LCTRL</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Left Ctrl key.</div>
        </p>
        <p id="Reference_constants_KeyMod_RCTRL">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_RCTRL</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Right Ctrl key.</div>
        </p>
        <p id="Reference_constants_KeyMod_LALT">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_LALT</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Left Alt key.</div>
        </p>
        <p id="Reference_constants_KeyMod_RALT">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_RALT</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Right Alt key.</div>
        </p>
        <p id="Reference_constants_KeyMod_NUMLOCK">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_NUMLOCK</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Num Lock key.</div>
        </p>
        <p id="Reference_constants_KeyMod_CAPSLOCK">
        <h3 style="margin-bottom: 8px;"><code>KeyMod_CAPSLOCK</code></h2>
        <div style="font-size: 14px;"><b>Type: </b>Integer</div>
        <div style="margin-top: 8px; font-size: 14px;">Key modifier for the Caps Lock key.</div>
        </p>
        <p>22 out of 22 constants have descriptions. </p>
        <hr/>
        <h3>Globals</h3>
        <p id="Reference_globals_CameraX">
        <h3 style="margin-bottom: 8px;"><code>CameraX</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The X position of the first camera.</div>
        </p>
        <p id="Reference_globals_CameraY">
        <h3 style="margin-bottom: 8px;"><code>CameraY</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The Y position of the first camera.</div>
        </p>
        <p id="Reference_globals_LowPassFilter">
        <h3 style="margin-bottom: 8px;"><code>LowPassFilter</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The low pass filter of the audio.</div>
        </p>
        <p id="Reference_globals_CurrentView">
        <h3 style="margin-bottom: 8px;"><code>CurrentView</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The current camera index.</div>
        </p>
        <p id="Reference_globals_Scene_Frame">
        <h3 style="margin-bottom: 8px;"><code>Scene_Frame</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The current scene frame.</div>
        </p>
        <p id="Reference_globals_Scene_TimeEnabled">
        <h3 style="margin-bottom: 8px;"><code>Scene_TimeEnabled</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Whether the scene timer is enabled or not.</div>
        </p>
        <p id="Reference_globals_Scene_TimeCounter">
        <h3 style="margin-bottom: 8px;"><code>Scene_TimeCounter</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The current scene timer counter.</div>
        </p>
        <p id="Reference_globals_Scene_Minutes">
        <h3 style="margin-bottom: 8px;"><code>Scene_Minutes</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The minutes value of the scene timer.</div>
        </p>
        <p id="Reference_globals_Scene_Seconds">
        <h3 style="margin-bottom: 8px;"><code>Scene_Seconds</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The seconds value of the scene timer.</div>
        </p>
        <p id="Reference_globals_Scene_Milliseconds">
        <h3 style="margin-bottom: 8px;"><code>Scene_Milliseconds</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The milliseconds value of the scene timer.</div>
        </p>
        <p id="Reference_globals_Scene_Filter">
        <h3 style="margin-bottom: 8px;"><code>Scene_Filter</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The scene's entity filter value.</div>
        </p>
        <p id="Reference_globals_Scene_ListPos">
        <h3 style="margin-bottom: 8px;"><code>Scene_ListPos</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The position of the current scene in the scene list.</div>
        </p>
        <p id="Reference_globals_Scene_ActiveCategory">
        <h3 style="margin-bottom: 8px;"><code>Scene_ActiveCategory</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">The category number that contains the current scene.</div>
        </p>
        <p id="Reference_globals_Scene_DebugMode">
        <h3 style="margin-bottom: 8px;"><code>Scene_DebugMode</code></h2>
        <div style="margin-top: 8px; font-size: 14px;">Whether nor not Debug Mode has been turned on in the current scene</div>
        </p>
        <p>14 out of 14 globals have descriptions. </p>
        <hr/>
    </body>
</html>
